{"ast":null,"code":"var _jsxFileName = \"/home/toebot/dog-services-saas/frontend/src/pages/AppointmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PageHeader from '../components/common/PageHeader';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppointmentForm = () => {\n  _s();\n  const {\n    appointmentId\n  } = useParams();\n  const navigate = useNavigate();\n  const isEditing = appointmentId && appointmentId !== 'new';\n  const [loading, setLoading] = useState(isEditing);\n  const [services, setServices] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredCustomers, setFilteredCustomers] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [showNewCustomerModal, setShowNewCustomerModal] = useState(false);\n  const [venues, setVenues] = useState([]);\n  const [selectedVenue, setSelectedVenue] = useState('');\n  const [availableDates, setAvailableDates] = useState([]);\n  const [newCustomer, setNewCustomer] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const searchContainerRef = useRef(null);\n  const [formData, setFormData] = useState({\n    serviceId: '',\n    customerId: '',\n    customerName: '',\n    date: '',\n    time: '09:00',\n    // Default to 9:00 AM\n    duration: 60,\n    notes: ''\n  });\n  useEffect(() => {\n    // Fetch services, customers, and venues data\n    const fetchFormData = async () => {\n      try {\n        // Fetch venues\n        const venuesResponse = await api.getVenues();\n        setVenues(venuesResponse.data.venues || []);\n\n        // Fetch services\n        const servicesResponse = await api.getServices();\n        setServices(servicesResponse.data.services || []);\n\n        // Fetch customers (using mock data for now)\n        const customersData = [{\n          _id: 'cust1',\n          name: 'John Smith',\n          email: 'john@example.com',\n          phone: '555-123-4567'\n        }, {\n          _id: 'cust2',\n          name: 'Mary Johnson',\n          email: 'mary@example.com',\n          phone: '555-234-5678'\n        }, {\n          _id: 'cust3',\n          name: 'David Williams',\n          email: 'david@example.com',\n          phone: '555-345-6789'\n        }, {\n          _id: 'cust4',\n          name: 'Sarah Miller',\n          email: 'sarah@example.com',\n          phone: '555-456-7890'\n        }, {\n          _id: 'cust5',\n          name: 'James Brown',\n          email: 'james@example.com',\n          phone: '555-567-8901'\n        }, {\n          _id: 'cust6',\n          name: 'Jennifer Davis',\n          email: 'jennifer@example.com',\n          phone: '555-678-9012'\n        }, {\n          _id: 'cust7',\n          name: 'Michael Wilson',\n          email: 'michael@example.com',\n          phone: '555-789-0123'\n        }, {\n          _id: 'cust8',\n          name: 'Linda Martinez',\n          email: 'linda@example.com',\n          phone: '555-890-1234'\n        }, {\n          _id: 'cust9',\n          name: 'Robert Taylor',\n          email: 'robert@example.com',\n          phone: '555-901-2345'\n        }, {\n          _id: 'cust10',\n          name: 'Elizabeth Anderson',\n          email: 'elizabeth@example.com',\n          phone: '555-012-3456'\n        }];\n        setCustomers(customersData);\n        setFilteredCustomers(customersData);\n\n        // If editing, fetch appointment data\n        if (isEditing) {\n          var _appointment$client, _appointment$service, _appointment$client3, _appointment$notes;\n          const appointmentResponse = await api.getBooking(appointmentId);\n          const appointment = appointmentResponse.data.booking;\n\n          // Set customer\n          if ((_appointment$client = appointment.client) !== null && _appointment$client !== void 0 && _appointment$client._id) {\n            var _appointment$client2;\n            setSelectedCustomer(appointment.client._id);\n            setSearchTerm(((_appointment$client2 = appointment.client) === null || _appointment$client2 === void 0 ? void 0 : _appointment$client2.name) || '');\n          }\n\n          // Format the date and time\n          const appointmentDate = new Date(appointment.startTime);\n          const formattedDate = appointmentDate.toISOString().split('T')[0];\n          const formattedTime = appointmentDate.toTimeString().slice(0, 5);\n\n          // Calculate duration in minutes\n          const endTime = new Date(appointment.endTime);\n          const durationMinutes = Math.round((endTime - appointmentDate) / 60000);\n\n          // Set selected venue if it exists\n          if (appointment.location) {\n            setSelectedVenue(appointment.location);\n            // Fetch venue availability\n            await fetchVenueAvailability(appointment.location);\n          }\n          setFormData({\n            serviceId: ((_appointment$service = appointment.service) === null || _appointment$service === void 0 ? void 0 : _appointment$service._id) || '',\n            customerId: ((_appointment$client3 = appointment.client) === null || _appointment$client3 === void 0 ? void 0 : _appointment$client3._id) || '',\n            date: formattedDate,\n            time: formattedTime,\n            duration: durationMinutes,\n            notes: ((_appointment$notes = appointment.notes) === null || _appointment$notes === void 0 ? void 0 : _appointment$notes.client) || '',\n            location: appointment.location || ''\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n        toast.error('Failed to load appointment data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFormData();\n  }, [appointmentId, isEditing]);\n\n  // Filter customers based on search term\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredCustomers(customers);\n      return;\n    }\n    const lowercasedFilter = searchTerm.toLowerCase();\n    const filtered = customers.filter(customer => {\n      return customer.name.toLowerCase().includes(lowercasedFilter) || customer.email.toLowerCase().includes(lowercasedFilter) || customer.phone.toLowerCase().includes(lowercasedFilter);\n    });\n    setFilteredCustomers(filtered);\n    setShowDropdown(true);\n  }, [searchTerm, customers]);\n\n  // Update customer selection\n  useEffect(() => {\n    if (selectedCustomer) {\n      const customer = customers.find(c => c._id === selectedCustomer);\n      setFormData(prev => ({\n        ...prev,\n        customerId: selectedCustomer,\n        customerName: customer ? customer.name : ''\n      }));\n    }\n  }, [selectedCustomer, customers]);\n\n  // Fetch venue availability when a venue is selected\n  const fetchVenueAvailability = async venueId => {\n    try {\n      // Get current date\n      const today = new Date();\n      const endDate = new Date();\n      endDate.setMonth(today.getMonth() + 2); // Look ahead 2 months\n\n      // Get venue availability\n      const availabilityResponse = await api.getVenueAvailability(venueId, {\n        startDate: today.toISOString(),\n        endDate: endDate.toISOString()\n      });\n\n      // Get bookings for this venue\n      const bookingsResponse = await api.getBookings({\n        location: venueId,\n        startDate: today.toISOString(),\n        endDate: endDate.toISOString()\n      });\n\n      // Extract booked dates\n      const bookings = bookingsResponse.data.bookings || [];\n      const bookedDates = bookings.map(booking => {\n        const date = new Date(booking.startTime);\n        return date.toISOString().split('T')[0];\n      });\n\n      // Generate available dates (for demo purposes, we'll create a range of dates)\n      const availableDatesList = [];\n      const daysToGenerate = 60; // Generate 60 days\n\n      for (let i = 0; i < daysToGenerate; i++) {\n        const date = new Date();\n        date.setDate(date.getDate() + i);\n        const dateStr = date.toISOString().split('T')[0];\n\n        // For this venue, make many dates available (only occasionally skip a date)\n        const randomSkip = Math.random() > 0.9; // Only 10% chance to skip a date\n        if (!randomSkip) {\n          availableDatesList.push({\n            date: dateStr,\n            formatted: new Date(dateStr).toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'short',\n              day: 'numeric'\n            })\n          });\n        }\n      }\n      setAvailableDates(availableDatesList);\n    } catch (error) {\n      console.error('Error fetching venue availability:', error);\n      toast.error('Failed to load venue availability');\n    }\n  };\n\n  // Handle venue selection\n  useEffect(() => {\n    if (selectedVenue) {\n      fetchVenueAvailability(selectedVenue);\n\n      // Update the form data with the selected venue\n      setFormData(prev => ({\n        ...prev,\n        location: selectedVenue\n      }));\n    }\n  }, [selectedVenue]);\n\n  // Handle new customer submission\n  const handleNewCustomerSubmit = async () => {\n    // Validate form\n    if (!newCustomer.name || !newCustomer.email || !newCustomer.phone) {\n      toast.error('Please fill all required fields');\n      return;\n    }\n    try {\n      // Create new customer\n      const response = await api.createOrUpdateCustomer({\n        name: newCustomer.name,\n        email: newCustomer.email,\n        phone: newCustomer.phone\n      });\n      const createdCustomer = response.data.customer;\n\n      // Add to customers list\n      setCustomers([...customers, createdCustomer]);\n\n      // Select the new customer\n      setSelectedCustomer(createdCustomer._id);\n      setSearchTerm(createdCustomer.name);\n\n      // Close modal\n      setShowNewCustomerModal(false);\n\n      // Reset form\n      setNewCustomer({\n        name: '',\n        email: '',\n        phone: ''\n      });\n      toast.success('Customer created successfully');\n    } catch (error) {\n      console.error('Error creating customer:', error);\n      toast.error('Failed to create customer');\n    }\n  };\n\n  // Handle new customer input changes\n  const handleNewCustomerChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCustomer({\n      ...newCustomer,\n      [name]: value\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleCustomerSearch = e => {\n    setSearchTerm(e.target.value);\n    setFormData({\n      ...formData,\n      customerName: e.target.value,\n      customerId: ''\n    });\n  };\n  const handleSelectCustomer = customer => {\n    setSelectedCustomer(customer._id);\n    setSearchTerm(customer.name);\n    setFormData({\n      ...formData,\n      customerId: customer._id,\n      customerName: customer.name\n    });\n    setShowDropdown(false);\n  };\n  const handleCreateNewCustomer = () => {\n    // Set the new customer's name to the search term\n    setNewCustomer({\n      ...newCustomer,\n      name: searchTerm\n    });\n    setShowNewCustomerModal(true);\n    setShowDropdown(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate if a customer is selected\n    if (!formData.customerId) {\n      toast.error('Please select a customer from the search results');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Format date and time for API\n      const startTime = new Date(`${formData.date}T${formData.time}`);\n      const endTime = new Date(startTime.getTime() + formData.duration * 60000);\n\n      // Find selected customer and service details for richer data storage\n      const selectedCustomer = customers.find(cust => cust._id === formData.customerId) || {};\n      const selectedService = services.find(svc => svc._id === formData.serviceId) || {};\n      const appointmentData = {\n        service: {\n          _id: formData.serviceId,\n          title: selectedService.title || 'Unknown Service'\n        },\n        client: {\n          _id: formData.customerId,\n          name: selectedCustomer.name || 'Unknown Customer',\n          email: selectedCustomer.email || ''\n        },\n        startTime: startTime.toISOString(),\n        endTime: endTime.toISOString(),\n        notes: {\n          client: formData.notes\n        },\n        status: 'pending',\n        location: 'In-store'\n      };\n\n      // Create or update appointment\n      if (isEditing) {\n        await api.updateBooking(appointmentId, appointmentData);\n        toast.success('Appointment updated successfully');\n      } else {\n        await api.createBooking(appointmentData);\n        toast.success('Appointment created successfully');\n      }\n\n      // Navigate back to appointments list\n      navigate('/appointments');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error saving appointment:', error);\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to save appointment');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Close dropdown when clicking outside\n  const handleClickOutside = event => {\n    if (searchContainerRef.current && !searchContainerRef.current.contains(event.target)) {\n      setShowDropdown(false);\n    }\n  };\n\n  // Add event listener for clicking outside\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: isEditing ? 'Edit Booking' : 'New Booking',\n        backLink: \"/bookings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          maxWidth: '600px',\n          margin: '0 auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"location\",\n                children: \"Venue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"location\",\n                name: \"location\",\n                className: \"form-control\",\n                value: formData.location || '',\n                onChange: e => {\n                  handleInputChange(e);\n                  setSelectedVenue(e.target.value);\n                },\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a venue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 19\n                }, this), venues.map(venue => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: venue.id,\n                  children: venue.name\n                }, venue.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"customerSearch\",\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"customer-search-container\",\n                ref: searchContainerRef,\n                style: {\n                  position: 'relative'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"customerSearch\",\n                  name: \"customerSearch\",\n                  className: \"form-control\",\n                  placeholder: \"Search by name, email, or phone\",\n                  value: searchTerm,\n                  onChange: handleCustomerSearch,\n                  onFocus: () => setShowDropdown(true),\n                  autoComplete: \"off\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 19\n                }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"customer-search-results\",\n                  style: {\n                    position: 'absolute',\n                    width: '100%',\n                    maxHeight: '200px',\n                    overflow: 'auto',\n                    backgroundColor: '#fff',\n                    border: '1px solid #ddd',\n                    borderTop: 'none',\n                    zIndex: 10,\n                    boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                  },\n                  children: filteredCustomers.length > 0 ? filteredCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"customer-search-item\",\n                    onClick: () => handleSelectCustomer(customer),\n                    style: {\n                      padding: '8px 15px',\n                      cursor: 'pointer',\n                      borderBottom: '1px solid #eee',\n                      borderLeft: `3px solid ${customer._id === selectedCustomer ? '#4a90e2' : 'transparent'}`,\n                      backgroundColor: customer._id === selectedCustomer ? '#f0f7ff' : 'transparent'\n                    },\n                    onMouseEnter: e => e.currentTarget.style.backgroundColor = '#f5f5f5',\n                    onMouseLeave: e => e.currentTarget.style.backgroundColor = customer._id === selectedCustomer ? '#f0f7ff' : 'transparent',\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontWeight: 'bold'\n                      },\n                      children: customer.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontSize: '0.85em',\n                        color: '#666'\n                      },\n                      children: [customer.email, \" \\u2022 \", customer.phone]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 29\n                    }, this)]\n                  }, customer._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 27\n                  }, this)) : searchTerm.trim() !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"create-new-customer\",\n                    onClick: handleCreateNewCustomer,\n                    style: {\n                      padding: '12px 15px',\n                      cursor: 'pointer',\n                      borderBottom: '1px solid #eee',\n                      backgroundColor: '#f8f9fa',\n                      color: '#0d6efd',\n                      textAlign: 'center',\n                      fontWeight: 'bold'\n                    },\n                    onMouseEnter: e => e.currentTarget.style.backgroundColor = '#e9ecef',\n                    onMouseLeave: e => e.currentTarget.style.backgroundColor = '#f8f9fa',\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-plus-circle\",\n                      style: {\n                        marginRight: '8px'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 29\n                    }, this), \"Create new customer: \\\"\", searchTerm, \"\\\"\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"hidden\",\n                  name: \"customerId\",\n                  value: formData.customerId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), selectedVenue && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Available Dates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"available-dates-container\",\n                style: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: '10px',\n                  marginBottom: '15px'\n                },\n                children: availableDates.length > 0 ? availableDates.slice(0, 14).map(dateObj => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `date-option ${formData.date === dateObj.date ? 'selected' : ''}`,\n                  onClick: () => setFormData({\n                    ...formData,\n                    date: dateObj.date\n                  }),\n                  style: {\n                    padding: '8px 12px',\n                    border: formData.date === dateObj.date ? '2px solid #4a90e2' : '1px solid #ddd',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    backgroundColor: formData.date === dateObj.date ? '#f0f7ff' : '#fff',\n                    minWidth: '90px',\n                    textAlign: 'center'\n                  },\n                  children: dateObj.formatted\n                }, dateObj.date, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"no-dates-available\",\n                  style: {\n                    padding: '15px',\n                    backgroundColor: '#f8d7da',\n                    color: '#721c24',\n                    borderRadius: '4px',\n                    width: '100%',\n                    textAlign: 'center'\n                  },\n                  children: \"No available dates for this venue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }, this), availableDates.length > 14 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center',\n                  marginTop: '-5px',\n                  marginBottom: '15px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-link\",\n                  style: {\n                    padding: '0',\n                    fontSize: '0.9rem'\n                  },\n                  onClick: () => {/* Show more dates logic */},\n                  children: \"Show more dates...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), formData.date && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                style: {\n                  flex: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"time\",\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time-picker-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"time\",\n                    name: \"time\",\n                    className: \"form-control\",\n                    value: formData.time,\n                    onChange: handleInputChange,\n                    required: true,\n                    style: {\n                      appearance: 'menulist',\n                      backgroundImage: 'none',\n                      paddingRight: '8px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"optgroup\", {\n                      label: \"Morning\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"08:00\",\n                        children: \"8:00 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 577,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"08:30\",\n                        children: \"8:30 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 578,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"09:00\",\n                        children: \"9:00 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 579,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"09:30\",\n                        children: \"9:30 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 580,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"10:00\",\n                        children: \"10:00 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 581,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"10:30\",\n                        children: \"10:30 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 582,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"11:00\",\n                        children: \"11:00 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 583,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"11:30\",\n                        children: \"11:30 AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 584,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 576,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                      label: \"Afternoon\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"12:00\",\n                        children: \"12:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 588,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"12:30\",\n                        children: \"12:30 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 589,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"13:00\",\n                        children: \"1:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 590,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"13:30\",\n                        children: \"1:30 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 591,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"14:00\",\n                        children: \"2:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 592,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"14:30\",\n                        children: \"2:30 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 593,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"15:00\",\n                        children: \"3:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 594,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"15:30\",\n                        children: \"3:30 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 595,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"16:00\",\n                        children: \"4:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 596,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"16:30\",\n                        children: \"4:30 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 597,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"17:00\",\n                        children: \"5:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 598,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"17:30\",\n                        children: \"5:30 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 599,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 587,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                      label: \"Evening\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"18:00\",\n                        children: \"6:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 603,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"18:30\",\n                        children: \"6:30 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 604,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"19:00\",\n                        children: \"7:00 PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 605,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 602,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"duration\",\n                children: \"Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"duration\",\n                name: \"duration\",\n                className: \"form-control\",\n                value: formData.duration,\n                onChange: handleInputChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"60\",\n                  children: \"1 hour\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"90\",\n                  children: \"1.5 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"120\",\n                  children: \"2 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"180\",\n                  children: \"3 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"240\",\n                  children: \"4 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"300\",\n                  children: \"5 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"360\",\n                  children: \"6 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"480\",\n                  children: \"8 hours (Full day)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"720\",\n                  children: \"12 hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1440\",\n                  children: \"24 hours (Overnight)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"notes\",\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"notes\",\n                name: \"notes\",\n                className: \"form-control\",\n                value: formData.notes,\n                onChange: handleInputChange,\n                rows: \"3\",\n                placeholder: \"Add any special requirements, setup instructions, or equipment needs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-actions\",\n              style: {\n                display: 'flex',\n                justifyContent: 'flex-end',\n                gap: '10px',\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-secondary\",\n                onClick: () => navigate('/bookings'),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: isEditing ? 'Update Booking' : 'Create Booking'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), showNewCustomerModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      style: {\n        display: 'block',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        style: {\n          margin: '60px auto',\n          maxWidth: '500px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: \"Create New Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              onClick: () => setShowNewCustomerModal(false),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"name\",\n                  value: newCustomer.name,\n                  onChange: handleNewCustomerChange,\n                  placeholder: \"Enter full name\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  name: \"email\",\n                  value: newCustomer.email,\n                  onChange: handleNewCustomerChange,\n                  placeholder: \"Enter email address\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Phone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"tel\",\n                  className: \"form-control\",\n                  name: \"phone\",\n                  value: newCustomer.phone,\n                  onChange: handleNewCustomerChange,\n                  placeholder: \"Enter phone number\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: () => setShowNewCustomerModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: handleNewCustomerSubmit,\n              children: \"Create Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(AppointmentForm, \"sHZg/niq+UHHg3j29wSuW6uBEt4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AppointmentForm;\nexport default AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","toast","PageHeader","LoadingSpinner","api","jsxDEV","_jsxDEV","Fragment","_Fragment","AppointmentForm","_s","appointmentId","navigate","isEditing","loading","setLoading","services","setServices","customers","setCustomers","selectedCustomer","setSelectedCustomer","searchTerm","setSearchTerm","filteredCustomers","setFilteredCustomers","showDropdown","setShowDropdown","showNewCustomerModal","setShowNewCustomerModal","venues","setVenues","selectedVenue","setSelectedVenue","availableDates","setAvailableDates","newCustomer","setNewCustomer","name","email","phone","searchContainerRef","formData","setFormData","serviceId","customerId","customerName","date","time","duration","notes","fetchFormData","venuesResponse","getVenues","data","servicesResponse","getServices","customersData","_id","_appointment$client","_appointment$service","_appointment$client3","_appointment$notes","appointmentResponse","getBooking","appointment","booking","client","_appointment$client2","appointmentDate","Date","startTime","formattedDate","toISOString","split","formattedTime","toTimeString","slice","endTime","durationMinutes","Math","round","location","fetchVenueAvailability","service","error","console","trim","lowercasedFilter","toLowerCase","filtered","filter","customer","includes","find","c","prev","venueId","today","endDate","setMonth","getMonth","availabilityResponse","getVenueAvailability","startDate","bookingsResponse","getBookings","bookings","bookedDates","map","availableDatesList","daysToGenerate","i","setDate","getDate","dateStr","randomSkip","random","push","formatted","toLocaleDateString","weekday","month","day","handleNewCustomerSubmit","response","createOrUpdateCustomer","createdCustomer","success","handleNewCustomerChange","e","value","target","handleInputChange","handleCustomerSearch","handleSelectCustomer","handleCreateNewCustomer","handleSubmit","preventDefault","getTime","cust","selectedService","svc","appointmentData","title","status","updateBooking","createBooking","_error$response","_error$response$data","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","fileName","_jsxFileName","lineNumber","columnNumber","children","className","backLink","style","maxWidth","margin","onSubmit","htmlFor","id","onChange","required","venue","ref","position","type","placeholder","onFocus","autoComplete","width","maxHeight","overflow","backgroundColor","border","borderTop","zIndex","boxShadow","length","onClick","padding","cursor","borderBottom","borderLeft","onMouseEnter","currentTarget","onMouseLeave","fontWeight","fontSize","color","textAlign","marginRight","display","flexWrap","gap","marginBottom","dateObj","borderRadius","minWidth","marginTop","flex","appearance","backgroundImage","paddingRight","label","rows","justifyContent","top","left","height","_c","$RefreshReg$"],"sources":["/home/toebot/dog-services-saas/frontend/src/pages/AppointmentForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PageHeader from '../components/common/PageHeader';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport api from '../services/api';\n\nconst AppointmentForm = () => {\n  const { appointmentId } = useParams();\n  const navigate = useNavigate();\n  const isEditing = appointmentId && appointmentId !== 'new';\n  \n  const [loading, setLoading] = useState(isEditing);\n  const [services, setServices] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredCustomers, setFilteredCustomers] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [showNewCustomerModal, setShowNewCustomerModal] = useState(false);\n  const [venues, setVenues] = useState([]);\n  const [selectedVenue, setSelectedVenue] = useState('');\n  const [availableDates, setAvailableDates] = useState([]);\n  const [newCustomer, setNewCustomer] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const searchContainerRef = useRef(null);\n  \n  const [formData, setFormData] = useState({\n    serviceId: '',\n    customerId: '',\n    customerName: '',\n    date: '',\n    time: '09:00', // Default to 9:00 AM\n    duration: 60,\n    notes: '',\n  });\n\n  useEffect(() => {\n    // Fetch services, customers, and venues data\n    const fetchFormData = async () => {\n      try {\n        // Fetch venues\n        const venuesResponse = await api.getVenues();\n        setVenues(venuesResponse.data.venues || []);\n        \n        // Fetch services\n        const servicesResponse = await api.getServices();\n        setServices(servicesResponse.data.services || []);\n        \n        // Fetch customers (using mock data for now)\n        const customersData = [\n          { _id: 'cust1', name: 'John Smith', email: 'john@example.com', phone: '555-123-4567' },\n          { _id: 'cust2', name: 'Mary Johnson', email: 'mary@example.com', phone: '555-234-5678' },\n          { _id: 'cust3', name: 'David Williams', email: 'david@example.com', phone: '555-345-6789' },\n          { _id: 'cust4', name: 'Sarah Miller', email: 'sarah@example.com', phone: '555-456-7890' },\n          { _id: 'cust5', name: 'James Brown', email: 'james@example.com', phone: '555-567-8901' },\n          { _id: 'cust6', name: 'Jennifer Davis', email: 'jennifer@example.com', phone: '555-678-9012' },\n          { _id: 'cust7', name: 'Michael Wilson', email: 'michael@example.com', phone: '555-789-0123' },\n          { _id: 'cust8', name: 'Linda Martinez', email: 'linda@example.com', phone: '555-890-1234' },\n          { _id: 'cust9', name: 'Robert Taylor', email: 'robert@example.com', phone: '555-901-2345' },\n          { _id: 'cust10', name: 'Elizabeth Anderson', email: 'elizabeth@example.com', phone: '555-012-3456' },\n        ];\n        setCustomers(customersData);\n        setFilteredCustomers(customersData);\n        \n        // If editing, fetch appointment data\n        if (isEditing) {\n          const appointmentResponse = await api.getBooking(appointmentId);\n          const appointment = appointmentResponse.data.booking;\n          \n          // Set customer\n          if (appointment.client?._id) {\n            setSelectedCustomer(appointment.client._id);\n            setSearchTerm(appointment.client?.name || '');\n          }\n          \n          // Format the date and time\n          const appointmentDate = new Date(appointment.startTime);\n          const formattedDate = appointmentDate.toISOString().split('T')[0];\n          const formattedTime = appointmentDate.toTimeString().slice(0, 5);\n          \n          // Calculate duration in minutes\n          const endTime = new Date(appointment.endTime);\n          const durationMinutes = Math.round((endTime - appointmentDate) / 60000);\n          \n          // Set selected venue if it exists\n          if (appointment.location) {\n            setSelectedVenue(appointment.location);\n            // Fetch venue availability\n            await fetchVenueAvailability(appointment.location);\n          }\n          \n          setFormData({\n            serviceId: appointment.service?._id || '',\n            customerId: appointment.client?._id || '',\n            date: formattedDate,\n            time: formattedTime,\n            duration: durationMinutes,\n            notes: appointment.notes?.client || '',\n            location: appointment.location || '',\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n        toast.error('Failed to load appointment data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchFormData();\n  }, [appointmentId, isEditing]);\n  \n  // Filter customers based on search term\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredCustomers(customers);\n      return;\n    }\n    \n    const lowercasedFilter = searchTerm.toLowerCase();\n    const filtered = customers.filter(customer => {\n      return (\n        customer.name.toLowerCase().includes(lowercasedFilter) ||\n        customer.email.toLowerCase().includes(lowercasedFilter) ||\n        customer.phone.toLowerCase().includes(lowercasedFilter)\n      );\n    });\n    \n    setFilteredCustomers(filtered);\n    setShowDropdown(true);\n  }, [searchTerm, customers]);\n  \n  // Update customer selection\n  useEffect(() => {\n    if (selectedCustomer) {\n      const customer = customers.find(c => c._id === selectedCustomer);\n      setFormData(prev => ({\n        ...prev,\n        customerId: selectedCustomer,\n        customerName: customer ? customer.name : '',\n      }));\n    }\n  }, [selectedCustomer, customers]);\n  \n  // Fetch venue availability when a venue is selected\n  const fetchVenueAvailability = async (venueId) => {\n    try {\n      // Get current date\n      const today = new Date();\n      const endDate = new Date();\n      endDate.setMonth(today.getMonth() + 2); // Look ahead 2 months\n      \n      // Get venue availability\n      const availabilityResponse = await api.getVenueAvailability(venueId, {\n        startDate: today.toISOString(),\n        endDate: endDate.toISOString()\n      });\n      \n      // Get bookings for this venue\n      const bookingsResponse = await api.getBookings({\n        location: venueId,\n        startDate: today.toISOString(),\n        endDate: endDate.toISOString()\n      });\n      \n      // Extract booked dates\n      const bookings = bookingsResponse.data.bookings || [];\n      const bookedDates = bookings.map(booking => {\n        const date = new Date(booking.startTime);\n        return date.toISOString().split('T')[0];\n      });\n      \n      // Generate available dates (for demo purposes, we'll create a range of dates)\n      const availableDatesList = [];\n      const daysToGenerate = 60; // Generate 60 days\n      \n      for (let i = 0; i < daysToGenerate; i++) {\n        const date = new Date();\n        date.setDate(date.getDate() + i);\n        const dateStr = date.toISOString().split('T')[0];\n        \n        // For this venue, make many dates available (only occasionally skip a date)\n        const randomSkip = Math.random() > 0.9; // Only 10% chance to skip a date\n        if (!randomSkip) {\n          availableDatesList.push({\n            date: dateStr,\n            formatted: new Date(dateStr).toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'short',\n              day: 'numeric'\n            })\n          });\n        }\n      }\n      \n      setAvailableDates(availableDatesList);\n    } catch (error) {\n      console.error('Error fetching venue availability:', error);\n      toast.error('Failed to load venue availability');\n    }\n  };\n  \n  // Handle venue selection\n  useEffect(() => {\n    if (selectedVenue) {\n      fetchVenueAvailability(selectedVenue);\n      \n      // Update the form data with the selected venue\n      setFormData(prev => ({\n        ...prev,\n        location: selectedVenue\n      }));\n    }\n  }, [selectedVenue]);\n  \n  // Handle new customer submission\n  const handleNewCustomerSubmit = async () => {\n    // Validate form\n    if (!newCustomer.name || !newCustomer.email || !newCustomer.phone) {\n      toast.error('Please fill all required fields');\n      return;\n    }\n    \n    try {\n      // Create new customer\n      const response = await api.createOrUpdateCustomer({\n        name: newCustomer.name,\n        email: newCustomer.email,\n        phone: newCustomer.phone\n      });\n      \n      const createdCustomer = response.data.customer;\n      \n      // Add to customers list\n      setCustomers([...customers, createdCustomer]);\n      \n      // Select the new customer\n      setSelectedCustomer(createdCustomer._id);\n      setSearchTerm(createdCustomer.name);\n      \n      // Close modal\n      setShowNewCustomerModal(false);\n      \n      // Reset form\n      setNewCustomer({\n        name: '',\n        email: '',\n        phone: ''\n      });\n      \n      toast.success('Customer created successfully');\n    } catch (error) {\n      console.error('Error creating customer:', error);\n      toast.error('Failed to create customer');\n    }\n  };\n  \n  // Handle new customer input changes\n  const handleNewCustomerChange = (e) => {\n    const { name, value } = e.target;\n    setNewCustomer({\n      ...newCustomer,\n      [name]: value\n    });\n  };\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  \n  const handleCustomerSearch = (e) => {\n    setSearchTerm(e.target.value);\n    setFormData({\n      ...formData,\n      customerName: e.target.value,\n      customerId: '',\n    });\n  };\n  \n  const handleSelectCustomer = (customer) => {\n    setSelectedCustomer(customer._id);\n    setSearchTerm(customer.name);\n    setFormData({\n      ...formData,\n      customerId: customer._id,\n      customerName: customer.name,\n    });\n    setShowDropdown(false);\n  };\n  \n  const handleCreateNewCustomer = () => {\n    // Set the new customer's name to the search term\n    setNewCustomer({\n      ...newCustomer,\n      name: searchTerm\n    });\n    setShowNewCustomerModal(true);\n    setShowDropdown(false);\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate if a customer is selected\n    if (!formData.customerId) {\n      toast.error('Please select a customer from the search results');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      // Format date and time for API\n      const startTime = new Date(`${formData.date}T${formData.time}`);\n      const endTime = new Date(startTime.getTime() + formData.duration * 60000);\n      \n      // Find selected customer and service details for richer data storage\n      const selectedCustomer = customers.find(cust => cust._id === formData.customerId) || {};\n      const selectedService = services.find(svc => svc._id === formData.serviceId) || {};\n      \n      const appointmentData = {\n        service: {\n          _id: formData.serviceId,\n          title: selectedService.title || 'Unknown Service'\n        },\n        client: {\n          _id: formData.customerId,\n          name: selectedCustomer.name || 'Unknown Customer',\n          email: selectedCustomer.email || ''\n        },\n        startTime: startTime.toISOString(),\n        endTime: endTime.toISOString(),\n        notes: {\n          client: formData.notes,\n        },\n        status: 'pending',\n        location: 'In-store'\n      };\n      \n      // Create or update appointment\n      if (isEditing) {\n        await api.updateBooking(appointmentId, appointmentData);\n        toast.success('Appointment updated successfully');\n      } else {\n        await api.createBooking(appointmentData);\n        toast.success('Appointment created successfully');\n      }\n      \n      // Navigate back to appointments list\n      navigate('/appointments');\n    } catch (error) {\n      console.error('Error saving appointment:', error);\n      toast.error(error.response?.data?.error || 'Failed to save appointment');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Close dropdown when clicking outside\n  const handleClickOutside = (event) => {\n    if (searchContainerRef.current && !searchContainerRef.current.contains(event.target)) {\n      setShowDropdown(false);\n    }\n  };\n  \n  // Add event listener for clicking outside\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  \n  if (loading) {\n    return <LoadingSpinner />;\n  }\n  \n  return (\n    <>\n      <div className=\"page-container\">\n        <PageHeader \n          title={isEditing ? 'Edit Booking' : 'New Booking'} \n          backLink=\"/bookings\"\n        />\n        \n        <div className=\"card\" style={{ maxWidth: '600px', margin: '0 auto' }}>\n          <div className=\"card-body\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"location\">Venue</label>\n                <select\n                  id=\"location\" \n                  name=\"location\" \n                  className=\"form-control\"\n                  value={formData.location || ''}\n                  onChange={(e) => {\n                    handleInputChange(e);\n                    setSelectedVenue(e.target.value);\n                  }}\n                  required\n                >\n                  <option value=\"\">Select a venue</option>\n                  {venues.map(venue => (\n                    <option key={venue.id} value={venue.id}>\n                      {venue.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"customerSearch\">Customer</label>\n                <div className=\"customer-search-container\" ref={searchContainerRef} style={{ position: 'relative' }}>\n                  <input\n                    type=\"text\"\n                    id=\"customerSearch\"\n                    name=\"customerSearch\"\n                    className=\"form-control\"\n                    placeholder=\"Search by name, email, or phone\"\n                    value={searchTerm}\n                    onChange={handleCustomerSearch}\n                    onFocus={() => setShowDropdown(true)}\n                    autoComplete=\"off\"\n                    required\n                  />\n                  {showDropdown && (\n                    <div className=\"customer-search-results\" style={{\n                      position: 'absolute',\n                      width: '100%',\n                      maxHeight: '200px',\n                      overflow: 'auto',\n                      backgroundColor: '#fff',\n                      border: '1px solid #ddd',\n                      borderTop: 'none',\n                      zIndex: 10,\n                      boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                    }}>\n                      {filteredCustomers.length > 0 ? (\n                        filteredCustomers.map(customer => (\n                          <div\n                            key={customer._id}\n                            className=\"customer-search-item\"\n                            onClick={() => handleSelectCustomer(customer)}\n                            style={{\n                              padding: '8px 15px',\n                              cursor: 'pointer',\n                              borderBottom: '1px solid #eee',\n                              borderLeft: `3px solid ${customer._id === selectedCustomer ? '#4a90e2' : 'transparent'}`,\n                              backgroundColor: customer._id === selectedCustomer ? '#f0f7ff' : 'transparent'\n                            }}\n                            onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#f5f5f5'}\n                            onMouseLeave={(e) => e.currentTarget.style.backgroundColor = customer._id === selectedCustomer ? '#f0f7ff' : 'transparent'}\n                          >\n                            <div style={{ fontWeight: 'bold' }}>{customer.name}</div>\n                            <div style={{ fontSize: '0.85em', color: '#666' }}>\n                              {customer.email} • {customer.phone}\n                            </div>\n                          </div>\n                        ))\n                      ) : (\n                        searchTerm.trim() !== '' && (\n                          <div\n                            className=\"create-new-customer\"\n                            onClick={handleCreateNewCustomer}\n                            style={{\n                              padding: '12px 15px',\n                              cursor: 'pointer',\n                              borderBottom: '1px solid #eee',\n                              backgroundColor: '#f8f9fa',\n                              color: '#0d6efd',\n                              textAlign: 'center',\n                              fontWeight: 'bold'\n                            }}\n                            onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#e9ecef'}\n                            onMouseLeave={(e) => e.currentTarget.style.backgroundColor = '#f8f9fa'}\n                          >\n                            <i className=\"fas fa-plus-circle\" style={{ marginRight: '8px' }}></i>\n                            Create new customer: \"{searchTerm}\"\n                          </div>\n                        )\n                      )}\n                    </div>\n                  )}\n                  {/* Hidden input to store the customer ID for form submission */}\n                  <input\n                    type=\"hidden\"\n                    name=\"customerId\"\n                    value={formData.customerId}\n                  />\n                </div>\n              </div>\n              \n              {selectedVenue && (\n                <div className=\"form-group\">\n                  <label>Available Dates</label>\n                  <div className=\"available-dates-container\" style={{ \n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    gap: '10px',\n                    marginBottom: '15px'\n                  }}>\n                    {availableDates.length > 0 ? (\n                      availableDates.slice(0, 14).map(dateObj => (\n                        <div\n                          key={dateObj.date}\n                          className={`date-option ${formData.date === dateObj.date ? 'selected' : ''}`}\n                          onClick={() => setFormData({...formData, date: dateObj.date})}\n                          style={{\n                            padding: '8px 12px',\n                            border: formData.date === dateObj.date ? '2px solid #4a90e2' : '1px solid #ddd',\n                            borderRadius: '4px',\n                            cursor: 'pointer',\n                            backgroundColor: formData.date === dateObj.date ? '#f0f7ff' : '#fff',\n                            minWidth: '90px',\n                            textAlign: 'center'\n                          }}\n                        >\n                          {dateObj.formatted}\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"no-dates-available\" style={{\n                        padding: '15px',\n                        backgroundColor: '#f8d7da',\n                        color: '#721c24',\n                        borderRadius: '4px',\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>\n                        No available dates for this venue\n                      </div>\n                    )}\n                  </div>\n                  {availableDates.length > 14 && (\n                    <div style={{ textAlign: 'center', marginTop: '-5px', marginBottom: '15px' }}>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        style={{ padding: '0', fontSize: '0.9rem' }}\n                        onClick={() => {/* Show more dates logic */}}\n                      >\n                        Show more dates...\n                      </button>\n                    </div>\n                  )}\n                </div>\n              )}\n              \n              {formData.date && (\n                <div className=\"form-row\">\n                  <div className=\"form-group\" style={{ flex: 1 }}>\n                    <label htmlFor=\"time\">Time</label>\n                    <div className=\"time-picker-container\">\n                      <select\n                        id=\"time\"\n                        name=\"time\"\n                        className=\"form-control\"\n                        value={formData.time}\n                        onChange={handleInputChange}\n                        required\n                        style={{ \n                          appearance: 'menulist',\n                          backgroundImage: 'none',\n                          paddingRight: '8px'\n                        }}\n                      >\n                        {/* Morning slots */}\n                        <optgroup label=\"Morning\">\n                          <option value=\"08:00\">8:00 AM</option>\n                          <option value=\"08:30\">8:30 AM</option>\n                          <option value=\"09:00\">9:00 AM</option>\n                          <option value=\"09:30\">9:30 AM</option>\n                          <option value=\"10:00\">10:00 AM</option>\n                          <option value=\"10:30\">10:30 AM</option>\n                          <option value=\"11:00\">11:00 AM</option>\n                          <option value=\"11:30\">11:30 AM</option>\n                        </optgroup>\n                        {/* Afternoon slots */}\n                        <optgroup label=\"Afternoon\">\n                          <option value=\"12:00\">12:00 PM</option>\n                          <option value=\"12:30\">12:30 PM</option>\n                          <option value=\"13:00\">1:00 PM</option>\n                          <option value=\"13:30\">1:30 PM</option>\n                          <option value=\"14:00\">2:00 PM</option>\n                          <option value=\"14:30\">2:30 PM</option>\n                          <option value=\"15:00\">3:00 PM</option>\n                          <option value=\"15:30\">3:30 PM</option>\n                          <option value=\"16:00\">4:00 PM</option>\n                          <option value=\"16:30\">4:30 PM</option>\n                          <option value=\"17:00\">5:00 PM</option>\n                          <option value=\"17:30\">5:30 PM</option>\n                        </optgroup>\n                        {/* Evening slots */}\n                        <optgroup label=\"Evening\">\n                          <option value=\"18:00\">6:00 PM</option>\n                          <option value=\"18:30\">6:30 PM</option>\n                          <option value=\"19:00\">7:00 PM</option>\n                        </optgroup>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"duration\">Duration</label>\n                <select\n                  id=\"duration\" \n                  name=\"duration\" \n                  className=\"form-control\"\n                  value={formData.duration}\n                  onChange={handleInputChange}\n                  required\n                >\n                  <option value=\"60\">1 hour</option>\n                  <option value=\"90\">1.5 hours</option>\n                  <option value=\"120\">2 hours</option>\n                  <option value=\"180\">3 hours</option>\n                  <option value=\"240\">4 hours</option>\n                  <option value=\"300\">5 hours</option>\n                  <option value=\"360\">6 hours</option>\n                  <option value=\"480\">8 hours (Full day)</option>\n                  <option value=\"720\">12 hours</option>\n                  <option value=\"1440\">24 hours (Overnight)</option>\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"notes\">Notes</label>\n                <textarea \n                  id=\"notes\" \n                  name=\"notes\" \n                  className=\"form-control\"\n                  value={formData.notes}\n                  onChange={handleInputChange}\n                  rows=\"3\"\n                  placeholder=\"Add any special requirements, setup instructions, or equipment needs\"\n                ></textarea>\n              </div>\n              \n              <div className=\"form-actions\" style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px', marginTop: '20px' }}>\n                <button \n                  type=\"button\" \n                  className=\"btn btn-outline-secondary\"\n                  onClick={() => navigate('/bookings')}\n                >\n                  Cancel\n                </button>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  {isEditing ? 'Update Booking' : 'Create Booking'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      \n      {showNewCustomerModal && (\n        <div className=\"modal\" style={{\n          display: 'block',\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          zIndex: 1000\n        }}>\n          <div className=\"modal-dialog\" style={{\n            margin: '60px auto',\n            maxWidth: '500px'\n          }}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Create New Customer</h5>\n                <button type=\"button\" className=\"close\" onClick={() => setShowNewCustomerModal(false)}>\n                  <span>&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form>\n                  <div className=\"form-group mb-3\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"name\"\n                      value={newCustomer.name}\n                      onChange={handleNewCustomerChange}\n                      placeholder=\"Enter full name\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group mb-3\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      name=\"email\"\n                      value={newCustomer.email}\n                      onChange={handleNewCustomerChange}\n                      placeholder=\"Enter email address\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group mb-3\">\n                    <label>Phone</label>\n                    <input\n                      type=\"tel\"\n                      className=\"form-control\"\n                      name=\"phone\"\n                      value={newCustomer.phone}\n                      onChange={handleNewCustomerChange}\n                      placeholder=\"Enter phone number\"\n                      required\n                    />\n                  </div>\n                </form>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setShowNewCustomerModal(false)}>\n                  Cancel\n                </button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={handleNewCustomerSubmit}>\n                  Create Customer\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AppointmentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}