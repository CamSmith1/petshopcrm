{"ast":null,"code":"import React,{createContext,useContext}from'react';import{useNavigate}from'react-router-dom';// Create context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const MockAuthContext=/*#__PURE__*/createContext();// Custom hook to use the auth context\nexport const useAuth=()=>{const context=useContext(MockAuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};// Provider component\nexport const MockAuthProvider=_ref=>{let{children}=_ref;const navigate=useNavigate();// Mock user\nconst mockUser={userId:'demo-user',name:'Demo Business',email:'demo@example.com',role:'service_provider'};// Mock logout function\nconst logout=()=>{navigate('/');window.location.reload();};// Context value\nconst value={currentUser:mockUser,isAuthenticated:true,authLoading:false,error:null,logout};return/*#__PURE__*/_jsx(MockAuthContext.Provider,{value:value,children:children});};export default MockAuthContext;","map":{"version":3,"names":["React","createContext","useContext","useNavigate","jsx","_jsx","MockAuthContext","useAuth","context","Error","MockAuthProvider","_ref","children","navigate","mockUser","userId","name","email","role","logout","window","location","reload","value","currentUser","isAuthenticated","authLoading","error","Provider"],"sources":["/home/toebot/dog-services-saas/frontend/src/context/MockAuthContext.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Create context\nconst MockAuthContext = createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  const context = useContext(MockAuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Provider component\nexport const MockAuthProvider = ({ children }) => {\n  const navigate = useNavigate();\n\n  // Mock user\n  const mockUser = {\n    userId: 'demo-user',\n    name: 'Demo Business',\n    email: 'demo@example.com',\n    role: 'service_provider'\n  };\n\n  // Mock logout function\n  const logout = () => {\n    navigate('/');\n    window.location.reload();\n  };\n\n  // Context value\n  const value = {\n    currentUser: mockUser,\n    isAuthenticated: true,\n    authLoading: false,\n    error: null,\n    logout\n  };\n\n  return (\n    <MockAuthContext.Provider value={value}>\n      {children}\n    </MockAuthContext.Provider>\n  );\n};\n\nexport default MockAuthContext;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,KAAQ,OAAO,CACxD,OAASC,WAAW,KAAQ,kBAAkB,CAE9C;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,eAAe,cAAGL,aAAa,CAAC,CAAC,CAEvC;AACA,MAAO,MAAM,CAAAM,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGN,UAAU,CAACI,eAAe,CAAC,CAC3C,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,gBAAgB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3C,KAAM,CAAAE,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAW,QAAQ,CAAG,CACfC,MAAM,CAAE,WAAW,CACnBC,IAAI,CAAE,eAAe,CACrBC,KAAK,CAAE,kBAAkB,CACzBC,IAAI,CAAE,kBACR,CAAC,CAED;AACA,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnBN,QAAQ,CAAC,GAAG,CAAC,CACbO,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC1B,CAAC,CAED;AACA,KAAM,CAAAC,KAAK,CAAG,CACZC,WAAW,CAAEV,QAAQ,CACrBW,eAAe,CAAE,IAAI,CACrBC,WAAW,CAAE,KAAK,CAClBC,KAAK,CAAE,IAAI,CACXR,MACF,CAAC,CAED,mBACEd,IAAA,CAACC,eAAe,CAACsB,QAAQ,EAACL,KAAK,CAAEA,KAAM,CAAAX,QAAA,CACpCA,QAAQ,CACe,CAAC,CAE/B,CAAC,CAED,cAAe,CAAAN,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}