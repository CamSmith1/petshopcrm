{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import api from'../services/api';import{useAuth}from'./AuthContext';// Create context for business management\nimport{jsx as _jsx}from\"react/jsx-runtime\";const BusinessContext=/*#__PURE__*/createContext();// Custom hook to use the business context\nexport const useBusiness=()=>{const context=useContext(BusinessContext);// Always provide a mock business context if real context is not available\n// This ensures the UI is always visible even in production when API fails\nif(!context||context&&!context.businessProfile){console.warn('Business context not found or incomplete, using fallback data');return{// Business profile\nbusinessProfile:{id:'dev-business-123',name:'Development Business',email:'dev-business@example.com',phone:'555-123-4567',address:{street:'123 Dev St',city:'Development City',state:'DS',zipCode:'12345',country:'DevLand'},businessHours:{monday:{isOpen:true,start:'09:00',end:'17:00'},tuesday:{isOpen:true,start:'09:00',end:'17:00'},wednesday:{isOpen:true,start:'09:00',end:'17:00'},thursday:{isOpen:true,start:'09:00',end:'17:00'},friday:{isOpen:true,start:'09:00',end:'17:00'},saturday:{isOpen:false,start:'',end:''},sunday:{isOpen:false,start:'',end:''}}},updateBusinessProfile:async()=>({success:true}),// Mock service management\nservices:[],fetchServices:async()=>[],createService:async()=>({success:true}),updateService:async()=>({success:true}),deleteService:async()=>({success:true}),// Mock service categories\nserviceCategories:[],fetchServiceCategories:async()=>[],createServiceCategory:async()=>({success:true}),// Mock staff management\nstaff:[],fetchStaff:async()=>[],// Mock customer management\ncustomers:[],fetchCustomers:async()=>({customers:[],total:0,pages:0}),// Mock appointment management\nappointments:[],fetchAppointments:async()=>({appointments:[],total:0,pages:0}),// Mock widget integration\ngetWidgetSettings:async()=>({success:true,settings:{}}),updateWidgetSettings:async()=>({success:true}),// Loading and error states\nbusinessLoading:false,businessError:null};}return context;};// Provider component\nexport const BusinessProvider=_ref=>{let{children}=_ref;const{isAuthenticated,currentUser}=useAuth();// Business state\nconst[businessProfile,setBusinessProfile]=useState(null);const[services,setServices]=useState([]);const[serviceCategories,setServiceCategories]=useState([]);const[locations,setLocations]=useState([]);const[staff,setStaff]=useState([]);const[customers,setCustomers]=useState([]);const[appointments,setAppointments]=useState([]);const[businessLoading,setBusinessLoading]=useState(false);const[businessError,setBusinessError]=useState(null);// Fetch business profile on authentication\nuseEffect(()=>{const fetchBusinessProfile=async()=>{if(!isAuthenticated||!currentUser)return;try{setBusinessLoading(true);setBusinessError(null);const response=await api.get('/business/profile');if(response.data&&response.data.business){setBusinessProfile(response.data.business);}}catch(error){console.error('Error fetching business profile:',error);setBusinessError('Failed to load business profile');}finally{setBusinessLoading(false);}};fetchBusinessProfile();},[isAuthenticated,currentUser]);// Service management\nconst fetchServices=async function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setBusinessLoading(true);setBusinessError(null);// Build query parameters\nconst queryParams=new URLSearchParams();if(options.category)queryParams.append('category',options.category);if(options.active!==undefined)queryParams.append('active',options.active);if(options.sortBy)queryParams.append('sortBy',options.sortBy);if(options.limit)queryParams.append('limit',options.limit);const query=queryParams.toString()?`?${queryParams.toString()}`:'';const response=await api.get(`/services${query}`);if(response.data&&response.data.services){setServices(response.data.services);return response.data.services;}return[];}catch(error){console.error('Error fetching services:',error);setBusinessError('Failed to load services');return[];}finally{setBusinessLoading(false);}};const createService=async serviceData=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.post('/services',serviceData);if(response.data&&response.data.service){// Update services list\nsetServices(prevServices=>[...prevServices,response.data.service]);return{success:true,service:response.data.service};}return{success:false,error:'Failed to create service'};}catch(error){var _error$response,_error$response$data,_error$response2,_error$response2$data;console.error('Error creating service:',error);setBusinessError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to create service');return{success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to create service'};}finally{setBusinessLoading(false);}};const updateService=async(serviceId,serviceData)=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.put(`/services/${serviceId}`,serviceData);if(response.data&&response.data.service){// Update services list\nsetServices(prevServices=>prevServices.map(service=>service._id===serviceId?response.data.service:service));return{success:true,service:response.data.service};}return{success:false,error:'Failed to update service'};}catch(error){var _error$response3,_error$response3$data,_error$response4,_error$response4$data;console.error('Error updating service:',error);setBusinessError(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Failed to update service');return{success:false,error:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to update service'};}finally{setBusinessLoading(false);}};const deleteService=async serviceId=>{try{setBusinessLoading(true);setBusinessError(null);await api.delete(`/services/${serviceId}`);// Update services list\nsetServices(prevServices=>prevServices.filter(service=>service._id!==serviceId));return{success:true};}catch(error){var _error$response5,_error$response5$data,_error$response6,_error$response6$data;console.error('Error deleting service:',error);setBusinessError(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to delete service');return{success:false,error:((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to delete service'};}finally{setBusinessLoading(false);}};// Service category management\nconst fetchServiceCategories=async()=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.get('/service-categories');if(response.data&&response.data.categories){setServiceCategories(response.data.categories);return response.data.categories;}return[];}catch(error){console.error('Error fetching service categories:',error);setBusinessError('Failed to load service categories');return[];}finally{setBusinessLoading(false);}};const createServiceCategory=async categoryData=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.post('/service-categories',categoryData);if(response.data&&response.data.category){// Update categories list\nsetServiceCategories(prevCategories=>[...prevCategories,response.data.category]);return{success:true,category:response.data.category};}return{success:false,error:'Failed to create service category'};}catch(error){var _error$response7,_error$response7$data,_error$response8,_error$response8$data;console.error('Error creating service category:',error);setBusinessError(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Failed to create service category');return{success:false,error:((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.message)||'Failed to create service category'};}finally{setBusinessLoading(false);}};// Staff management\nconst fetchStaff=async()=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.get('/staff');if(response.data&&response.data.staff){setStaff(response.data.staff);return response.data.staff;}return[];}catch(error){console.error('Error fetching staff:',error);setBusinessError('Failed to load staff');return[];}finally{setBusinessLoading(false);}};// Customer management\nconst fetchCustomers=async function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setBusinessLoading(true);setBusinessError(null);// Build query parameters\nconst queryParams=new URLSearchParams();if(options.search)queryParams.append('search',options.search);if(options.sortBy)queryParams.append('sortBy',options.sortBy);if(options.limit)queryParams.append('limit',options.limit);if(options.page)queryParams.append('page',options.page);const query=queryParams.toString()?`?${queryParams.toString()}`:'';const response=await api.get(`/customers${query}`);if(response.data&&response.data.customers){setCustomers(response.data.customers);return{customers:response.data.customers,total:response.data.total,pages:response.data.pages};}return{customers:[],total:0,pages:0};}catch(error){console.error('Error fetching customers:',error);setBusinessError('Failed to load customers');return{customers:[],total:0,pages:0};}finally{setBusinessLoading(false);}};// Appointment management\nconst fetchAppointments=async function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setBusinessLoading(true);setBusinessError(null);// Build query parameters\nconst queryParams=new URLSearchParams();if(options.startDate)queryParams.append('startDate',options.startDate);if(options.endDate)queryParams.append('endDate',options.endDate);if(options.status)queryParams.append('status',options.status);if(options.serviceId)queryParams.append('serviceId',options.serviceId);if(options.staffId)queryParams.append('staffId',options.staffId);if(options.customerId)queryParams.append('customerId',options.customerId);if(options.sortBy)queryParams.append('sortBy',options.sortBy);if(options.limit)queryParams.append('limit',options.limit);if(options.page)queryParams.append('page',options.page);const query=queryParams.toString()?`?${queryParams.toString()}`:'';const response=await api.get(`/appointments${query}`);if(response.data&&response.data.appointments){setAppointments(response.data.appointments);return{appointments:response.data.appointments,total:response.data.total,pages:response.data.pages};}return{appointments:[],total:0,pages:0};}catch(error){console.error('Error fetching appointments:',error);setBusinessError('Failed to load appointments');return{appointments:[],total:0,pages:0};}finally{setBusinessLoading(false);}};// Business profile management\nconst updateBusinessProfile=async profileData=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.put('/business/profile',profileData);if(response.data&&response.data.business){setBusinessProfile(response.data.business);return{success:true,business:response.data.business};}return{success:false,error:'Failed to update business profile'};}catch(error){var _error$response9,_error$response9$data,_error$response10,_error$response10$dat;console.error('Error updating business profile:',error);setBusinessError(((_error$response9=error.response)===null||_error$response9===void 0?void 0:(_error$response9$data=_error$response9.data)===null||_error$response9$data===void 0?void 0:_error$response9$data.message)||'Failed to update business profile');return{success:false,error:((_error$response10=error.response)===null||_error$response10===void 0?void 0:(_error$response10$dat=_error$response10.data)===null||_error$response10$dat===void 0?void 0:_error$response10$dat.message)||'Failed to update business profile'};}finally{setBusinessLoading(false);}};// Widget integration\nconst getWidgetSettings=async()=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.get('/widget/settings');if(response.data&&response.data.settings){return{success:true,settings:response.data.settings};}return{success:false,error:'Failed to get widget settings'};}catch(error){var _error$response11,_error$response11$dat,_error$response12,_error$response12$dat;console.error('Error getting widget settings:',error);setBusinessError(((_error$response11=error.response)===null||_error$response11===void 0?void 0:(_error$response11$dat=_error$response11.data)===null||_error$response11$dat===void 0?void 0:_error$response11$dat.message)||'Failed to get widget settings');return{success:false,error:((_error$response12=error.response)===null||_error$response12===void 0?void 0:(_error$response12$dat=_error$response12.data)===null||_error$response12$dat===void 0?void 0:_error$response12$dat.message)||'Failed to get widget settings'};}finally{setBusinessLoading(false);}};const updateWidgetSettings=async settingsData=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.put('/widget/settings',settingsData);if(response.data&&response.data.settings){return{success:true,settings:response.data.settings};}return{success:false,error:'Failed to update widget settings'};}catch(error){var _error$response13,_error$response13$dat,_error$response14,_error$response14$dat;console.error('Error updating widget settings:',error);setBusinessError(((_error$response13=error.response)===null||_error$response13===void 0?void 0:(_error$response13$dat=_error$response13.data)===null||_error$response13$dat===void 0?void 0:_error$response13$dat.message)||'Failed to update widget settings');return{success:false,error:((_error$response14=error.response)===null||_error$response14===void 0?void 0:(_error$response14$dat=_error$response14.data)===null||_error$response14$dat===void 0?void 0:_error$response14$dat.message)||'Failed to update widget settings'};}finally{setBusinessLoading(false);}};return/*#__PURE__*/_jsx(BusinessContext.Provider,{value:{// Business profile\nbusinessProfile,updateBusinessProfile,// Service management\nservices,fetchServices,createService,updateService,deleteService,// Service categories\nserviceCategories,fetchServiceCategories,createServiceCategory,// Staff management\nstaff,fetchStaff,// Customer management\ncustomers,fetchCustomers,// Appointment management\nappointments,fetchAppointments,// Widget integration\ngetWidgetSettings,updateWidgetSettings,// Loading and error states\nbusinessLoading,businessError},children:children});};export default BusinessContext;","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","useAuth","jsx","_jsx","BusinessContext","useBusiness","context","businessProfile","console","warn","id","name","email","phone","address","street","city","state","zipCode","country","businessHours","monday","isOpen","start","end","tuesday","wednesday","thursday","friday","saturday","sunday","updateBusinessProfile","success","services","fetchServices","createService","updateService","deleteService","serviceCategories","fetchServiceCategories","createServiceCategory","staff","fetchStaff","customers","fetchCustomers","total","pages","appointments","fetchAppointments","getWidgetSettings","settings","updateWidgetSettings","businessLoading","businessError","BusinessProvider","_ref","children","isAuthenticated","currentUser","setBusinessProfile","setServices","setServiceCategories","locations","setLocations","setStaff","setCustomers","setAppointments","setBusinessLoading","setBusinessError","fetchBusinessProfile","response","get","data","business","error","options","arguments","length","undefined","queryParams","URLSearchParams","category","append","active","sortBy","limit","query","toString","serviceData","post","service","prevServices","_error$response","_error$response$data","_error$response2","_error$response2$data","message","serviceId","put","map","_id","_error$response3","_error$response3$data","_error$response4","_error$response4$data","delete","filter","_error$response5","_error$response5$data","_error$response6","_error$response6$data","categories","categoryData","prevCategories","_error$response7","_error$response7$data","_error$response8","_error$response8$data","search","page","startDate","endDate","status","staffId","customerId","profileData","_error$response9","_error$response9$data","_error$response10","_error$response10$dat","_error$response11","_error$response11$dat","_error$response12","_error$response12$dat","settingsData","_error$response13","_error$response13$dat","_error$response14","_error$response14$dat","Provider","value"],"sources":["/home/toebot/dog-services-saas/frontend/src/context/BusinessContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport { useAuth } from './AuthContext';\n\n// Create context for business management\nconst BusinessContext = createContext();\n\n// Custom hook to use the business context\nexport const useBusiness = () => {\n  const context = useContext(BusinessContext);\n  \n  // Always provide a mock business context if real context is not available\n  // This ensures the UI is always visible even in production when API fails\n  if (!context || (context && !context.businessProfile)) {\n    console.warn('Business context not found or incomplete, using fallback data');\n    return {\n      // Business profile\n      businessProfile: {\n        id: 'dev-business-123',\n        name: 'Development Business',\n        email: 'dev-business@example.com',\n        phone: '555-123-4567',\n        address: {\n          street: '123 Dev St',\n          city: 'Development City',\n          state: 'DS',\n          zipCode: '12345',\n          country: 'DevLand'\n        },\n        businessHours: {\n          monday: { isOpen: true, start: '09:00', end: '17:00' },\n          tuesday: { isOpen: true, start: '09:00', end: '17:00' },\n          wednesday: { isOpen: true, start: '09:00', end: '17:00' },\n          thursday: { isOpen: true, start: '09:00', end: '17:00' },\n          friday: { isOpen: true, start: '09:00', end: '17:00' },\n          saturday: { isOpen: false, start: '', end: '' },\n          sunday: { isOpen: false, start: '', end: '' }\n        },\n      },\n      updateBusinessProfile: async () => ({ success: true }),\n      \n      // Mock service management\n      services: [],\n      fetchServices: async () => [],\n      createService: async () => ({ success: true }),\n      updateService: async () => ({ success: true }),\n      deleteService: async () => ({ success: true }),\n      \n      // Mock service categories\n      serviceCategories: [],\n      fetchServiceCategories: async () => [],\n      createServiceCategory: async () => ({ success: true }),\n      \n      // Mock staff management\n      staff: [],\n      fetchStaff: async () => [],\n      \n      // Mock customer management\n      customers: [],\n      fetchCustomers: async () => ({ customers: [], total: 0, pages: 0 }),\n      \n      // Mock appointment management\n      appointments: [],\n      fetchAppointments: async () => ({ appointments: [], total: 0, pages: 0 }),\n      \n      // Mock widget integration\n      getWidgetSettings: async () => ({ success: true, settings: {} }),\n      updateWidgetSettings: async () => ({ success: true }),\n      \n      // Loading and error states\n      businessLoading: false,\n      businessError: null\n    };\n  }\n  \n  return context;\n};\n\n// Provider component\nexport const BusinessProvider = ({ children }) => {\n  const { isAuthenticated, currentUser } = useAuth();\n  \n  // Business state\n  const [businessProfile, setBusinessProfile] = useState(null);\n  const [services, setServices] = useState([]);\n  const [serviceCategories, setServiceCategories] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [staff, setStaff] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [businessLoading, setBusinessLoading] = useState(false);\n  const [businessError, setBusinessError] = useState(null);\n  \n  // Fetch business profile on authentication\n  useEffect(() => {\n    const fetchBusinessProfile = async () => {\n      if (!isAuthenticated || !currentUser) return;\n      \n      try {\n        setBusinessLoading(true);\n        setBusinessError(null);\n        \n        const response = await api.get('/business/profile');\n        \n        if (response.data && response.data.business) {\n          setBusinessProfile(response.data.business);\n        }\n      } catch (error) {\n        console.error('Error fetching business profile:', error);\n        setBusinessError('Failed to load business profile');\n      } finally {\n        setBusinessLoading(false);\n      }\n    };\n    \n    fetchBusinessProfile();\n  }, [isAuthenticated, currentUser]);\n  \n  // Service management\n  const fetchServices = async (options = {}) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      // Build query parameters\n      const queryParams = new URLSearchParams();\n      if (options.category) queryParams.append('category', options.category);\n      if (options.active !== undefined) queryParams.append('active', options.active);\n      if (options.sortBy) queryParams.append('sortBy', options.sortBy);\n      if (options.limit) queryParams.append('limit', options.limit);\n      \n      const query = queryParams.toString() ? `?${queryParams.toString()}` : '';\n      \n      const response = await api.get(`/services${query}`);\n      \n      if (response.data && response.data.services) {\n        setServices(response.data.services);\n        return response.data.services;\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error fetching services:', error);\n      setBusinessError('Failed to load services');\n      return [];\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  const createService = async (serviceData) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.post('/services', serviceData);\n      \n      if (response.data && response.data.service) {\n        // Update services list\n        setServices(prevServices => [...prevServices, response.data.service]);\n        return { success: true, service: response.data.service };\n      }\n      \n      return { success: false, error: 'Failed to create service' };\n    } catch (error) {\n      console.error('Error creating service:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to create service');\n      return { success: false, error: error.response?.data?.message || 'Failed to create service' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  const updateService = async (serviceId, serviceData) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.put(`/services/${serviceId}`, serviceData);\n      \n      if (response.data && response.data.service) {\n        // Update services list\n        setServices(prevServices => \n          prevServices.map(service => \n            service._id === serviceId ? response.data.service : service\n          )\n        );\n        return { success: true, service: response.data.service };\n      }\n      \n      return { success: false, error: 'Failed to update service' };\n    } catch (error) {\n      console.error('Error updating service:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to update service');\n      return { success: false, error: error.response?.data?.message || 'Failed to update service' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  const deleteService = async (serviceId) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      await api.delete(`/services/${serviceId}`);\n      \n      // Update services list\n      setServices(prevServices => \n        prevServices.filter(service => service._id !== serviceId)\n      );\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Error deleting service:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to delete service');\n      return { success: false, error: error.response?.data?.message || 'Failed to delete service' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  // Service category management\n  const fetchServiceCategories = async () => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.get('/service-categories');\n      \n      if (response.data && response.data.categories) {\n        setServiceCategories(response.data.categories);\n        return response.data.categories;\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error fetching service categories:', error);\n      setBusinessError('Failed to load service categories');\n      return [];\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  const createServiceCategory = async (categoryData) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.post('/service-categories', categoryData);\n      \n      if (response.data && response.data.category) {\n        // Update categories list\n        setServiceCategories(prevCategories => [...prevCategories, response.data.category]);\n        return { success: true, category: response.data.category };\n      }\n      \n      return { success: false, error: 'Failed to create service category' };\n    } catch (error) {\n      console.error('Error creating service category:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to create service category');\n      return { success: false, error: error.response?.data?.message || 'Failed to create service category' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  // Staff management\n  const fetchStaff = async () => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.get('/staff');\n      \n      if (response.data && response.data.staff) {\n        setStaff(response.data.staff);\n        return response.data.staff;\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error fetching staff:', error);\n      setBusinessError('Failed to load staff');\n      return [];\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  // Customer management\n  const fetchCustomers = async (options = {}) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      // Build query parameters\n      const queryParams = new URLSearchParams();\n      if (options.search) queryParams.append('search', options.search);\n      if (options.sortBy) queryParams.append('sortBy', options.sortBy);\n      if (options.limit) queryParams.append('limit', options.limit);\n      if (options.page) queryParams.append('page', options.page);\n      \n      const query = queryParams.toString() ? `?${queryParams.toString()}` : '';\n      \n      const response = await api.get(`/customers${query}`);\n      \n      if (response.data && response.data.customers) {\n        setCustomers(response.data.customers);\n        return {\n          customers: response.data.customers,\n          total: response.data.total,\n          pages: response.data.pages\n        };\n      }\n      \n      return { customers: [], total: 0, pages: 0 };\n    } catch (error) {\n      console.error('Error fetching customers:', error);\n      setBusinessError('Failed to load customers');\n      return { customers: [], total: 0, pages: 0 };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  // Appointment management\n  const fetchAppointments = async (options = {}) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      // Build query parameters\n      const queryParams = new URLSearchParams();\n      if (options.startDate) queryParams.append('startDate', options.startDate);\n      if (options.endDate) queryParams.append('endDate', options.endDate);\n      if (options.status) queryParams.append('status', options.status);\n      if (options.serviceId) queryParams.append('serviceId', options.serviceId);\n      if (options.staffId) queryParams.append('staffId', options.staffId);\n      if (options.customerId) queryParams.append('customerId', options.customerId);\n      if (options.sortBy) queryParams.append('sortBy', options.sortBy);\n      if (options.limit) queryParams.append('limit', options.limit);\n      if (options.page) queryParams.append('page', options.page);\n      \n      const query = queryParams.toString() ? `?${queryParams.toString()}` : '';\n      \n      const response = await api.get(`/appointments${query}`);\n      \n      if (response.data && response.data.appointments) {\n        setAppointments(response.data.appointments);\n        return {\n          appointments: response.data.appointments,\n          total: response.data.total,\n          pages: response.data.pages\n        };\n      }\n      \n      return { appointments: [], total: 0, pages: 0 };\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n      setBusinessError('Failed to load appointments');\n      return { appointments: [], total: 0, pages: 0 };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  // Business profile management\n  const updateBusinessProfile = async (profileData) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.put('/business/profile', profileData);\n      \n      if (response.data && response.data.business) {\n        setBusinessProfile(response.data.business);\n        return { success: true, business: response.data.business };\n      }\n      \n      return { success: false, error: 'Failed to update business profile' };\n    } catch (error) {\n      console.error('Error updating business profile:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to update business profile');\n      return { success: false, error: error.response?.data?.message || 'Failed to update business profile' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  // Widget integration\n  const getWidgetSettings = async () => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.get('/widget/settings');\n      \n      if (response.data && response.data.settings) {\n        return { success: true, settings: response.data.settings };\n      }\n      \n      return { success: false, error: 'Failed to get widget settings' };\n    } catch (error) {\n      console.error('Error getting widget settings:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to get widget settings');\n      return { success: false, error: error.response?.data?.message || 'Failed to get widget settings' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  const updateWidgetSettings = async (settingsData) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.put('/widget/settings', settingsData);\n      \n      if (response.data && response.data.settings) {\n        return { success: true, settings: response.data.settings };\n      }\n      \n      return { success: false, error: 'Failed to update widget settings' };\n    } catch (error) {\n      console.error('Error updating widget settings:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to update widget settings');\n      return { success: false, error: error.response?.data?.message || 'Failed to update widget settings' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  return (\n    <BusinessContext.Provider\n      value={{\n        // Business profile\n        businessProfile,\n        updateBusinessProfile,\n        \n        // Service management\n        services,\n        fetchServices,\n        createService,\n        updateService,\n        deleteService,\n        \n        // Service categories\n        serviceCategories,\n        fetchServiceCategories,\n        createServiceCategory,\n        \n        // Staff management\n        staff,\n        fetchStaff,\n        \n        // Customer management\n        customers,\n        fetchCustomers,\n        \n        // Appointment management\n        appointments,\n        fetchAppointments,\n        \n        // Widget integration\n        getWidgetSettings,\n        updateWidgetSettings,\n        \n        // Loading and error states\n        businessLoading,\n        businessError\n      }}\n    >\n      {children}\n    </BusinessContext.Provider>\n  );\n};\n\nexport default BusinessContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}