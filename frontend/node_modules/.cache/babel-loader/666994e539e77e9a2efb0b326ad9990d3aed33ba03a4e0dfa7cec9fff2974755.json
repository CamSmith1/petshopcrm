{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\n\n// Initialize Supabase client\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nconst isDevelopment = process.env.NODE_ENV === 'development';\nif (!supabaseUrl || !supabaseAnonKey) {\n  console.error('Missing Supabase credentials in .env file');\n}\n\n// In development mode, create a mock client if needed\nlet supabase;\nif (isDevelopment && (!supabaseUrl || !supabaseAnonKey)) {\n  console.log('Using mock Supabase client for development');\n  // Create a mock client with minimal implementation\n  supabase = {\n    auth: {\n      getSession: async () => ({\n        data: {\n          session: null\n        }\n      }),\n      getUser: async () => ({\n        data: {\n          user: null\n        }\n      }),\n      onAuthStateChange: () => ({\n        data: {\n          subscription: {\n            unsubscribe: () => {}\n          }\n        }\n      }),\n      signIn: async () => ({\n        data: null,\n        error: null\n      }),\n      signOut: async () => {}\n    },\n    from: () => ({\n      select: () => ({\n        eq: () => ({\n          single: async () => ({\n            data: null,\n            error: null\n          })\n        })\n      }),\n      insert: async () => ({\n        data: null,\n        error: null\n      }),\n      update: async () => ({\n        data: null,\n        error: null\n      })\n    })\n  };\n} else {\n  // Create actual Supabase client\n  supabase = createClient(supabaseUrl, supabaseAnonKey);\n}\nexport default supabase;","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","isDevelopment","NODE_ENV","console","error","supabase","log","auth","getSession","data","session","getUser","user","onAuthStateChange","subscription","unsubscribe","signIn","signOut","from","select","eq","single","insert","update"],"sources":["/home/toebot/dog-services-saas/frontend/src/services/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\n// Initialize Supabase client\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  console.error('Missing Supabase credentials in .env file');\n}\n\n// In development mode, create a mock client if needed\nlet supabase;\n\nif (isDevelopment && (!supabaseUrl || !supabaseAnonKey)) {\n  console.log('Using mock Supabase client for development');\n  // Create a mock client with minimal implementation\n  supabase = {\n    auth: {\n      getSession: async () => ({ data: { session: null } }),\n      getUser: async () => ({ data: { user: null } }),\n      onAuthStateChange: () => ({ data: { subscription: { unsubscribe: () => {} } } }),\n      signIn: async () => ({ data: null, error: null }),\n      signOut: async () => {},\n    },\n    from: () => ({\n      select: () => ({\n        eq: () => ({\n          single: async () => ({ data: null, error: null })\n        })\n      }),\n      insert: async () => ({ data: null, error: null }),\n      update: async () => ({ data: null, error: null }),\n    }),\n  };\n} else {\n  // Create actual Supabase client\n  supabase = createClient(supabaseUrl, supabaseAnonKey);\n}\n\nexport default supabase;"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;;AAEpD;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACtD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;AAC/D,MAAMC,aAAa,GAAGL,OAAO,CAACC,GAAG,CAACK,QAAQ,KAAK,aAAa;AAE5D,IAAI,CAACP,WAAW,IAAI,CAACI,eAAe,EAAE;EACpCI,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC;AAC5D;;AAEA;AACA,IAAIC,QAAQ;AAEZ,IAAIJ,aAAa,KAAK,CAACN,WAAW,IAAI,CAACI,eAAe,CAAC,EAAE;EACvDI,OAAO,CAACG,GAAG,CAAC,4CAA4C,CAAC;EACzD;EACAD,QAAQ,GAAG;IACTE,IAAI,EAAE;MACJC,UAAU,EAAE,MAAAA,CAAA,MAAa;QAAEC,IAAI,EAAE;UAAEC,OAAO,EAAE;QAAK;MAAE,CAAC,CAAC;MACrDC,OAAO,EAAE,MAAAA,CAAA,MAAa;QAAEF,IAAI,EAAE;UAAEG,IAAI,EAAE;QAAK;MAAE,CAAC,CAAC;MAC/CC,iBAAiB,EAAEA,CAAA,MAAO;QAAEJ,IAAI,EAAE;UAAEK,YAAY,EAAE;YAAEC,WAAW,EAAEA,CAAA,KAAM,CAAC;UAAE;QAAE;MAAE,CAAC,CAAC;MAChFC,MAAM,EAAE,MAAAA,CAAA,MAAa;QAAEP,IAAI,EAAE,IAAI;QAAEL,KAAK,EAAE;MAAK,CAAC,CAAC;MACjDa,OAAO,EAAE,MAAAA,CAAA,KAAY,CAAC;IACxB,CAAC;IACDC,IAAI,EAAEA,CAAA,MAAO;MACXC,MAAM,EAAEA,CAAA,MAAO;QACbC,EAAE,EAAEA,CAAA,MAAO;UACTC,MAAM,EAAE,MAAAA,CAAA,MAAa;YAAEZ,IAAI,EAAE,IAAI;YAAEL,KAAK,EAAE;UAAK,CAAC;QAClD,CAAC;MACH,CAAC,CAAC;MACFkB,MAAM,EAAE,MAAAA,CAAA,MAAa;QAAEb,IAAI,EAAE,IAAI;QAAEL,KAAK,EAAE;MAAK,CAAC,CAAC;MACjDmB,MAAM,EAAE,MAAAA,CAAA,MAAa;QAAEd,IAAI,EAAE,IAAI;QAAEL,KAAK,EAAE;MAAK,CAAC;IAClD,CAAC;EACH,CAAC;AACH,CAAC,MAAM;EACL;EACAC,QAAQ,GAAGX,YAAY,CAACC,WAAW,EAAEI,eAAe,CAAC;AACvD;AAEA,eAAeM,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}