{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useNavigate,useParams}from'react-router-dom';import{toast}from'react-toastify';import PageHeader from'../components/common/PageHeader';import LoadingSpinner from'../components/common/LoadingSpinner';import api from'../services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AppointmentForm=()=>{const{appointmentId}=useParams();const navigate=useNavigate();const isEditing=appointmentId&&appointmentId!=='new';const[loading,setLoading]=useState(isEditing);const[services,setServices]=useState([]);const[customers,setCustomers]=useState([]);const[selectedCustomer,setSelectedCustomer]=useState('');const[searchTerm,setSearchTerm]=useState('');const[filteredCustomers,setFilteredCustomers]=useState([]);const[showDropdown,setShowDropdown]=useState(false);const[showNewCustomerModal,setShowNewCustomerModal]=useState(false);const[venues,setVenues]=useState([]);const[selectedVenue,setSelectedVenue]=useState('');const[availableDates,setAvailableDates]=useState([]);const[newCustomer,setNewCustomer]=useState({name:'',email:'',phone:''});const searchContainerRef=useRef(null);const[formData,setFormData]=useState({serviceId:'',customerId:'',customerName:'',date:'',time:'09:00',// Default to 9:00 AM\nduration:60,notes:''});useEffect(()=>{// Fetch services, customers, and venues data\nconst fetchFormData=async()=>{try{// Fetch venues\nconst venuesResponse=await api.getVenues();setVenues(venuesResponse.data.venues||[]);// Fetch services\nconst servicesResponse=await api.getServices();setServices(servicesResponse.data.services||[]);// Fetch customers (using mock data for now)\nconst customersData=[{_id:'cust1',name:'John Smith',email:'john@example.com',phone:'555-123-4567'},{_id:'cust2',name:'Mary Johnson',email:'mary@example.com',phone:'555-234-5678'},{_id:'cust3',name:'David Williams',email:'david@example.com',phone:'555-345-6789'},{_id:'cust4',name:'Sarah Miller',email:'sarah@example.com',phone:'555-456-7890'},{_id:'cust5',name:'James Brown',email:'james@example.com',phone:'555-567-8901'},{_id:'cust6',name:'Jennifer Davis',email:'jennifer@example.com',phone:'555-678-9012'},{_id:'cust7',name:'Michael Wilson',email:'michael@example.com',phone:'555-789-0123'},{_id:'cust8',name:'Linda Martinez',email:'linda@example.com',phone:'555-890-1234'},{_id:'cust9',name:'Robert Taylor',email:'robert@example.com',phone:'555-901-2345'},{_id:'cust10',name:'Elizabeth Anderson',email:'elizabeth@example.com',phone:'555-012-3456'}];setCustomers(customersData);setFilteredCustomers(customersData);// If editing, fetch appointment data\nif(isEditing){var _appointment$client,_appointment$service,_appointment$client3,_appointment$notes;const appointmentResponse=await api.getBooking(appointmentId);const appointment=appointmentResponse.data.booking;// Set customer\nif((_appointment$client=appointment.client)!==null&&_appointment$client!==void 0&&_appointment$client._id){var _appointment$client2;setSelectedCustomer(appointment.client._id);setSearchTerm(((_appointment$client2=appointment.client)===null||_appointment$client2===void 0?void 0:_appointment$client2.name)||'');}// Format the date and time\nconst appointmentDate=new Date(appointment.startTime);const formattedDate=appointmentDate.toISOString().split('T')[0];const formattedTime=appointmentDate.toTimeString().slice(0,5);// Calculate duration in minutes\nconst endTime=new Date(appointment.endTime);const durationMinutes=Math.round((endTime-appointmentDate)/60000);// Set selected venue if it exists\nif(appointment.location){setSelectedVenue(appointment.location);// Fetch venue availability\nawait fetchVenueAvailability(appointment.location);}setFormData({serviceId:((_appointment$service=appointment.service)===null||_appointment$service===void 0?void 0:_appointment$service._id)||'',customerId:((_appointment$client3=appointment.client)===null||_appointment$client3===void 0?void 0:_appointment$client3._id)||'',date:formattedDate,time:formattedTime,duration:durationMinutes,notes:((_appointment$notes=appointment.notes)===null||_appointment$notes===void 0?void 0:_appointment$notes.client)||'',location:appointment.location||''});}}catch(error){console.error('Error fetching form data:',error);// Don't show error toast for demo purposes\n}finally{setLoading(false);}};fetchFormData();},[appointmentId,isEditing]);// Filter customers based on search term\nuseEffect(()=>{if(searchTerm.trim()===''){setFilteredCustomers(customers);return;}const lowercasedFilter=searchTerm.toLowerCase();const filtered=customers.filter(customer=>{return customer.name.toLowerCase().includes(lowercasedFilter)||customer.email.toLowerCase().includes(lowercasedFilter)||customer.phone.toLowerCase().includes(lowercasedFilter);});setFilteredCustomers(filtered);setShowDropdown(true);},[searchTerm,customers]);// Update customer selection\nuseEffect(()=>{if(selectedCustomer){const customer=customers.find(c=>c._id===selectedCustomer);setFormData(prev=>({...prev,customerId:selectedCustomer,customerName:customer?customer.name:''}));}},[selectedCustomer,customers]);// Fetch venue availability when a venue is selected\nconst fetchVenueAvailability=async venueId=>{try{// Get current date\nconst today=new Date();const endDate=new Date();endDate.setMonth(today.getMonth()+2);// Look ahead 2 months\n// Get venue availability\nconst availabilityResponse=await api.getVenueAvailability(venueId,{startDate:today.toISOString(),endDate:endDate.toISOString()});// Get bookings for this venue\nconst bookingsResponse=await api.getBookings({location:venueId,startDate:today.toISOString(),endDate:endDate.toISOString()});// Extract booked dates\nconst bookings=bookingsResponse.data.bookings||[];const bookedDates=bookings.map(booking=>{const date=new Date(booking.startTime);return date.toISOString().split('T')[0];});// Generate available dates (for demo purposes, we'll create a range of dates)\nconst availableDatesList=[];const daysToGenerate=60;// Generate 60 days\nfor(let i=0;i<daysToGenerate;i++){const date=new Date();date.setDate(date.getDate()+i);const dateStr=date.toISOString().split('T')[0];// For this venue, make many dates available (only occasionally skip a date)\nconst randomSkip=Math.random()>0.9;// Only 10% chance to skip a date\nif(!randomSkip){availableDatesList.push({date:dateStr,formatted:new Date(dateStr).toLocaleDateString('en-US',{weekday:'short',month:'short',day:'numeric'})});}}setAvailableDates(availableDatesList);}catch(error){console.error('Error fetching venue availability:',error);// Silent fail - don't show error toast\n// For demo purposes, generate some available dates anyway\nconst fallbackDates=[];const daysToGenerate=60;for(let i=0;i<daysToGenerate;i++){const date=new Date();date.setDate(date.getDate()+i);const dateStr=date.toISOString().split('T')[0];// Add most dates (skip some randomly)\nif(Math.random()>0.15){fallbackDates.push({date:dateStr,formatted:new Date(dateStr).toLocaleDateString('en-US',{weekday:'short',month:'short',day:'numeric'})});}}setAvailableDates(fallbackDates);}};// Handle venue selection\nuseEffect(()=>{if(selectedVenue){fetchVenueAvailability(selectedVenue);// Update the form data with the selected venue\nsetFormData(prev=>({...prev,location:selectedVenue}));}},[selectedVenue]);// Handle new customer submission\nconst handleNewCustomerSubmit=async()=>{// Validate form\nif(!newCustomer.name||!newCustomer.email||!newCustomer.phone){toast.error('Please fill all required fields');return;}try{// Create new customer\nconst response=await api.createOrUpdateCustomer({name:newCustomer.name,email:newCustomer.email,phone:newCustomer.phone});const createdCustomer=response.data.customer;// Add to customers list\nsetCustomers([...customers,createdCustomer]);// Select the new customer\nsetSelectedCustomer(createdCustomer._id);setSearchTerm(createdCustomer.name);// Close modal\nsetShowNewCustomerModal(false);// Reset form\nsetNewCustomer({name:'',email:'',phone:''});toast.success('Customer created successfully');}catch(error){console.error('Error creating customer:',error);toast.error('Failed to create customer');}};// Handle new customer input changes\nconst handleNewCustomerChange=e=>{const{name,value}=e.target;setNewCustomer({...newCustomer,[name]:value});};const handleInputChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleCustomerSearch=e=>{setSearchTerm(e.target.value);setFormData({...formData,customerName:e.target.value,customerId:''});};const handleSelectCustomer=customer=>{setSelectedCustomer(customer._id);setSearchTerm(customer.name);setFormData({...formData,customerId:customer._id,customerName:customer.name});setShowDropdown(false);};const handleCreateNewCustomer=()=>{// Set the new customer's name to the search term\nsetNewCustomer({...newCustomer,name:searchTerm});setShowNewCustomerModal(true);setShowDropdown(false);};const handleSubmit=async e=>{e.preventDefault();// Validate if a customer is selected\nif(!formData.customerId){toast.error('Please select a customer from the search results');return;}setLoading(true);try{// Format date and time for API\nconst startTime=new Date(`${formData.date}T${formData.time}`);const endTime=new Date(startTime.getTime()+formData.duration*60000);// Find selected customer and service details for richer data storage\nconst selectedCustomer=customers.find(cust=>cust._id===formData.customerId)||{};const selectedService=services.find(svc=>svc._id===formData.serviceId)||{};const appointmentData={service:{_id:formData.serviceId,title:selectedService.title||'Unknown Service'},client:{_id:formData.customerId,name:selectedCustomer.name||'Unknown Customer',email:selectedCustomer.email||''},startTime:startTime.toISOString(),endTime:endTime.toISOString(),notes:{client:formData.notes},status:'pending',location:'In-store'};// Create or update appointment\nif(isEditing){await api.updateBooking(appointmentId,appointmentData);toast.success('Appointment updated successfully');}else{await api.createBooking(appointmentData);toast.success('Appointment created successfully');}// Navigate back to appointments list\nnavigate('/appointments');}catch(error){var _error$response,_error$response$data;console.error('Error saving appointment:',error);toast.error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to save appointment');}finally{setLoading(false);}};// Close dropdown when clicking outside\nconst handleClickOutside=event=>{if(searchContainerRef.current&&!searchContainerRef.current.contains(event.target)){setShowDropdown(false);}};// Add event listener for clicking outside\nuseEffect(()=>{document.addEventListener('mousedown',handleClickOutside);return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[]);if(loading){return/*#__PURE__*/_jsx(LoadingSpinner,{});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-container\",children:[/*#__PURE__*/_jsx(PageHeader,{title:isEditing?'Edit Booking':'New Booking',backLink:\"/bookings\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",style:{maxWidth:'600px',margin:'0 auto'},children:/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"location\",children:\"Venue\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"location\",name:\"location\",className:\"form-control\",value:formData.location||'',onChange:e=>{handleInputChange(e);setSelectedVenue(e.target.value);},required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a venue\"}),venues.map(venue=>/*#__PURE__*/_jsx(\"option\",{value:venue.id,children:venue.name},venue.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"customerSearch\",children:\"Customer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"customer-search-container\",ref:searchContainerRef,style:{position:'relative'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"customerSearch\",name:\"customerSearch\",className:\"form-control\",placeholder:\"Search by name, email, or phone\",value:searchTerm,onChange:handleCustomerSearch,onFocus:()=>setShowDropdown(true),autoComplete:\"off\",required:true}),showDropdown&&/*#__PURE__*/_jsx(\"div\",{className:\"customer-search-results\",style:{position:'absolute',width:'100%',maxHeight:'200px',overflow:'auto',backgroundColor:'#fff',border:'1px solid #ddd',borderTop:'none',zIndex:10,boxShadow:'0 2px 5px rgba(0,0,0,0.2)'},children:filteredCustomers.length>0?filteredCustomers.map(customer=>/*#__PURE__*/_jsxs(\"div\",{className:\"customer-search-item\",onClick:()=>handleSelectCustomer(customer),style:{padding:'8px 15px',cursor:'pointer',borderBottom:'1px solid #eee',borderLeft:`3px solid ${customer._id===selectedCustomer?'#4a90e2':'transparent'}`,backgroundColor:customer._id===selectedCustomer?'#f0f7ff':'transparent'},onMouseEnter:e=>e.currentTarget.style.backgroundColor='#f5f5f5',onMouseLeave:e=>e.currentTarget.style.backgroundColor=customer._id===selectedCustomer?'#f0f7ff':'transparent',children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'bold'},children:customer.name}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'0.85em',color:'#666'},children:[customer.email,\" \\u2022 \",customer.phone]})]},customer._id)):searchTerm.trim()!==''&&/*#__PURE__*/_jsxs(\"div\",{className:\"create-new-customer\",onClick:handleCreateNewCustomer,style:{padding:'12px 15px',cursor:'pointer',borderBottom:'1px solid #eee',backgroundColor:'#f8f9fa',color:'#0d6efd',textAlign:'center',fontWeight:'bold'},onMouseEnter:e=>e.currentTarget.style.backgroundColor='#e9ecef',onMouseLeave:e=>e.currentTarget.style.backgroundColor='#f8f9fa',children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus-circle\",style:{marginRight:'8px'}}),\"Create new customer: \\\"\",searchTerm,\"\\\"\"]})}),/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",name:\"customerId\",value:formData.customerId})]})]}),selectedVenue&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Available Dates\"}),/*#__PURE__*/_jsx(\"div\",{className:\"available-dates-container\",style:{display:'flex',flexWrap:'wrap',gap:'10px',marginBottom:'15px'},children:availableDates.length>0?availableDates.slice(0,14).map(dateObj=>/*#__PURE__*/_jsx(\"div\",{className:`date-option ${formData.date===dateObj.date?'selected':''}`,onClick:()=>setFormData({...formData,date:dateObj.date}),style:{padding:'8px 12px',border:formData.date===dateObj.date?'2px solid #4a90e2':'1px solid #ddd',borderRadius:'4px',cursor:'pointer',backgroundColor:formData.date===dateObj.date?'#f0f7ff':'#fff',minWidth:'90px',textAlign:'center'},children:dateObj.formatted},dateObj.date)):/*#__PURE__*/_jsx(\"div\",{className:\"dates-loading\",style:{padding:'15px',backgroundColor:'#e3f9ef',color:'#10b981',borderRadius:'4px',width:'100%',textAlign:'center'},children:\"Loading available dates...\"})}),availableDates.length>14&&/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginTop:'-5px',marginBottom:'15px'},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-link\",style:{padding:'0',fontSize:'0.9rem'},onClick:()=>{/* Show more dates logic */},children:\"Show more dates...\"})})]}),formData.date&&/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",style:{flex:1},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"time\",children:\"Time\"}),/*#__PURE__*/_jsx(\"div\",{className:\"time-picker-container\",children:/*#__PURE__*/_jsxs(\"select\",{id:\"time\",name:\"time\",className:\"form-control\",value:formData.time,onChange:handleInputChange,required:true,style:{appearance:'menulist',backgroundImage:'none',paddingRight:'8px'},children:[/*#__PURE__*/_jsxs(\"optgroup\",{label:\"Morning\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"08:00\",children:\"8:00 AM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"08:30\",children:\"8:30 AM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"09:00\",children:\"9:00 AM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"09:30\",children:\"9:30 AM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"10:00\",children:\"10:00 AM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"10:30\",children:\"10:30 AM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"11:00\",children:\"11:00 AM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"11:30\",children:\"11:30 AM\"})]}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"Afternoon\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"12:00\",children:\"12:00 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"12:30\",children:\"12:30 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"13:00\",children:\"1:00 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"13:30\",children:\"1:30 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"14:00\",children:\"2:00 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"14:30\",children:\"2:30 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"15:00\",children:\"3:00 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"15:30\",children:\"3:30 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"16:00\",children:\"4:00 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"16:30\",children:\"4:30 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"17:00\",children:\"5:00 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"17:30\",children:\"5:30 PM\"})]}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"Evening\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"18:00\",children:\"6:00 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"18:30\",children:\"6:30 PM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"19:00\",children:\"7:00 PM\"})]})]})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"duration\",children:\"Duration\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"duration\",name:\"duration\",className:\"form-control\",value:formData.duration,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"60\",children:\"1 hour\"}),/*#__PURE__*/_jsx(\"option\",{value:\"90\",children:\"1.5 hours\"}),/*#__PURE__*/_jsx(\"option\",{value:\"120\",children:\"2 hours\"}),/*#__PURE__*/_jsx(\"option\",{value:\"180\",children:\"3 hours\"}),/*#__PURE__*/_jsx(\"option\",{value:\"240\",children:\"4 hours\"}),/*#__PURE__*/_jsx(\"option\",{value:\"300\",children:\"5 hours\"}),/*#__PURE__*/_jsx(\"option\",{value:\"360\",children:\"6 hours\"}),/*#__PURE__*/_jsx(\"option\",{value:\"480\",children:\"8 hours (Full day)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"720\",children:\"12 hours\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1440\",children:\"24 hours (Overnight)\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"notes\",children:\"Notes\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"notes\",name:\"notes\",className:\"form-control\",value:formData.notes,onChange:handleInputChange,rows:\"3\",placeholder:\"Add any special requirements, setup instructions, or equipment needs\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",style:{display:'flex',justifyContent:'flex-end',gap:'10px',marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-outline-secondary\",onClick:()=>navigate('/bookings'),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:isEditing?'Update Booking':'Create Booking'})]})]})})})]}),showNewCustomerModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",style:{display:'block',position:'fixed',top:0,left:0,width:'100%',height:'100%',backgroundColor:'rgba(0,0,0,0.5)',zIndex:1000},children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-dialog\",style:{margin:'60px auto',maxWidth:'500px'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"modal-title\",children:\"Create New Customer\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"close\",onClick:()=>setShowNewCustomerModal(false),children:/*#__PURE__*/_jsx(\"span\",{children:\"\\xD7\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",name:\"name\",value:newCustomer.name,onChange:handleNewCustomerChange,placeholder:\"Enter full name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",name:\"email\",value:newCustomer.email,onChange:handleNewCustomerChange,placeholder:\"Enter email address\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Phone\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",className:\"form-control\",name:\"phone\",value:newCustomer.phone,onChange:handleNewCustomerChange,placeholder:\"Enter phone number\",required:true})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary\",onClick:()=>setShowNewCustomerModal(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:handleNewCustomerSubmit,children:\"Create Customer\"})]})]})})})]});};export default AppointmentForm;","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","toast","PageHeader","LoadingSpinner","api","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AppointmentForm","appointmentId","navigate","isEditing","loading","setLoading","services","setServices","customers","setCustomers","selectedCustomer","setSelectedCustomer","searchTerm","setSearchTerm","filteredCustomers","setFilteredCustomers","showDropdown","setShowDropdown","showNewCustomerModal","setShowNewCustomerModal","venues","setVenues","selectedVenue","setSelectedVenue","availableDates","setAvailableDates","newCustomer","setNewCustomer","name","email","phone","searchContainerRef","formData","setFormData","serviceId","customerId","customerName","date","time","duration","notes","fetchFormData","venuesResponse","getVenues","data","servicesResponse","getServices","customersData","_id","_appointment$client","_appointment$service","_appointment$client3","_appointment$notes","appointmentResponse","getBooking","appointment","booking","client","_appointment$client2","appointmentDate","Date","startTime","formattedDate","toISOString","split","formattedTime","toTimeString","slice","endTime","durationMinutes","Math","round","location","fetchVenueAvailability","service","error","console","trim","lowercasedFilter","toLowerCase","filtered","filter","customer","includes","find","c","prev","venueId","today","endDate","setMonth","getMonth","availabilityResponse","getVenueAvailability","startDate","bookingsResponse","getBookings","bookings","bookedDates","map","availableDatesList","daysToGenerate","i","setDate","getDate","dateStr","randomSkip","random","push","formatted","toLocaleDateString","weekday","month","day","fallbackDates","handleNewCustomerSubmit","response","createOrUpdateCustomer","createdCustomer","success","handleNewCustomerChange","e","value","target","handleInputChange","handleCustomerSearch","handleSelectCustomer","handleCreateNewCustomer","handleSubmit","preventDefault","getTime","cust","selectedService","svc","appointmentData","title","status","updateBooking","createBooking","_error$response","_error$response$data","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","children","className","backLink","style","maxWidth","margin","onSubmit","htmlFor","id","onChange","required","venue","ref","position","type","placeholder","onFocus","autoComplete","width","maxHeight","overflow","backgroundColor","border","borderTop","zIndex","boxShadow","length","onClick","padding","cursor","borderBottom","borderLeft","onMouseEnter","currentTarget","onMouseLeave","fontWeight","fontSize","color","textAlign","marginRight","display","flexWrap","gap","marginBottom","dateObj","borderRadius","minWidth","marginTop","flex","appearance","backgroundImage","paddingRight","label","rows","justifyContent","top","left","height"],"sources":["/home/toebot/dog-services-saas/frontend/src/pages/AppointmentForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PageHeader from '../components/common/PageHeader';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport api from '../services/api';\n\nconst AppointmentForm = () => {\n  const { appointmentId } = useParams();\n  const navigate = useNavigate();\n  const isEditing = appointmentId && appointmentId !== 'new';\n  \n  const [loading, setLoading] = useState(isEditing);\n  const [services, setServices] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredCustomers, setFilteredCustomers] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [showNewCustomerModal, setShowNewCustomerModal] = useState(false);\n  const [venues, setVenues] = useState([]);\n  const [selectedVenue, setSelectedVenue] = useState('');\n  const [availableDates, setAvailableDates] = useState([]);\n  const [newCustomer, setNewCustomer] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const searchContainerRef = useRef(null);\n  \n  const [formData, setFormData] = useState({\n    serviceId: '',\n    customerId: '',\n    customerName: '',\n    date: '',\n    time: '09:00', // Default to 9:00 AM\n    duration: 60,\n    notes: '',\n  });\n\n  useEffect(() => {\n    // Fetch services, customers, and venues data\n    const fetchFormData = async () => {\n      try {\n        // Fetch venues\n        const venuesResponse = await api.getVenues();\n        setVenues(venuesResponse.data.venues || []);\n        \n        // Fetch services\n        const servicesResponse = await api.getServices();\n        setServices(servicesResponse.data.services || []);\n        \n        // Fetch customers (using mock data for now)\n        const customersData = [\n          { _id: 'cust1', name: 'John Smith', email: 'john@example.com', phone: '555-123-4567' },\n          { _id: 'cust2', name: 'Mary Johnson', email: 'mary@example.com', phone: '555-234-5678' },\n          { _id: 'cust3', name: 'David Williams', email: 'david@example.com', phone: '555-345-6789' },\n          { _id: 'cust4', name: 'Sarah Miller', email: 'sarah@example.com', phone: '555-456-7890' },\n          { _id: 'cust5', name: 'James Brown', email: 'james@example.com', phone: '555-567-8901' },\n          { _id: 'cust6', name: 'Jennifer Davis', email: 'jennifer@example.com', phone: '555-678-9012' },\n          { _id: 'cust7', name: 'Michael Wilson', email: 'michael@example.com', phone: '555-789-0123' },\n          { _id: 'cust8', name: 'Linda Martinez', email: 'linda@example.com', phone: '555-890-1234' },\n          { _id: 'cust9', name: 'Robert Taylor', email: 'robert@example.com', phone: '555-901-2345' },\n          { _id: 'cust10', name: 'Elizabeth Anderson', email: 'elizabeth@example.com', phone: '555-012-3456' },\n        ];\n        setCustomers(customersData);\n        setFilteredCustomers(customersData);\n        \n        // If editing, fetch appointment data\n        if (isEditing) {\n          const appointmentResponse = await api.getBooking(appointmentId);\n          const appointment = appointmentResponse.data.booking;\n          \n          // Set customer\n          if (appointment.client?._id) {\n            setSelectedCustomer(appointment.client._id);\n            setSearchTerm(appointment.client?.name || '');\n          }\n          \n          // Format the date and time\n          const appointmentDate = new Date(appointment.startTime);\n          const formattedDate = appointmentDate.toISOString().split('T')[0];\n          const formattedTime = appointmentDate.toTimeString().slice(0, 5);\n          \n          // Calculate duration in minutes\n          const endTime = new Date(appointment.endTime);\n          const durationMinutes = Math.round((endTime - appointmentDate) / 60000);\n          \n          // Set selected venue if it exists\n          if (appointment.location) {\n            setSelectedVenue(appointment.location);\n            // Fetch venue availability\n            await fetchVenueAvailability(appointment.location);\n          }\n          \n          setFormData({\n            serviceId: appointment.service?._id || '',\n            customerId: appointment.client?._id || '',\n            date: formattedDate,\n            time: formattedTime,\n            duration: durationMinutes,\n            notes: appointment.notes?.client || '',\n            location: appointment.location || '',\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n        // Don't show error toast for demo purposes\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchFormData();\n  }, [appointmentId, isEditing]);\n  \n  // Filter customers based on search term\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredCustomers(customers);\n      return;\n    }\n    \n    const lowercasedFilter = searchTerm.toLowerCase();\n    const filtered = customers.filter(customer => {\n      return (\n        customer.name.toLowerCase().includes(lowercasedFilter) ||\n        customer.email.toLowerCase().includes(lowercasedFilter) ||\n        customer.phone.toLowerCase().includes(lowercasedFilter)\n      );\n    });\n    \n    setFilteredCustomers(filtered);\n    setShowDropdown(true);\n  }, [searchTerm, customers]);\n  \n  // Update customer selection\n  useEffect(() => {\n    if (selectedCustomer) {\n      const customer = customers.find(c => c._id === selectedCustomer);\n      setFormData(prev => ({\n        ...prev,\n        customerId: selectedCustomer,\n        customerName: customer ? customer.name : '',\n      }));\n    }\n  }, [selectedCustomer, customers]);\n  \n  // Fetch venue availability when a venue is selected\n  const fetchVenueAvailability = async (venueId) => {\n    try {\n      // Get current date\n      const today = new Date();\n      const endDate = new Date();\n      endDate.setMonth(today.getMonth() + 2); // Look ahead 2 months\n      \n      // Get venue availability\n      const availabilityResponse = await api.getVenueAvailability(venueId, {\n        startDate: today.toISOString(),\n        endDate: endDate.toISOString()\n      });\n      \n      // Get bookings for this venue\n      const bookingsResponse = await api.getBookings({\n        location: venueId,\n        startDate: today.toISOString(),\n        endDate: endDate.toISOString()\n      });\n      \n      // Extract booked dates\n      const bookings = bookingsResponse.data.bookings || [];\n      const bookedDates = bookings.map(booking => {\n        const date = new Date(booking.startTime);\n        return date.toISOString().split('T')[0];\n      });\n      \n      // Generate available dates (for demo purposes, we'll create a range of dates)\n      const availableDatesList = [];\n      const daysToGenerate = 60; // Generate 60 days\n      \n      for (let i = 0; i < daysToGenerate; i++) {\n        const date = new Date();\n        date.setDate(date.getDate() + i);\n        const dateStr = date.toISOString().split('T')[0];\n        \n        // For this venue, make many dates available (only occasionally skip a date)\n        const randomSkip = Math.random() > 0.9; // Only 10% chance to skip a date\n        if (!randomSkip) {\n          availableDatesList.push({\n            date: dateStr,\n            formatted: new Date(dateStr).toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'short',\n              day: 'numeric'\n            })\n          });\n        }\n      }\n      \n      setAvailableDates(availableDatesList);\n    } catch (error) {\n      console.error('Error fetching venue availability:', error);\n      // Silent fail - don't show error toast\n      // For demo purposes, generate some available dates anyway\n      const fallbackDates = [];\n      const daysToGenerate = 60;\n      \n      for (let i = 0; i < daysToGenerate; i++) {\n        const date = new Date();\n        date.setDate(date.getDate() + i);\n        const dateStr = date.toISOString().split('T')[0];\n        \n        // Add most dates (skip some randomly)\n        if (Math.random() > 0.15) {\n          fallbackDates.push({\n            date: dateStr,\n            formatted: new Date(dateStr).toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'short',\n              day: 'numeric'\n            })\n          });\n        }\n      }\n      \n      setAvailableDates(fallbackDates);\n    }\n  };\n  \n  // Handle venue selection\n  useEffect(() => {\n    if (selectedVenue) {\n      fetchVenueAvailability(selectedVenue);\n      \n      // Update the form data with the selected venue\n      setFormData(prev => ({\n        ...prev,\n        location: selectedVenue\n      }));\n    }\n  }, [selectedVenue]);\n  \n  // Handle new customer submission\n  const handleNewCustomerSubmit = async () => {\n    // Validate form\n    if (!newCustomer.name || !newCustomer.email || !newCustomer.phone) {\n      toast.error('Please fill all required fields');\n      return;\n    }\n    \n    try {\n      // Create new customer\n      const response = await api.createOrUpdateCustomer({\n        name: newCustomer.name,\n        email: newCustomer.email,\n        phone: newCustomer.phone\n      });\n      \n      const createdCustomer = response.data.customer;\n      \n      // Add to customers list\n      setCustomers([...customers, createdCustomer]);\n      \n      // Select the new customer\n      setSelectedCustomer(createdCustomer._id);\n      setSearchTerm(createdCustomer.name);\n      \n      // Close modal\n      setShowNewCustomerModal(false);\n      \n      // Reset form\n      setNewCustomer({\n        name: '',\n        email: '',\n        phone: ''\n      });\n      \n      toast.success('Customer created successfully');\n    } catch (error) {\n      console.error('Error creating customer:', error);\n      toast.error('Failed to create customer');\n    }\n  };\n  \n  // Handle new customer input changes\n  const handleNewCustomerChange = (e) => {\n    const { name, value } = e.target;\n    setNewCustomer({\n      ...newCustomer,\n      [name]: value\n    });\n  };\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  \n  const handleCustomerSearch = (e) => {\n    setSearchTerm(e.target.value);\n    setFormData({\n      ...formData,\n      customerName: e.target.value,\n      customerId: '',\n    });\n  };\n  \n  const handleSelectCustomer = (customer) => {\n    setSelectedCustomer(customer._id);\n    setSearchTerm(customer.name);\n    setFormData({\n      ...formData,\n      customerId: customer._id,\n      customerName: customer.name,\n    });\n    setShowDropdown(false);\n  };\n  \n  const handleCreateNewCustomer = () => {\n    // Set the new customer's name to the search term\n    setNewCustomer({\n      ...newCustomer,\n      name: searchTerm\n    });\n    setShowNewCustomerModal(true);\n    setShowDropdown(false);\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate if a customer is selected\n    if (!formData.customerId) {\n      toast.error('Please select a customer from the search results');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      // Format date and time for API\n      const startTime = new Date(`${formData.date}T${formData.time}`);\n      const endTime = new Date(startTime.getTime() + formData.duration * 60000);\n      \n      // Find selected customer and service details for richer data storage\n      const selectedCustomer = customers.find(cust => cust._id === formData.customerId) || {};\n      const selectedService = services.find(svc => svc._id === formData.serviceId) || {};\n      \n      const appointmentData = {\n        service: {\n          _id: formData.serviceId,\n          title: selectedService.title || 'Unknown Service'\n        },\n        client: {\n          _id: formData.customerId,\n          name: selectedCustomer.name || 'Unknown Customer',\n          email: selectedCustomer.email || ''\n        },\n        startTime: startTime.toISOString(),\n        endTime: endTime.toISOString(),\n        notes: {\n          client: formData.notes,\n        },\n        status: 'pending',\n        location: 'In-store'\n      };\n      \n      // Create or update appointment\n      if (isEditing) {\n        await api.updateBooking(appointmentId, appointmentData);\n        toast.success('Appointment updated successfully');\n      } else {\n        await api.createBooking(appointmentData);\n        toast.success('Appointment created successfully');\n      }\n      \n      // Navigate back to appointments list\n      navigate('/appointments');\n    } catch (error) {\n      console.error('Error saving appointment:', error);\n      toast.error(error.response?.data?.error || 'Failed to save appointment');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Close dropdown when clicking outside\n  const handleClickOutside = (event) => {\n    if (searchContainerRef.current && !searchContainerRef.current.contains(event.target)) {\n      setShowDropdown(false);\n    }\n  };\n  \n  // Add event listener for clicking outside\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  \n  if (loading) {\n    return <LoadingSpinner />;\n  }\n  \n  return (\n    <>\n      <div className=\"page-container\">\n        <PageHeader \n          title={isEditing ? 'Edit Booking' : 'New Booking'} \n          backLink=\"/bookings\"\n        />\n        \n        <div className=\"card\" style={{ maxWidth: '600px', margin: '0 auto' }}>\n          <div className=\"card-body\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"location\">Venue</label>\n                <select\n                  id=\"location\" \n                  name=\"location\" \n                  className=\"form-control\"\n                  value={formData.location || ''}\n                  onChange={(e) => {\n                    handleInputChange(e);\n                    setSelectedVenue(e.target.value);\n                  }}\n                  required\n                >\n                  <option value=\"\">Select a venue</option>\n                  {venues.map(venue => (\n                    <option key={venue.id} value={venue.id}>\n                      {venue.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"customerSearch\">Customer</label>\n                <div className=\"customer-search-container\" ref={searchContainerRef} style={{ position: 'relative' }}>\n                  <input\n                    type=\"text\"\n                    id=\"customerSearch\"\n                    name=\"customerSearch\"\n                    className=\"form-control\"\n                    placeholder=\"Search by name, email, or phone\"\n                    value={searchTerm}\n                    onChange={handleCustomerSearch}\n                    onFocus={() => setShowDropdown(true)}\n                    autoComplete=\"off\"\n                    required\n                  />\n                  {showDropdown && (\n                    <div className=\"customer-search-results\" style={{\n                      position: 'absolute',\n                      width: '100%',\n                      maxHeight: '200px',\n                      overflow: 'auto',\n                      backgroundColor: '#fff',\n                      border: '1px solid #ddd',\n                      borderTop: 'none',\n                      zIndex: 10,\n                      boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                    }}>\n                      {filteredCustomers.length > 0 ? (\n                        filteredCustomers.map(customer => (\n                          <div\n                            key={customer._id}\n                            className=\"customer-search-item\"\n                            onClick={() => handleSelectCustomer(customer)}\n                            style={{\n                              padding: '8px 15px',\n                              cursor: 'pointer',\n                              borderBottom: '1px solid #eee',\n                              borderLeft: `3px solid ${customer._id === selectedCustomer ? '#4a90e2' : 'transparent'}`,\n                              backgroundColor: customer._id === selectedCustomer ? '#f0f7ff' : 'transparent'\n                            }}\n                            onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#f5f5f5'}\n                            onMouseLeave={(e) => e.currentTarget.style.backgroundColor = customer._id === selectedCustomer ? '#f0f7ff' : 'transparent'}\n                          >\n                            <div style={{ fontWeight: 'bold' }}>{customer.name}</div>\n                            <div style={{ fontSize: '0.85em', color: '#666' }}>\n                              {customer.email} • {customer.phone}\n                            </div>\n                          </div>\n                        ))\n                      ) : (\n                        searchTerm.trim() !== '' && (\n                          <div\n                            className=\"create-new-customer\"\n                            onClick={handleCreateNewCustomer}\n                            style={{\n                              padding: '12px 15px',\n                              cursor: 'pointer',\n                              borderBottom: '1px solid #eee',\n                              backgroundColor: '#f8f9fa',\n                              color: '#0d6efd',\n                              textAlign: 'center',\n                              fontWeight: 'bold'\n                            }}\n                            onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#e9ecef'}\n                            onMouseLeave={(e) => e.currentTarget.style.backgroundColor = '#f8f9fa'}\n                          >\n                            <i className=\"fas fa-plus-circle\" style={{ marginRight: '8px' }}></i>\n                            Create new customer: \"{searchTerm}\"\n                          </div>\n                        )\n                      )}\n                    </div>\n                  )}\n                  {/* Hidden input to store the customer ID for form submission */}\n                  <input\n                    type=\"hidden\"\n                    name=\"customerId\"\n                    value={formData.customerId}\n                  />\n                </div>\n              </div>\n              \n              {selectedVenue && (\n                <div className=\"form-group\">\n                  <label>Available Dates</label>\n                  <div className=\"available-dates-container\" style={{ \n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    gap: '10px',\n                    marginBottom: '15px'\n                  }}>\n                    {availableDates.length > 0 ? (\n                      availableDates.slice(0, 14).map(dateObj => (\n                        <div\n                          key={dateObj.date}\n                          className={`date-option ${formData.date === dateObj.date ? 'selected' : ''}`}\n                          onClick={() => setFormData({...formData, date: dateObj.date})}\n                          style={{\n                            padding: '8px 12px',\n                            border: formData.date === dateObj.date ? '2px solid #4a90e2' : '1px solid #ddd',\n                            borderRadius: '4px',\n                            cursor: 'pointer',\n                            backgroundColor: formData.date === dateObj.date ? '#f0f7ff' : '#fff',\n                            minWidth: '90px',\n                            textAlign: 'center'\n                          }}\n                        >\n                          {dateObj.formatted}\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"dates-loading\" style={{\n                        padding: '15px',\n                        backgroundColor: '#e3f9ef',\n                        color: '#10b981',\n                        borderRadius: '4px',\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>\n                        Loading available dates...\n                      </div>\n                    )}\n                  </div>\n                  {availableDates.length > 14 && (\n                    <div style={{ textAlign: 'center', marginTop: '-5px', marginBottom: '15px' }}>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        style={{ padding: '0', fontSize: '0.9rem' }}\n                        onClick={() => {/* Show more dates logic */}}\n                      >\n                        Show more dates...\n                      </button>\n                    </div>\n                  )}\n                </div>\n              )}\n              \n              {formData.date && (\n                <div className=\"form-row\">\n                  <div className=\"form-group\" style={{ flex: 1 }}>\n                    <label htmlFor=\"time\">Time</label>\n                    <div className=\"time-picker-container\">\n                      <select\n                        id=\"time\"\n                        name=\"time\"\n                        className=\"form-control\"\n                        value={formData.time}\n                        onChange={handleInputChange}\n                        required\n                        style={{ \n                          appearance: 'menulist',\n                          backgroundImage: 'none',\n                          paddingRight: '8px'\n                        }}\n                      >\n                        {/* Morning slots */}\n                        <optgroup label=\"Morning\">\n                          <option value=\"08:00\">8:00 AM</option>\n                          <option value=\"08:30\">8:30 AM</option>\n                          <option value=\"09:00\">9:00 AM</option>\n                          <option value=\"09:30\">9:30 AM</option>\n                          <option value=\"10:00\">10:00 AM</option>\n                          <option value=\"10:30\">10:30 AM</option>\n                          <option value=\"11:00\">11:00 AM</option>\n                          <option value=\"11:30\">11:30 AM</option>\n                        </optgroup>\n                        {/* Afternoon slots */}\n                        <optgroup label=\"Afternoon\">\n                          <option value=\"12:00\">12:00 PM</option>\n                          <option value=\"12:30\">12:30 PM</option>\n                          <option value=\"13:00\">1:00 PM</option>\n                          <option value=\"13:30\">1:30 PM</option>\n                          <option value=\"14:00\">2:00 PM</option>\n                          <option value=\"14:30\">2:30 PM</option>\n                          <option value=\"15:00\">3:00 PM</option>\n                          <option value=\"15:30\">3:30 PM</option>\n                          <option value=\"16:00\">4:00 PM</option>\n                          <option value=\"16:30\">4:30 PM</option>\n                          <option value=\"17:00\">5:00 PM</option>\n                          <option value=\"17:30\">5:30 PM</option>\n                        </optgroup>\n                        {/* Evening slots */}\n                        <optgroup label=\"Evening\">\n                          <option value=\"18:00\">6:00 PM</option>\n                          <option value=\"18:30\">6:30 PM</option>\n                          <option value=\"19:00\">7:00 PM</option>\n                        </optgroup>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"duration\">Duration</label>\n                <select\n                  id=\"duration\" \n                  name=\"duration\" \n                  className=\"form-control\"\n                  value={formData.duration}\n                  onChange={handleInputChange}\n                  required\n                >\n                  <option value=\"60\">1 hour</option>\n                  <option value=\"90\">1.5 hours</option>\n                  <option value=\"120\">2 hours</option>\n                  <option value=\"180\">3 hours</option>\n                  <option value=\"240\">4 hours</option>\n                  <option value=\"300\">5 hours</option>\n                  <option value=\"360\">6 hours</option>\n                  <option value=\"480\">8 hours (Full day)</option>\n                  <option value=\"720\">12 hours</option>\n                  <option value=\"1440\">24 hours (Overnight)</option>\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"notes\">Notes</label>\n                <textarea \n                  id=\"notes\" \n                  name=\"notes\" \n                  className=\"form-control\"\n                  value={formData.notes}\n                  onChange={handleInputChange}\n                  rows=\"3\"\n                  placeholder=\"Add any special requirements, setup instructions, or equipment needs\"\n                ></textarea>\n              </div>\n              \n              <div className=\"form-actions\" style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px', marginTop: '20px' }}>\n                <button \n                  type=\"button\" \n                  className=\"btn btn-outline-secondary\"\n                  onClick={() => navigate('/bookings')}\n                >\n                  Cancel\n                </button>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  {isEditing ? 'Update Booking' : 'Create Booking'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      \n      {showNewCustomerModal && (\n        <div className=\"modal\" style={{\n          display: 'block',\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          zIndex: 1000\n        }}>\n          <div className=\"modal-dialog\" style={{\n            margin: '60px auto',\n            maxWidth: '500px'\n          }}>\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Create New Customer</h5>\n                <button type=\"button\" className=\"close\" onClick={() => setShowNewCustomerModal(false)}>\n                  <span>&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form>\n                  <div className=\"form-group mb-3\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"name\"\n                      value={newCustomer.name}\n                      onChange={handleNewCustomerChange}\n                      placeholder=\"Enter full name\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group mb-3\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      name=\"email\"\n                      value={newCustomer.email}\n                      onChange={handleNewCustomerChange}\n                      placeholder=\"Enter email address\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group mb-3\">\n                    <label>Phone</label>\n                    <input\n                      type=\"tel\"\n                      className=\"form-control\"\n                      name=\"phone\"\n                      value={newCustomer.phone}\n                      onChange={handleNewCustomerChange}\n                      placeholder=\"Enter phone number\"\n                      required\n                    />\n                  </div>\n                </form>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setShowNewCustomerModal(false)}>\n                  Cancel\n                </button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={handleNewCustomerSubmit}>\n                  Create Customer\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AppointmentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}