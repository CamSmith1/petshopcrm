{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useParams}from'react-router-dom';import{toast}from'react-toastify';import PageHeader from'../components/common/PageHeader';import LoadingSpinner from'../components/common/LoadingSpinner';import api from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AppointmentForm=()=>{const{appointmentId}=useParams();const navigate=useNavigate();const isEditing=appointmentId&&appointmentId!=='new';const[loading,setLoading]=useState(isEditing);const[services,setServices]=useState([]);const[customers,setCustomers]=useState([]);const[selectedCustomer,setSelectedCustomer]=useState('');const[formData,setFormData]=useState({serviceId:'',customerId:'',date:'',time:'',duration:60,notes:''});useEffect(()=>{// Fetch services, customers and pets data\nconst fetchFormData=async()=>{try{// Fetch services\nconst servicesResponse=await api.getServices();setServices(servicesResponse.data.services||[]);// Fetch customers (using mock data for now)\nconst customersData=[{_id:'cust1',name:'John Smith',email:'john@example.com'},{_id:'cust2',name:'Mary Johnson',email:'mary@example.com'},{_id:'cust3',name:'David Williams',email:'david@example.com'},{_id:'cust4',name:'Sarah Miller',email:'sarah@example.com'}];setCustomers(customersData);// Pets data removed\n// If editing, fetch appointment data\nif(isEditing){var _appointment$client,_appointment$service,_appointment$client2,_appointment$notes;const appointmentResponse=await api.getBooking(appointmentId);const appointment=appointmentResponse.data.booking;// Set customer\nif((_appointment$client=appointment.client)!==null&&_appointment$client!==void 0&&_appointment$client._id){setSelectedCustomer(appointment.client._id);}// Format the date and time\nconst appointmentDate=new Date(appointment.startTime);const formattedDate=appointmentDate.toISOString().split('T')[0];const formattedTime=appointmentDate.toTimeString().slice(0,5);// Calculate duration in minutes\nconst endTime=new Date(appointment.endTime);const durationMinutes=Math.round((endTime-appointmentDate)/60000);setFormData({serviceId:((_appointment$service=appointment.service)===null||_appointment$service===void 0?void 0:_appointment$service._id)||'',customerId:((_appointment$client2=appointment.client)===null||_appointment$client2===void 0?void 0:_appointment$client2._id)||'',date:formattedDate,time:formattedTime,duration:durationMinutes,notes:((_appointment$notes=appointment.notes)===null||_appointment$notes===void 0?void 0:_appointment$notes.client)||''});}}catch(error){console.error('Error fetching form data:',error);toast.error('Failed to load appointment data');}finally{setLoading(false);}};fetchFormData();},[appointmentId,isEditing]);// Update customer selection\nuseEffect(()=>{if(selectedCustomer){setFormData(prev=>({...prev,customerId:selectedCustomer}));}},[selectedCustomer]);const handleInputChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});// If customer is changed, update selected customer\nif(name==='customerId'){setSelectedCustomer(value);}};const handleSubmit=async e=>{e.preventDefault();setLoading(true);try{// Format date and time for API\nconst startTime=new Date(`${formData.date}T${formData.time}`);const endTime=new Date(startTime.getTime()+formData.duration*60000);const appointmentData={service:formData.serviceId,client:formData.customerId,startTime:startTime.toISOString(),endTime:endTime.toISOString(),notes:{client:formData.notes},status:'pending'};// Create or update appointment\nif(isEditing){await api.updateBooking(appointmentId,appointmentData);toast.success('Appointment updated successfully');}else{await api.createBooking(appointmentData);toast.success('Appointment created successfully');}// Navigate back to appointments list\nnavigate('/appointments');}catch(error){var _error$response,_error$response$data;console.error('Error saving appointment:',error);toast.error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to save appointment');}finally{setLoading(false);}};if(loading){return/*#__PURE__*/_jsx(LoadingSpinner,{});}return/*#__PURE__*/_jsxs(\"div\",{className:\"page-container\",children:[/*#__PURE__*/_jsx(PageHeader,{title:isEditing?'Edit Appointment':'New Appointment',backLink:\"/appointments\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Service Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"serviceId\",children:\"Service\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"serviceId\",name:\"serviceId\",className:\"form-control\",value:formData.serviceId,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a service\"}),services.map(service=>{var _service$price;return/*#__PURE__*/_jsxs(\"option\",{value:service._id,children:[service.title,\" ($\",((_service$price=service.price)===null||_service$price===void 0?void 0:_service$price.amount)||0,\")\"]},service._id);})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Customer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"customerId\",children:\"Customer\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"customerId\",name:\"customerId\",className:\"form-control\",value:formData.customerId,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a customer\"}),customers.map(customer=>/*#__PURE__*/_jsxs(\"option\",{value:customer._id,children:[customer.name,\" (\",customer.email,\")\"]},customer._id))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Appointment Time\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"date\",children:\"Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"date\",name:\"date\",className:\"form-control\",value:formData.date,onChange:handleInputChange,required:true,min:new Date().toISOString().split('T')[0]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"time\",children:\"Time\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",id:\"time\",name:\"time\",className:\"form-control\",value:formData.time,onChange:handleInputChange,required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"duration\",children:\"Duration (minutes)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"duration\",name:\"duration\",className:\"form-control\",value:formData.duration,onChange:handleInputChange,min:\"15\",max:\"240\",step:\"15\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Additional Information\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"notes\",children:\"Notes\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"notes\",name:\"notes\",className:\"form-control\",value:formData.notes,onChange:handleInputChange,rows:\"3\",placeholder:\"Add any special instructions or notes for this appointment\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-outline-secondary\",onClick:()=>navigate('/appointments'),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:isEditing?'Update Appointment':'Create Appointment'})]})]})})})]});};export default AppointmentForm;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","toast","PageHeader","LoadingSpinner","api","jsx","_jsx","jsxs","_jsxs","AppointmentForm","appointmentId","navigate","isEditing","loading","setLoading","services","setServices","customers","setCustomers","selectedCustomer","setSelectedCustomer","formData","setFormData","serviceId","customerId","date","time","duration","notes","fetchFormData","servicesResponse","getServices","data","customersData","_id","name","email","_appointment$client","_appointment$service","_appointment$client2","_appointment$notes","appointmentResponse","getBooking","appointment","booking","client","appointmentDate","Date","startTime","formattedDate","toISOString","split","formattedTime","toTimeString","slice","endTime","durationMinutes","Math","round","service","error","console","prev","handleInputChange","e","value","target","handleSubmit","preventDefault","getTime","appointmentData","status","updateBooking","success","createBooking","_error$response","_error$response$data","response","className","children","title","backLink","onSubmit","htmlFor","id","onChange","required","map","_service$price","price","amount","customer","type","min","max","step","rows","placeholder","onClick"],"sources":["/home/toebot/dog-services-saas/frontend/src/pages/AppointmentForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PageHeader from '../components/common/PageHeader';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport api from '../services/api';\n\nconst AppointmentForm = () => {\n  const { appointmentId } = useParams();\n  const navigate = useNavigate();\n  const isEditing = appointmentId && appointmentId !== 'new';\n  \n  const [loading, setLoading] = useState(isEditing);\n  const [services, setServices] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState('');\n  \n  const [formData, setFormData] = useState({\n    serviceId: '',\n    customerId: '',\n    date: '',\n    time: '',\n    duration: 60,\n    notes: '',\n  });\n\n  useEffect(() => {\n    // Fetch services, customers and pets data\n    const fetchFormData = async () => {\n      try {\n        // Fetch services\n        const servicesResponse = await api.getServices();\n        setServices(servicesResponse.data.services || []);\n        \n        // Fetch customers (using mock data for now)\n        const customersData = [\n          { _id: 'cust1', name: 'John Smith', email: 'john@example.com' },\n          { _id: 'cust2', name: 'Mary Johnson', email: 'mary@example.com' },\n          { _id: 'cust3', name: 'David Williams', email: 'david@example.com' },\n          { _id: 'cust4', name: 'Sarah Miller', email: 'sarah@example.com' },\n        ];\n        setCustomers(customersData);\n        \n        // Pets data removed\n        \n        // If editing, fetch appointment data\n        if (isEditing) {\n          const appointmentResponse = await api.getBooking(appointmentId);\n          const appointment = appointmentResponse.data.booking;\n          \n          // Set customer\n          if (appointment.client?._id) {\n            setSelectedCustomer(appointment.client._id);\n          }\n          \n          // Format the date and time\n          const appointmentDate = new Date(appointment.startTime);\n          const formattedDate = appointmentDate.toISOString().split('T')[0];\n          const formattedTime = appointmentDate.toTimeString().slice(0, 5);\n          \n          // Calculate duration in minutes\n          const endTime = new Date(appointment.endTime);\n          const durationMinutes = Math.round((endTime - appointmentDate) / 60000);\n          \n          setFormData({\n            serviceId: appointment.service?._id || '',\n            customerId: appointment.client?._id || '',\n            date: formattedDate,\n            time: formattedTime,\n            duration: durationMinutes,\n            notes: appointment.notes?.client || '',\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n        toast.error('Failed to load appointment data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchFormData();\n  }, [appointmentId, isEditing]);\n  \n  // Update customer selection\n  useEffect(() => {\n    if (selectedCustomer) {\n      setFormData(prev => ({\n        ...prev,\n        customerId: selectedCustomer,\n      }));\n    }\n  }, [selectedCustomer]);\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n    \n    // If customer is changed, update selected customer\n    if (name === 'customerId') {\n      setSelectedCustomer(value);\n    }\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    try {\n      // Format date and time for API\n      const startTime = new Date(`${formData.date}T${formData.time}`);\n      const endTime = new Date(startTime.getTime() + formData.duration * 60000);\n      \n      const appointmentData = {\n        service: formData.serviceId,\n        client: formData.customerId,\n        startTime: startTime.toISOString(),\n        endTime: endTime.toISOString(),\n        notes: {\n          client: formData.notes,\n        },\n        status: 'pending',\n      };\n      \n      // Create or update appointment\n      if (isEditing) {\n        await api.updateBooking(appointmentId, appointmentData);\n        toast.success('Appointment updated successfully');\n      } else {\n        await api.createBooking(appointmentData);\n        toast.success('Appointment created successfully');\n      }\n      \n      // Navigate back to appointments list\n      navigate('/appointments');\n    } catch (error) {\n      console.error('Error saving appointment:', error);\n      toast.error(error.response?.data?.error || 'Failed to save appointment');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  if (loading) {\n    return <LoadingSpinner />;\n  }\n  \n  return (\n    <div className=\"page-container\">\n      <PageHeader \n        title={isEditing ? 'Edit Appointment' : 'New Appointment'} \n        backLink=\"/appointments\"\n      />\n      \n      <div className=\"card\">\n        <div className=\"card-body\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-section\">\n              <h3>Service Details</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"serviceId\">Service</label>\n                <select \n                  id=\"serviceId\" \n                  name=\"serviceId\" \n                  className=\"form-control\"\n                  value={formData.serviceId}\n                  onChange={handleInputChange}\n                  required\n                >\n                  <option value=\"\">Select a service</option>\n                  {services.map(service => (\n                    <option key={service._id} value={service._id}>\n                      {service.title} (${service.price?.amount || 0})\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-section\">\n              <h3>Customer</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"customerId\">Customer</label>\n                <select \n                  id=\"customerId\" \n                  name=\"customerId\" \n                  className=\"form-control\"\n                  value={formData.customerId}\n                  onChange={handleInputChange}\n                  required\n                >\n                  <option value=\"\">Select a customer</option>\n                  {customers.map(customer => (\n                    <option key={customer._id} value={customer._id}>\n                      {customer.name} ({customer.email})\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-section\">\n              <h3>Appointment Time</h3>\n              <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                  <label htmlFor=\"date\">Date</label>\n                  <input \n                    type=\"date\" \n                    id=\"date\" \n                    name=\"date\" \n                    className=\"form-control\"\n                    value={formData.date}\n                    onChange={handleInputChange}\n                    required\n                    min={new Date().toISOString().split('T')[0]}\n                  />\n                </div>\n                <div className=\"form-group col-md-6\">\n                  <label htmlFor=\"time\">Time</label>\n                  <input \n                    type=\"time\" \n                    id=\"time\" \n                    name=\"time\" \n                    className=\"form-control\"\n                    value={formData.time}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"duration\">Duration (minutes)</label>\n                <input \n                  type=\"number\" \n                  id=\"duration\" \n                  name=\"duration\" \n                  className=\"form-control\"\n                  value={formData.duration}\n                  onChange={handleInputChange}\n                  min=\"15\"\n                  max=\"240\"\n                  step=\"15\"\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-section\">\n              <h3>Additional Information</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"notes\">Notes</label>\n                <textarea \n                  id=\"notes\" \n                  name=\"notes\" \n                  className=\"form-control\"\n                  value={formData.notes}\n                  onChange={handleInputChange}\n                  rows=\"3\"\n                  placeholder=\"Add any special instructions or notes for this appointment\"\n                ></textarea>\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                type=\"button\" \n                className=\"btn btn-outline-secondary\"\n                onClick={() => navigate('/appointments')}\n              >\n                Cancel\n              </button>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                {isEditing ? 'Update Appointment' : 'Create Appointment'}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppointmentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}