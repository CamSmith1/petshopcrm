{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';// Create a context for theme management\nimport{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();// Custom hook to use the theme context\nexport const useTheme=()=>useContext(ThemeContext);// Theme provider component\nexport const ThemeProvider=_ref=>{let{children}=_ref;// Check local storage for saved theme preference or use system preference\nconst getInitialTheme=()=>{const savedTheme=localStorage.getItem('bookingpro-theme');if(savedTheme){return savedTheme;}// Check for system preference\nif(window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches){return'dark';}return'light';};const[theme,setTheme]=useState(getInitialTheme);// Update theme in local storage when it changes\nuseEffect(()=>{localStorage.setItem('bookingpro-theme',theme);// Apply theme to body element\nif(theme==='dark'){document.body.classList.add('dark-theme');}else{document.body.classList.remove('dark-theme');}},[theme]);// Toggle between light and dark theme\nconst toggleTheme=()=>{setTheme(prevTheme=>prevTheme==='light'?'dark':'light');};// Set specific theme\nconst setSpecificTheme=newTheme=>{if(newTheme==='light'||newTheme==='dark'){setTheme(newTheme);}};// Listen for system theme changes\nuseEffect(()=>{const mediaQuery=window.matchMedia('(prefers-color-scheme: dark)');const handleChange=e=>{// Only change theme if user hasn't manually set a preference\nif(!localStorage.getItem('bookingpro-theme')){setTheme(e.matches?'dark':'light');}};mediaQuery.addEventListener('change',handleChange);return()=>{mediaQuery.removeEventListener('change',handleChange);};},[]);return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,toggleTheme,setTheme:setSpecificTheme},children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","ThemeContext","useTheme","ThemeProvider","_ref","children","getInitialTheme","savedTheme","localStorage","getItem","window","matchMedia","matches","theme","setTheme","setItem","document","body","classList","add","remove","toggleTheme","prevTheme","setSpecificTheme","newTheme","mediaQuery","handleChange","e","addEventListener","removeEventListener","Provider","value"],"sources":["/home/toebot/dog-services-saas/frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create a context for theme management\nconst ThemeContext = createContext();\n\n// Custom hook to use the theme context\nexport const useTheme = () => useContext(ThemeContext);\n\n// Theme provider component\nexport const ThemeProvider = ({ children }) => {\n  // Check local storage for saved theme preference or use system preference\n  const getInitialTheme = () => {\n    const savedTheme = localStorage.getItem('bookingpro-theme');\n    \n    if (savedTheme) {\n      return savedTheme;\n    }\n    \n    // Check for system preference\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark';\n    }\n    \n    return 'light';\n  };\n  \n  const [theme, setTheme] = useState(getInitialTheme);\n  \n  // Update theme in local storage when it changes\n  useEffect(() => {\n    localStorage.setItem('bookingpro-theme', theme);\n    // Apply theme to body element\n    if (theme === 'dark') {\n      document.body.classList.add('dark-theme');\n    } else {\n      document.body.classList.remove('dark-theme');\n    }\n  }, [theme]);\n  \n  // Toggle between light and dark theme\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  \n  // Set specific theme\n  const setSpecificTheme = (newTheme) => {\n    if (newTheme === 'light' || newTheme === 'dark') {\n      setTheme(newTheme);\n    }\n  };\n  \n  // Listen for system theme changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    \n    const handleChange = (e) => {\n      // Only change theme if user hasn't manually set a preference\n      if (!localStorage.getItem('bookingpro-theme')) {\n        setTheme(e.matches ? 'dark' : 'light');\n      }\n    };\n    \n    mediaQuery.addEventListener('change', handleChange);\n    \n    return () => {\n      mediaQuery.removeEventListener('change', handleChange);\n    };\n  }, []);\n  \n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme, setTheme: setSpecificTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAE7E;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC;AACA,MAAO,MAAM,CAAAO,QAAQ,CAAGA,CAAA,GAAML,UAAU,CAACI,YAAY,CAAC,CAEtD;AACA,MAAO,MAAM,CAAAE,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC;AACA,KAAM,CAAAE,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAE3D,GAAIF,UAAU,CAAE,CACd,MAAO,CAAAA,UAAU,CACnB,CAEA;AACA,GAAIG,MAAM,CAACC,UAAU,EAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CAAE,CAClF,MAAO,MAAM,CACf,CAEA,MAAO,OAAO,CAChB,CAAC,CAED,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAACU,eAAe,CAAC,CAEnD;AACAR,SAAS,CAAC,IAAM,CACdU,YAAY,CAACO,OAAO,CAAC,kBAAkB,CAAEF,KAAK,CAAC,CAC/C;AACA,GAAIA,KAAK,GAAK,MAAM,CAAE,CACpBG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC,CAC3C,CAAC,IAAM,CACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC,CAC9C,CACF,CAAC,CAAE,CAACP,KAAK,CAAC,CAAC,CAEX;AACA,KAAM,CAAAQ,WAAW,CAAGA,CAAA,GAAM,CACxBP,QAAQ,CAACQ,SAAS,EAAIA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CACjE,CAAC,CAED;AACA,KAAM,CAAAC,gBAAgB,CAAIC,QAAQ,EAAK,CACrC,GAAIA,QAAQ,GAAK,OAAO,EAAIA,QAAQ,GAAK,MAAM,CAAE,CAC/CV,QAAQ,CAACU,QAAQ,CAAC,CACpB,CACF,CAAC,CAED;AACA1B,SAAS,CAAC,IAAM,CACd,KAAM,CAAA2B,UAAU,CAAGf,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAEpE,KAAM,CAAAe,YAAY,CAAIC,CAAC,EAAK,CAC1B;AACA,GAAI,CAACnB,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAE,CAC7CK,QAAQ,CAACa,CAAC,CAACf,OAAO,CAAG,MAAM,CAAG,OAAO,CAAC,CACxC,CACF,CAAC,CAEDa,UAAU,CAACG,gBAAgB,CAAC,QAAQ,CAAEF,YAAY,CAAC,CAEnD,MAAO,IAAM,CACXD,UAAU,CAACI,mBAAmB,CAAC,QAAQ,CAAEH,YAAY,CAAC,CACxD,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,mBACE1B,IAAA,CAACC,YAAY,CAAC6B,QAAQ,EAACC,KAAK,CAAE,CAAElB,KAAK,CAAEQ,WAAW,CAAEP,QAAQ,CAAES,gBAAiB,CAAE,CAAAlB,QAAA,CAC9EA,QAAQ,CACY,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}