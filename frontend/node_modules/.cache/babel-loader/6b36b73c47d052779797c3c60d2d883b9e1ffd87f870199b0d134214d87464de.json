{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";/**\n * Button component with different variants and styling options\n * Can be rendered as a button or a link (if 'to' prop is provided)\n */const Button=_ref=>{let{children,onClick,to,type='button',primary,secondary,danger,outline,small,large,fullWidth,disabled,leftIcon,rightIcon,loading,className,...props}=_ref;// Build class names based on props\nconst buttonClasses=['btn',primary?'btn-primary':'',secondary?'btn-secondary':'',danger?'btn-danger':'',outline?'btn-outline':'',small?'btn-sm':'',large?'btn-lg':'',fullWidth?'btn-block':'',loading?'btn-loading':'',className||''].filter(Boolean).join(' ');// Render loading state if loading prop is true\nconst renderLoadingIndicator=()=>{if(!loading)return null;return/*#__PURE__*/_jsx(\"span\",{className:\"btn-spinner\",\"aria-hidden\":\"true\",children:/*#__PURE__*/_jsxs(\"svg\",{className:\"animate-spin\",xmlns:\"http://www.w3.org/2000/svg\",fill:\"none\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"circle\",{className:\"opacity-25\",cx:\"12\",cy:\"12\",r:\"10\",stroke:\"currentColor\",strokeWidth:\"4\"}),/*#__PURE__*/_jsx(\"path\",{className:\"opacity-75\",fill:\"currentColor\",d:\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"})]})});};// Render content with icons\nconst renderContent=()=>{return/*#__PURE__*/_jsxs(_Fragment,{children:[loading&&renderLoadingIndicator(),leftIcon&&!loading&&/*#__PURE__*/_jsx(\"span\",{className:\"btn-icon btn-icon-left\",children:leftIcon}),/*#__PURE__*/_jsx(\"span\",{className:loading?'opacity-0':'',children:children}),rightIcon&&!loading&&/*#__PURE__*/_jsx(\"span\",{className:\"btn-icon btn-icon-right\",children:rightIcon})]});};// If 'to' prop is provided, render as Link component\nif(to){return/*#__PURE__*/_jsx(Link,{to:to,className:buttonClasses,...props,children:renderContent()});}// Otherwise, render as button element\nreturn/*#__PURE__*/_jsx(\"button\",{type:type,className:buttonClasses,onClick:onClick,disabled:disabled||loading,...props,children:renderContent()});};export default Button;","map":{"version":3,"names":["React","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Button","_ref","children","onClick","to","type","primary","secondary","danger","outline","small","large","fullWidth","disabled","leftIcon","rightIcon","loading","className","props","buttonClasses","filter","Boolean","join","renderLoadingIndicator","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","renderContent"],"sources":["/home/toebot/dog-services-saas/frontend/src/components/common/Button.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/**\n * Button component with different variants and styling options\n * Can be rendered as a button or a link (if 'to' prop is provided)\n */\nconst Button = ({\n  children,\n  onClick,\n  to,\n  type = 'button',\n  primary,\n  secondary,\n  danger,\n  outline,\n  small,\n  large,\n  fullWidth,\n  disabled,\n  leftIcon,\n  rightIcon,\n  loading,\n  className,\n  ...props\n}) => {\n  // Build class names based on props\n  const buttonClasses = [\n    'btn',\n    primary ? 'btn-primary' : '',\n    secondary ? 'btn-secondary' : '',\n    danger ? 'btn-danger' : '',\n    outline ? 'btn-outline' : '',\n    small ? 'btn-sm' : '',\n    large ? 'btn-lg' : '',\n    fullWidth ? 'btn-block' : '',\n    loading ? 'btn-loading' : '',\n    className || ''\n  ].filter(Boolean).join(' ');\n  \n  // Render loading state if loading prop is true\n  const renderLoadingIndicator = () => {\n    if (!loading) return null;\n    \n    return (\n      <span className=\"btn-spinner\" aria-hidden=\"true\">\n        <svg \n          className=\"animate-spin\" \n          xmlns=\"http://www.w3.org/2000/svg\" \n          fill=\"none\" \n          viewBox=\"0 0 24 24\"\n        >\n          <circle \n            className=\"opacity-25\" \n            cx=\"12\" \n            cy=\"12\" \n            r=\"10\" \n            stroke=\"currentColor\" \n            strokeWidth=\"4\"\n          ></circle>\n          <path \n            className=\"opacity-75\" \n            fill=\"currentColor\" \n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          ></path>\n        </svg>\n      </span>\n    );\n  };\n  \n  // Render content with icons\n  const renderContent = () => {\n    return (\n      <>\n        {loading && renderLoadingIndicator()}\n        {leftIcon && !loading && <span className=\"btn-icon btn-icon-left\">{leftIcon}</span>}\n        <span className={loading ? 'opacity-0' : ''}>{children}</span>\n        {rightIcon && !loading && <span className=\"btn-icon btn-icon-right\">{rightIcon}</span>}\n      </>\n    );\n  };\n  \n  // If 'to' prop is provided, render as Link component\n  if (to) {\n    return (\n      <Link\n        to={to}\n        className={buttonClasses}\n        {...props}\n      >\n        {renderContent()}\n      </Link>\n    );\n  }\n  \n  // Otherwise, render as button element\n  return (\n    <button\n      type={type}\n      className={buttonClasses}\n      onClick={onClick}\n      disabled={disabled || loading}\n      {...props}\n    >\n      {renderContent()}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  to: PropTypes.string,\n  type: PropTypes.string,\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n  danger: PropTypes.bool,\n  outline: PropTypes.bool,\n  small: PropTypes.bool,\n  large: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  disabled: PropTypes.bool,\n  leftIcon: PropTypes.node,\n  rightIcon: PropTypes.node,\n  loading: PropTypes.bool,\n  className: PropTypes.string\n};\n\nexport default Button;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}