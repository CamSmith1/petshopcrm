{"ast":null,"code":"var _jsxFileName = \"/home/toebot/dog-services-saas/frontend/src/pages/AppointmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PageHeader from '../components/common/PageHeader';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentForm = () => {\n  _s();\n  const {\n    appointmentId\n  } = useParams();\n  const navigate = useNavigate();\n  const isEditing = appointmentId && appointmentId !== 'new';\n  const [loading, setLoading] = useState(isEditing);\n  const [services, setServices] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredCustomers, setFilteredCustomers] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const searchContainerRef = useRef(null);\n  const [formData, setFormData] = useState({\n    serviceId: '',\n    customerId: '',\n    customerName: '',\n    date: '',\n    time: '',\n    duration: 60,\n    notes: ''\n  });\n  useEffect(() => {\n    // Fetch services, customers and pets data\n    const fetchFormData = async () => {\n      try {\n        // Fetch services\n        const servicesResponse = await api.getServices();\n        setServices(servicesResponse.data.services || []);\n\n        // Fetch customers (using mock data for now)\n        const customersData = [{\n          _id: 'cust1',\n          name: 'John Smith',\n          email: 'john@example.com',\n          phone: '555-123-4567'\n        }, {\n          _id: 'cust2',\n          name: 'Mary Johnson',\n          email: 'mary@example.com',\n          phone: '555-234-5678'\n        }, {\n          _id: 'cust3',\n          name: 'David Williams',\n          email: 'david@example.com',\n          phone: '555-345-6789'\n        }, {\n          _id: 'cust4',\n          name: 'Sarah Miller',\n          email: 'sarah@example.com',\n          phone: '555-456-7890'\n        }, {\n          _id: 'cust5',\n          name: 'James Brown',\n          email: 'james@example.com',\n          phone: '555-567-8901'\n        }, {\n          _id: 'cust6',\n          name: 'Jennifer Davis',\n          email: 'jennifer@example.com',\n          phone: '555-678-9012'\n        }, {\n          _id: 'cust7',\n          name: 'Michael Wilson',\n          email: 'michael@example.com',\n          phone: '555-789-0123'\n        }, {\n          _id: 'cust8',\n          name: 'Linda Martinez',\n          email: 'linda@example.com',\n          phone: '555-890-1234'\n        }, {\n          _id: 'cust9',\n          name: 'Robert Taylor',\n          email: 'robert@example.com',\n          phone: '555-901-2345'\n        }, {\n          _id: 'cust10',\n          name: 'Elizabeth Anderson',\n          email: 'elizabeth@example.com',\n          phone: '555-012-3456'\n        }];\n        setCustomers(customersData);\n        setFilteredCustomers(customersData);\n\n        // Pets data removed\n\n        // If editing, fetch appointment data\n        if (isEditing) {\n          var _appointment$client, _appointment$service, _appointment$client3, _appointment$notes;\n          const appointmentResponse = await api.getBooking(appointmentId);\n          const appointment = appointmentResponse.data.booking;\n\n          // Set customer\n          if ((_appointment$client = appointment.client) !== null && _appointment$client !== void 0 && _appointment$client._id) {\n            var _appointment$client2;\n            setSelectedCustomer(appointment.client._id);\n            setSearchTerm(((_appointment$client2 = appointment.client) === null || _appointment$client2 === void 0 ? void 0 : _appointment$client2.name) || '');\n          }\n\n          // Format the date and time\n          const appointmentDate = new Date(appointment.startTime);\n          const formattedDate = appointmentDate.toISOString().split('T')[0];\n          const formattedTime = appointmentDate.toTimeString().slice(0, 5);\n\n          // Calculate duration in minutes\n          const endTime = new Date(appointment.endTime);\n          const durationMinutes = Math.round((endTime - appointmentDate) / 60000);\n          setFormData({\n            serviceId: ((_appointment$service = appointment.service) === null || _appointment$service === void 0 ? void 0 : _appointment$service._id) || '',\n            customerId: ((_appointment$client3 = appointment.client) === null || _appointment$client3 === void 0 ? void 0 : _appointment$client3._id) || '',\n            date: formattedDate,\n            time: formattedTime,\n            duration: durationMinutes,\n            notes: ((_appointment$notes = appointment.notes) === null || _appointment$notes === void 0 ? void 0 : _appointment$notes.client) || ''\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n        toast.error('Failed to load appointment data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFormData();\n  }, [appointmentId, isEditing]);\n\n  // Filter customers based on search term\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredCustomers(customers);\n      return;\n    }\n    const lowercasedFilter = searchTerm.toLowerCase();\n    const filtered = customers.filter(customer => {\n      return customer.name.toLowerCase().includes(lowercasedFilter) || customer.email.toLowerCase().includes(lowercasedFilter) || customer.phone.toLowerCase().includes(lowercasedFilter);\n    });\n    setFilteredCustomers(filtered);\n    setShowDropdown(true);\n  }, [searchTerm, customers]);\n\n  // Update customer selection\n  useEffect(() => {\n    if (selectedCustomer) {\n      const customer = customers.find(c => c._id === selectedCustomer);\n      setFormData(prev => ({\n        ...prev,\n        customerId: selectedCustomer,\n        customerName: customer ? customer.name : ''\n      }));\n    }\n  }, [selectedCustomer, customers]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleCustomerSearch = e => {\n    setSearchTerm(e.target.value);\n    setFormData({\n      ...formData,\n      customerName: e.target.value,\n      customerId: ''\n    });\n  };\n  const handleSelectCustomer = customer => {\n    setSelectedCustomer(customer._id);\n    setSearchTerm(customer.name);\n    setFormData({\n      ...formData,\n      customerId: customer._id,\n      customerName: customer.name\n    });\n    setShowDropdown(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate if a customer is selected\n    if (!formData.customerId) {\n      toast.error('Please select a customer from the search results');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Format date and time for API\n      const startTime = new Date(`${formData.date}T${formData.time}`);\n      const endTime = new Date(startTime.getTime() + formData.duration * 60000);\n\n      // Find selected customer and service details for richer data storage\n      const selectedCustomer = customers.find(cust => cust._id === formData.customerId) || {};\n      const selectedService = services.find(svc => svc._id === formData.serviceId) || {};\n      const appointmentData = {\n        service: {\n          _id: formData.serviceId,\n          title: selectedService.title || 'Unknown Service'\n        },\n        client: {\n          _id: formData.customerId,\n          name: selectedCustomer.name || 'Unknown Customer',\n          email: selectedCustomer.email || ''\n        },\n        startTime: startTime.toISOString(),\n        endTime: endTime.toISOString(),\n        notes: {\n          client: formData.notes\n        },\n        status: 'pending',\n        location: 'In-store'\n      };\n\n      // Create or update appointment\n      if (isEditing) {\n        await api.updateBooking(appointmentId, appointmentData);\n        toast.success('Appointment updated successfully');\n      } else {\n        await api.createBooking(appointmentData);\n        toast.success('Appointment created successfully');\n      }\n\n      // Navigate back to appointments list\n      navigate('/appointments');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error saving appointment:', error);\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to save appointment');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Close dropdown when clicking outside\n  const handleClickOutside = event => {\n    if (searchContainerRef.current && !searchContainerRef.current.contains(event.target)) {\n      setShowDropdown(false);\n    }\n  };\n\n  // Add event listener for clicking outside\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: isEditing ? 'Edit Appointment' : 'New Appointment',\n      backLink: \"/appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        maxWidth: '600px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"serviceId\",\n              children: \"Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"serviceId\",\n              name: \"serviceId\",\n              className: \"form-control\",\n              value: formData.serviceId,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a service\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), services.map(service => {\n                var _service$price;\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: service._id,\n                  children: [service.title, \" ($\", ((_service$price = service.price) === null || _service$price === void 0 ? void 0 : _service$price.amount) || 0, \")\"]\n                }, service._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"customerSearch\",\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"customer-search-container\",\n              style: {\n                position: 'relative'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"customerSearch\",\n                name: \"customerSearch\",\n                className: \"form-control\",\n                placeholder: \"Search by name, email, or phone\",\n                value: searchTerm,\n                onChange: handleCustomerSearch,\n                onFocus: () => setShowDropdown(true),\n                autoComplete: \"off\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), showDropdown && filteredCustomers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"customer-search-results\",\n                style: {\n                  position: 'absolute',\n                  width: '100%',\n                  maxHeight: '200px',\n                  overflow: 'auto',\n                  backgroundColor: '#fff',\n                  border: '1px solid #ddd',\n                  borderTop: 'none',\n                  zIndex: 10,\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                },\n                children: filteredCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"customer-search-item\",\n                  onClick: () => handleSelectCustomer(customer),\n                  style: {\n                    padding: '8px 15px',\n                    cursor: 'pointer',\n                    borderBottom: '1px solid #eee',\n                    borderLeft: `3px solid ${customer._id === selectedCustomer ? '#4a90e2' : 'transparent'}`,\n                    backgroundColor: customer._id === selectedCustomer ? '#f0f7ff' : 'transparent'\n                  },\n                  onMouseEnter: e => e.currentTarget.style.backgroundColor = '#f5f5f5',\n                  onMouseLeave: e => e.currentTarget.style.backgroundColor = customer._id === selectedCustomer ? '#f0f7ff' : 'transparent',\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontWeight: 'bold'\n                    },\n                    children: customer.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: '0.85em',\n                      color: '#666'\n                    },\n                    children: [customer.email, \" \\u2022 \", customer.phone]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 25\n                  }, this)]\n                }, customer._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), showDropdown && searchTerm && filteredCustomers.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-results\",\n                style: {\n                  position: 'absolute',\n                  width: '100%',\n                  padding: '8px 15px',\n                  backgroundColor: '#fff',\n                  border: '1px solid #ddd',\n                  borderTop: 'none',\n                  color: '#666',\n                  textAlign: 'center'\n                },\n                children: \"No customers found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"customerId\",\n                value: formData.customerId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              style: {\n                flex: 1,\n                marginRight: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"date\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"date\",\n                name: \"date\",\n                className: \"form-control\",\n                value: formData.date,\n                onChange: handleInputChange,\n                required: true,\n                min: new Date().toISOString().split('T')[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              style: {\n                flex: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"time\",\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                id: \"time\",\n                name: \"time\",\n                className: \"form-control\",\n                value: formData.time,\n                onChange: handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"duration\",\n              children: \"Duration (minutes)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"duration\",\n              name: \"duration\",\n              className: \"form-control\",\n              value: formData.duration,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"15\",\n                children: \"15 minutes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"30\",\n                children: \"30 minutes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"45\",\n                children: \"45 minutes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"60\",\n                children: \"1 hour\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"90\",\n                children: \"1.5 hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"120\",\n                children: \"2 hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"180\",\n                children: \"3 hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"240\",\n                children: \"4 hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"notes\",\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"notes\",\n              name: \"notes\",\n              className: \"form-control\",\n              value: formData.notes,\n              onChange: handleInputChange,\n              rows: \"2\",\n              placeholder: \"Add any special instructions or notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: '10px',\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-outline-secondary\",\n              onClick: () => navigate('/appointments'),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: isEditing ? 'Update Appointment' : 'Create Appointment'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentForm, \"BlxJ+vaoQ8+ee+y7JRRYPZcljro=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AppointmentForm;\nexport default AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","toast","PageHeader","LoadingSpinner","api","jsxDEV","_jsxDEV","AppointmentForm","_s","appointmentId","navigate","isEditing","loading","setLoading","services","setServices","customers","setCustomers","selectedCustomer","setSelectedCustomer","searchTerm","setSearchTerm","filteredCustomers","setFilteredCustomers","showDropdown","setShowDropdown","searchContainerRef","formData","setFormData","serviceId","customerId","customerName","date","time","duration","notes","fetchFormData","servicesResponse","getServices","data","customersData","_id","name","email","phone","_appointment$client","_appointment$service","_appointment$client3","_appointment$notes","appointmentResponse","getBooking","appointment","booking","client","_appointment$client2","appointmentDate","Date","startTime","formattedDate","toISOString","split","formattedTime","toTimeString","slice","endTime","durationMinutes","Math","round","service","error","console","trim","lowercasedFilter","toLowerCase","filtered","filter","customer","includes","find","c","prev","handleInputChange","e","value","target","handleCustomerSearch","handleSelectCustomer","handleSubmit","preventDefault","getTime","cust","selectedService","svc","appointmentData","title","status","location","updateBooking","success","createBooking","_error$response","_error$response$data","response","fileName","_jsxFileName","lineNumber","columnNumber","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","className","children","backLink","style","maxWidth","margin","onSubmit","htmlFor","id","onChange","required","map","_service$price","price","amount","position","type","placeholder","onFocus","autoComplete","length","width","maxHeight","overflow","backgroundColor","border","borderTop","zIndex","boxShadow","onClick","padding","cursor","borderBottom","borderLeft","onMouseEnter","currentTarget","onMouseLeave","fontWeight","fontSize","color","textAlign","flex","marginRight","min","rows","display","justifyContent","gap","marginTop","_c","$RefreshReg$"],"sources":["/home/toebot/dog-services-saas/frontend/src/pages/AppointmentForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PageHeader from '../components/common/PageHeader';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport api from '../services/api';\n\nconst AppointmentForm = () => {\n  const { appointmentId } = useParams();\n  const navigate = useNavigate();\n  const isEditing = appointmentId && appointmentId !== 'new';\n  \n  const [loading, setLoading] = useState(isEditing);\n  const [services, setServices] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredCustomers, setFilteredCustomers] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const searchContainerRef = useRef(null);\n  \n  const [formData, setFormData] = useState({\n    serviceId: '',\n    customerId: '',\n    customerName: '',\n    date: '',\n    time: '',\n    duration: 60,\n    notes: '',\n  });\n\n  useEffect(() => {\n    // Fetch services, customers and pets data\n    const fetchFormData = async () => {\n      try {\n        // Fetch services\n        const servicesResponse = await api.getServices();\n        setServices(servicesResponse.data.services || []);\n        \n        // Fetch customers (using mock data for now)\n        const customersData = [\n          { _id: 'cust1', name: 'John Smith', email: 'john@example.com', phone: '555-123-4567' },\n          { _id: 'cust2', name: 'Mary Johnson', email: 'mary@example.com', phone: '555-234-5678' },\n          { _id: 'cust3', name: 'David Williams', email: 'david@example.com', phone: '555-345-6789' },\n          { _id: 'cust4', name: 'Sarah Miller', email: 'sarah@example.com', phone: '555-456-7890' },\n          { _id: 'cust5', name: 'James Brown', email: 'james@example.com', phone: '555-567-8901' },\n          { _id: 'cust6', name: 'Jennifer Davis', email: 'jennifer@example.com', phone: '555-678-9012' },\n          { _id: 'cust7', name: 'Michael Wilson', email: 'michael@example.com', phone: '555-789-0123' },\n          { _id: 'cust8', name: 'Linda Martinez', email: 'linda@example.com', phone: '555-890-1234' },\n          { _id: 'cust9', name: 'Robert Taylor', email: 'robert@example.com', phone: '555-901-2345' },\n          { _id: 'cust10', name: 'Elizabeth Anderson', email: 'elizabeth@example.com', phone: '555-012-3456' },\n        ];\n        setCustomers(customersData);\n        setFilteredCustomers(customersData);\n        \n        // Pets data removed\n        \n        // If editing, fetch appointment data\n        if (isEditing) {\n          const appointmentResponse = await api.getBooking(appointmentId);\n          const appointment = appointmentResponse.data.booking;\n          \n          // Set customer\n          if (appointment.client?._id) {\n            setSelectedCustomer(appointment.client._id);\n            setSearchTerm(appointment.client?.name || '');\n          }\n          \n          // Format the date and time\n          const appointmentDate = new Date(appointment.startTime);\n          const formattedDate = appointmentDate.toISOString().split('T')[0];\n          const formattedTime = appointmentDate.toTimeString().slice(0, 5);\n          \n          // Calculate duration in minutes\n          const endTime = new Date(appointment.endTime);\n          const durationMinutes = Math.round((endTime - appointmentDate) / 60000);\n          \n          setFormData({\n            serviceId: appointment.service?._id || '',\n            customerId: appointment.client?._id || '',\n            date: formattedDate,\n            time: formattedTime,\n            duration: durationMinutes,\n            notes: appointment.notes?.client || '',\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n        toast.error('Failed to load appointment data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchFormData();\n  }, [appointmentId, isEditing]);\n  \n  // Filter customers based on search term\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredCustomers(customers);\n      return;\n    }\n    \n    const lowercasedFilter = searchTerm.toLowerCase();\n    const filtered = customers.filter(customer => {\n      return (\n        customer.name.toLowerCase().includes(lowercasedFilter) ||\n        customer.email.toLowerCase().includes(lowercasedFilter) ||\n        customer.phone.toLowerCase().includes(lowercasedFilter)\n      );\n    });\n    \n    setFilteredCustomers(filtered);\n    setShowDropdown(true);\n  }, [searchTerm, customers]);\n  \n  // Update customer selection\n  useEffect(() => {\n    if (selectedCustomer) {\n      const customer = customers.find(c => c._id === selectedCustomer);\n      setFormData(prev => ({\n        ...prev,\n        customerId: selectedCustomer,\n        customerName: customer ? customer.name : '',\n      }));\n    }\n  }, [selectedCustomer, customers]);\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  \n  const handleCustomerSearch = (e) => {\n    setSearchTerm(e.target.value);\n    setFormData({\n      ...formData,\n      customerName: e.target.value,\n      customerId: '',\n    });\n  };\n  \n  const handleSelectCustomer = (customer) => {\n    setSelectedCustomer(customer._id);\n    setSearchTerm(customer.name);\n    setFormData({\n      ...formData,\n      customerId: customer._id,\n      customerName: customer.name,\n    });\n    setShowDropdown(false);\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate if a customer is selected\n    if (!formData.customerId) {\n      toast.error('Please select a customer from the search results');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      // Format date and time for API\n      const startTime = new Date(`${formData.date}T${formData.time}`);\n      const endTime = new Date(startTime.getTime() + formData.duration * 60000);\n      \n      // Find selected customer and service details for richer data storage\n      const selectedCustomer = customers.find(cust => cust._id === formData.customerId) || {};\n      const selectedService = services.find(svc => svc._id === formData.serviceId) || {};\n      \n      const appointmentData = {\n        service: {\n          _id: formData.serviceId,\n          title: selectedService.title || 'Unknown Service'\n        },\n        client: {\n          _id: formData.customerId,\n          name: selectedCustomer.name || 'Unknown Customer',\n          email: selectedCustomer.email || ''\n        },\n        startTime: startTime.toISOString(),\n        endTime: endTime.toISOString(),\n        notes: {\n          client: formData.notes,\n        },\n        status: 'pending',\n        location: 'In-store'\n      };\n      \n      // Create or update appointment\n      if (isEditing) {\n        await api.updateBooking(appointmentId, appointmentData);\n        toast.success('Appointment updated successfully');\n      } else {\n        await api.createBooking(appointmentData);\n        toast.success('Appointment created successfully');\n      }\n      \n      // Navigate back to appointments list\n      navigate('/appointments');\n    } catch (error) {\n      console.error('Error saving appointment:', error);\n      toast.error(error.response?.data?.error || 'Failed to save appointment');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  if (loading) {\n    return <LoadingSpinner />;\n  }\n  \n  // Close dropdown when clicking outside\n  const handleClickOutside = (event) => {\n    if (searchContainerRef.current && !searchContainerRef.current.contains(event.target)) {\n      setShowDropdown(false);\n    }\n  };\n  \n  // Add event listener for clicking outside\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  \n  return (\n    <div className=\"page-container\">\n      <PageHeader \n        title={isEditing ? 'Edit Appointment' : 'New Appointment'} \n        backLink=\"/appointments\"\n      />\n      \n      <div className=\"card\" style={{ maxWidth: '600px', margin: '0 auto' }}>\n        <div className=\"card-body\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"serviceId\">Service</label>\n              <select \n                id=\"serviceId\" \n                name=\"serviceId\" \n                className=\"form-control\"\n                value={formData.serviceId}\n                onChange={handleInputChange}\n                required\n              >\n                <option value=\"\">Select a service</option>\n                {services.map(service => (\n                  <option key={service._id} value={service._id}>\n                    {service.title} (${service.price?.amount || 0})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"customerSearch\">Customer</label>\n              <div className=\"customer-search-container\" style={{ position: 'relative' }}>\n                <input\n                  type=\"text\"\n                  id=\"customerSearch\"\n                  name=\"customerSearch\"\n                  className=\"form-control\"\n                  placeholder=\"Search by name, email, or phone\"\n                  value={searchTerm}\n                  onChange={handleCustomerSearch}\n                  onFocus={() => setShowDropdown(true)}\n                  autoComplete=\"off\"\n                  required\n                />\n                {showDropdown && filteredCustomers.length > 0 && (\n                  <div className=\"customer-search-results\" style={{\n                    position: 'absolute',\n                    width: '100%',\n                    maxHeight: '200px',\n                    overflow: 'auto',\n                    backgroundColor: '#fff',\n                    border: '1px solid #ddd',\n                    borderTop: 'none',\n                    zIndex: 10,\n                    boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                  }}>\n                    {filteredCustomers.map(customer => (\n                      <div\n                        key={customer._id}\n                        className=\"customer-search-item\"\n                        onClick={() => handleSelectCustomer(customer)}\n                        style={{\n                          padding: '8px 15px',\n                          cursor: 'pointer',\n                          borderBottom: '1px solid #eee',\n                          borderLeft: `3px solid ${customer._id === selectedCustomer ? '#4a90e2' : 'transparent'}`,\n                          backgroundColor: customer._id === selectedCustomer ? '#f0f7ff' : 'transparent'\n                        }}\n                        onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#f5f5f5'}\n                        onMouseLeave={(e) => e.currentTarget.style.backgroundColor = customer._id === selectedCustomer ? '#f0f7ff' : 'transparent'}\n                      >\n                        <div style={{ fontWeight: 'bold' }}>{customer.name}</div>\n                        <div style={{ fontSize: '0.85em', color: '#666' }}>\n                          {customer.email} • {customer.phone}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n                {showDropdown && searchTerm && filteredCustomers.length === 0 && (\n                  <div className=\"no-results\" style={{\n                    position: 'absolute',\n                    width: '100%',\n                    padding: '8px 15px',\n                    backgroundColor: '#fff',\n                    border: '1px solid #ddd',\n                    borderTop: 'none',\n                    color: '#666',\n                    textAlign: 'center'\n                  }}>\n                    No customers found\n                  </div>\n                )}\n                {/* Hidden input to store the customer ID for form submission */}\n                <input\n                  type=\"hidden\"\n                  name=\"customerId\"\n                  value={formData.customerId}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\" style={{ flex: 1, marginRight: '10px' }}>\n                <label htmlFor=\"date\">Date</label>\n                <input \n                  type=\"date\" \n                  id=\"date\" \n                  name=\"date\" \n                  className=\"form-control\"\n                  value={formData.date}\n                  onChange={handleInputChange}\n                  required\n                  min={new Date().toISOString().split('T')[0]}\n                />\n              </div>\n              <div className=\"form-group\" style={{ flex: 1 }}>\n                <label htmlFor=\"time\">Time</label>\n                <input \n                  type=\"time\" \n                  id=\"time\" \n                  name=\"time\" \n                  className=\"form-control\"\n                  value={formData.time}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"duration\">Duration (minutes)</label>\n              <select\n                id=\"duration\" \n                name=\"duration\" \n                className=\"form-control\"\n                value={formData.duration}\n                onChange={handleInputChange}\n                required\n              >\n                <option value=\"15\">15 minutes</option>\n                <option value=\"30\">30 minutes</option>\n                <option value=\"45\">45 minutes</option>\n                <option value=\"60\">1 hour</option>\n                <option value=\"90\">1.5 hours</option>\n                <option value=\"120\">2 hours</option>\n                <option value=\"180\">3 hours</option>\n                <option value=\"240\">4 hours</option>\n              </select>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"notes\">Notes</label>\n              <textarea \n                id=\"notes\" \n                name=\"notes\" \n                className=\"form-control\"\n                value={formData.notes}\n                onChange={handleInputChange}\n                rows=\"2\"\n                placeholder=\"Add any special instructions or notes\"\n              ></textarea>\n            </div>\n            \n            <div className=\"form-actions\" style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px', marginTop: '20px' }}>\n              <button \n                type=\"button\" \n                className=\"btn btn-outline-secondary\"\n                onClick={() => navigate('/appointments')}\n              >\n                Cancel\n              </button>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                {isEditing ? 'Update Appointment' : 'Create Appointment'}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppointmentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}