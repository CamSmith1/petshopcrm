{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Set token in request headers\nconst setAuthToken = token => {\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n};\n\n// Remove token from request headers\nconst removeAuthToken = () => {\n  delete api.defaults.headers.common['Authorization'];\n};\n\n// Interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  // Handle specific error codes\n  if (error.response) {\n    const {\n      status,\n      data\n    } = error.response;\n\n    // Handle 401 Unauthorized\n    if (status === 401) {\n      // If token is expired or invalid, remove it from local storage\n      if (localStorage.getItem('token')) {\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n    }\n\n    // Log detailed error information\n    console.error('API Error:', {\n      status,\n      message: data.error || 'An error occurred',\n      url: error.config.url,\n      method: error.config.method\n    });\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('Network Error:', error.request);\n  } else {\n    // Something happened in setting up the request\n    console.error('Request Error:', error.message);\n  }\n  return Promise.reject(error);\n});\n\n// API service with methods for common operations\nexport default {\n  // Set auth token\n  setAuthToken,\n  removeAuthToken,\n  // Auth endpoints\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  verifyEmail: token => api.post('/auth/verify-email', {\n    token\n  }),\n  forgotPassword: email => api.post('/auth/forgot-password', {\n    email\n  }),\n  resetPassword: (token, newPassword) => api.post('/auth/reset-password', {\n    token,\n    newPassword\n  }),\n  // User endpoints\n  getUser: () => api.get('/users/me'),\n  updateProfile: userData => api.put('/users/profile', userData),\n  // Pet endpoints\n  getPets: () => api.get('/pets'),\n  getPet: id => api.get(`/pets/${id}`),\n  createPet: petData => api.post('/pets', petData),\n  updatePet: (id, petData) => api.put(`/pets/${id}`, petData),\n  deletePet: id => api.delete(`/pets/${id}`),\n  // Service endpoints\n  getServices: params => api.get('/services', {\n    params\n  }),\n  getService: id => api.get(`/services/${id}`),\n  createService: serviceData => api.post('/services', serviceData),\n  updateService: (id, serviceData) => api.put(`/services/${id}`, serviceData),\n  deleteService: id => api.delete(`/services/${id}`),\n  // Booking endpoints\n  getBookings: params => api.get('/bookings', {\n    params\n  }),\n  getBooking: id => api.get(`/bookings/${id}`),\n  createBooking: bookingData => api.post('/bookings', bookingData),\n  updateBooking: (id, bookingData) => api.put(`/bookings/${id}`, bookingData),\n  cancelBooking: (id, reason) => api.put(`/bookings/${id}/cancel`, {\n    reason\n  }),\n  completeBooking: id => api.put(`/bookings/${id}/complete`),\n  // Payment endpoints\n  createPaymentIntent: bookingId => api.post('/payments/create-intent', {\n    bookingId\n  }),\n  // Reviews\n  createReview: (bookingId, reviewData) => api.post(`/bookings/${bookingId}/review`, reviewData),\n  // Direct axios methods for custom requests\n  get: (url, config) => api.get(url, config),\n  post: (url, data, config) => api.post(url, data, config),\n  put: (url, data, config) => api.put(url, data, config),\n  delete: (url, config) => api.delete(url, config)\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","setAuthToken","token","defaults","common","removeAuthToken","interceptors","response","use","error","status","data","localStorage","getItem","removeItem","window","location","href","console","message","url","config","method","request","Promise","reject","register","userData","post","login","credentials","verifyEmail","forgotPassword","email","resetPassword","newPassword","getUser","get","updateProfile","put","getPets","getPet","id","createPet","petData","updatePet","deletePet","delete","getServices","params","getService","createService","serviceData","updateService","deleteService","getBookings","getBooking","createBooking","bookingData","updateBooking","cancelBooking","reason","completeBooking","createPaymentIntent","bookingId","createReview","reviewData"],"sources":["/home/toebot/dog-services-saas/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Set token in request headers\nconst setAuthToken = (token) => {\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n};\n\n// Remove token from request headers\nconst removeAuthToken = () => {\n  delete api.defaults.headers.common['Authorization'];\n};\n\n// Interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Handle specific error codes\n    if (error.response) {\n      const { status, data } = error.response;\n      \n      // Handle 401 Unauthorized\n      if (status === 401) {\n        // If token is expired or invalid, remove it from local storage\n        if (localStorage.getItem('token')) {\n          localStorage.removeItem('token');\n          window.location.href = '/login';\n        }\n      }\n      \n      // Log detailed error information\n      console.error('API Error:', {\n        status,\n        message: data.error || 'An error occurred',\n        url: error.config.url,\n        method: error.config.method,\n      });\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('Network Error:', error.request);\n    } else {\n      // Something happened in setting up the request\n      console.error('Request Error:', error.message);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API service with methods for common operations\nexport default {\n  // Set auth token\n  setAuthToken,\n  removeAuthToken,\n  \n  // Auth endpoints\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  verifyEmail: (token) => api.post('/auth/verify-email', { token }),\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\n  resetPassword: (token, newPassword) => \n    api.post('/auth/reset-password', { token, newPassword }),\n  \n  // User endpoints\n  getUser: () => api.get('/users/me'),\n  updateProfile: (userData) => api.put('/users/profile', userData),\n  \n  // Pet endpoints\n  getPets: () => api.get('/pets'),\n  getPet: (id) => api.get(`/pets/${id}`),\n  createPet: (petData) => api.post('/pets', petData),\n  updatePet: (id, petData) => api.put(`/pets/${id}`, petData),\n  deletePet: (id) => api.delete(`/pets/${id}`),\n  \n  // Service endpoints\n  getServices: (params) => api.get('/services', { params }),\n  getService: (id) => api.get(`/services/${id}`),\n  createService: (serviceData) => api.post('/services', serviceData),\n  updateService: (id, serviceData) => api.put(`/services/${id}`, serviceData),\n  deleteService: (id) => api.delete(`/services/${id}`),\n  \n  // Booking endpoints\n  getBookings: (params) => api.get('/bookings', { params }),\n  getBooking: (id) => api.get(`/bookings/${id}`),\n  createBooking: (bookingData) => api.post('/bookings', bookingData),\n  updateBooking: (id, bookingData) => api.put(`/bookings/${id}`, bookingData),\n  cancelBooking: (id, reason) => \n    api.put(`/bookings/${id}/cancel`, { reason }),\n  completeBooking: (id) => api.put(`/bookings/${id}/complete`),\n  \n  // Payment endpoints\n  createPaymentIntent: (bookingId) => \n    api.post('/payments/create-intent', { bookingId }),\n  \n  // Reviews\n  createReview: (bookingId, reviewData) => \n    api.post(`/bookings/${bookingId}/review`, reviewData),\n  \n  // Direct axios methods for custom requests\n  get: (url, config) => api.get(url, config),\n  post: (url, data, config) => api.post(url, data, config),\n  put: (url, data, config) => api.put(url, data, config),\n  delete: (url, config) => api.delete(url, config),\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}