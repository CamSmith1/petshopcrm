{"ast":null,"code":"var _jsxFileName = \"/home/toebot/dog-services-saas/frontend/src/pages/AppointmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PageHeader from '../components/common/PageHeader';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport api from '../services/api';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentForm = () => {\n  _s();\n  const {\n    appointmentId\n  } = useParams();\n  const navigate = useNavigate();\n  const isEditing = appointmentId && appointmentId !== 'new';\n  const [loading, setLoading] = useState(isEditing);\n  const [services, setServices] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredCustomers, setFilteredCustomers] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [showNewCustomerModal, setShowNewCustomerModal] = useState(false);\n  const [venues, setVenues] = useState([]);\n  const [selectedVenue, setSelectedVenue] = useState('');\n  const [availableDates, setAvailableDates] = useState([]);\n  const [newCustomer, setNewCustomer] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const searchContainerRef = useRef(null);\n  const [formData, setFormData] = useState({\n    serviceId: '',\n    customerId: '',\n    customerName: '',\n    date: '',\n    time: '09:00',\n    // Default to 9:00 AM\n    duration: 60,\n    notes: ''\n  });\n  useEffect(() => {\n    // Fetch services, customers, and venues data\n    const fetchFormData = async () => {\n      try {\n        // Fetch venues\n        const venuesResponse = await api.getVenues();\n        setVenues(venuesResponse.data.venues || []);\n\n        // Fetch services\n        const servicesResponse = await api.getServices();\n        setServices(servicesResponse.data.services || []);\n\n        // Fetch customers (using mock data for now)\n        const customersData = [{\n          _id: 'cust1',\n          name: 'John Smith',\n          email: 'john@example.com',\n          phone: '555-123-4567'\n        }, {\n          _id: 'cust2',\n          name: 'Mary Johnson',\n          email: 'mary@example.com',\n          phone: '555-234-5678'\n        }, {\n          _id: 'cust3',\n          name: 'David Williams',\n          email: 'david@example.com',\n          phone: '555-345-6789'\n        }, {\n          _id: 'cust4',\n          name: 'Sarah Miller',\n          email: 'sarah@example.com',\n          phone: '555-456-7890'\n        }, {\n          _id: 'cust5',\n          name: 'James Brown',\n          email: 'james@example.com',\n          phone: '555-567-8901'\n        }, {\n          _id: 'cust6',\n          name: 'Jennifer Davis',\n          email: 'jennifer@example.com',\n          phone: '555-678-9012'\n        }, {\n          _id: 'cust7',\n          name: 'Michael Wilson',\n          email: 'michael@example.com',\n          phone: '555-789-0123'\n        }, {\n          _id: 'cust8',\n          name: 'Linda Martinez',\n          email: 'linda@example.com',\n          phone: '555-890-1234'\n        }, {\n          _id: 'cust9',\n          name: 'Robert Taylor',\n          email: 'robert@example.com',\n          phone: '555-901-2345'\n        }, {\n          _id: 'cust10',\n          name: 'Elizabeth Anderson',\n          email: 'elizabeth@example.com',\n          phone: '555-012-3456'\n        }];\n        setCustomers(customersData);\n        setFilteredCustomers(customersData);\n\n        // If editing, fetch appointment data\n        if (isEditing) {\n          var _appointment$client, _appointment$service, _appointment$client3, _appointment$notes;\n          const appointmentResponse = await api.getBooking(appointmentId);\n          const appointment = appointmentResponse.data.booking;\n\n          // Set customer\n          if ((_appointment$client = appointment.client) !== null && _appointment$client !== void 0 && _appointment$client._id) {\n            var _appointment$client2;\n            setSelectedCustomer(appointment.client._id);\n            setSearchTerm(((_appointment$client2 = appointment.client) === null || _appointment$client2 === void 0 ? void 0 : _appointment$client2.name) || '');\n          }\n\n          // Format the date and time\n          const appointmentDate = new Date(appointment.startTime);\n          const formattedDate = appointmentDate.toISOString().split('T')[0];\n          const formattedTime = appointmentDate.toTimeString().slice(0, 5);\n\n          // Calculate duration in minutes\n          const endTime = new Date(appointment.endTime);\n          const durationMinutes = Math.round((endTime - appointmentDate) / 60000);\n\n          // Set selected venue if it exists\n          if (appointment.location) {\n            setSelectedVenue(appointment.location);\n            // Fetch venue availability\n            await fetchVenueAvailability(appointment.location);\n          }\n          setFormData({\n            serviceId: ((_appointment$service = appointment.service) === null || _appointment$service === void 0 ? void 0 : _appointment$service._id) || '',\n            customerId: ((_appointment$client3 = appointment.client) === null || _appointment$client3 === void 0 ? void 0 : _appointment$client3._id) || '',\n            date: formattedDate,\n            time: formattedTime,\n            duration: durationMinutes,\n            notes: ((_appointment$notes = appointment.notes) === null || _appointment$notes === void 0 ? void 0 : _appointment$notes.client) || '',\n            location: appointment.location || ''\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n        toast.error('Failed to load appointment data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFormData();\n  }, [appointmentId, isEditing]);\n\n  // Filter customers based on search term\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredCustomers(customers);\n      return;\n    }\n    const lowercasedFilter = searchTerm.toLowerCase();\n    const filtered = customers.filter(customer => {\n      return customer.name.toLowerCase().includes(lowercasedFilter) || customer.email.toLowerCase().includes(lowercasedFilter) || customer.phone.toLowerCase().includes(lowercasedFilter);\n    });\n    setFilteredCustomers(filtered);\n    setShowDropdown(true);\n  }, [searchTerm, customers]);\n\n  // Update customer selection\n  useEffect(() => {\n    if (selectedCustomer) {\n      const customer = customers.find(c => c._id === selectedCustomer);\n      setFormData(prev => ({\n        ...prev,\n        customerId: selectedCustomer,\n        customerName: customer ? customer.name : ''\n      }));\n    }\n  }, [selectedCustomer, customers]);\n\n  // Fetch venue availability when a venue is selected\n  const fetchVenueAvailability = async venueId => {\n    try {\n      // Get current date\n      const today = new Date();\n      const endDate = new Date();\n      endDate.setMonth(today.getMonth() + 2); // Look ahead 2 months\n\n      // Get venue availability\n      const availabilityResponse = await api.getVenueAvailability(venueId, {\n        startDate: today.toISOString(),\n        endDate: endDate.toISOString()\n      });\n\n      // Get bookings for this venue\n      const bookingsResponse = await api.getBookings({\n        location: venueId,\n        startDate: today.toISOString(),\n        endDate: endDate.toISOString()\n      });\n\n      // Extract booked dates\n      const bookings = bookingsResponse.data.bookings || [];\n      const bookedDates = bookings.map(booking => {\n        const date = new Date(booking.startTime);\n        return date.toISOString().split('T')[0];\n      });\n\n      // Generate available dates (for demo purposes, we'll create a range of dates)\n      const availableDatesList = [];\n      const daysToGenerate = 60; // Generate 60 days\n\n      for (let i = 0; i < daysToGenerate; i++) {\n        const date = new Date();\n        date.setDate(date.getDate() + i);\n        const dateStr = date.toISOString().split('T')[0];\n\n        // Skip dates that are already booked\n        if (!bookedDates.includes(dateStr)) {\n          availableDatesList.push({\n            date: dateStr,\n            formatted: new Date(dateStr).toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'short',\n              day: 'numeric'\n            })\n          });\n        }\n      }\n      setAvailableDates(availableDatesList);\n    } catch (error) {\n      console.error('Error fetching venue availability:', error);\n      toast.error('Failed to load venue availability');\n    }\n  };\n\n  // Handle venue selection\n  useEffect(() => {\n    if (selectedVenue) {\n      fetchVenueAvailability(selectedVenue);\n\n      // Update the form data with the selected venue\n      setFormData(prev => ({\n        ...prev,\n        location: selectedVenue\n      }));\n    }\n  }, [selectedVenue]);\n\n  // Handle new customer submission\n  const handleNewCustomerSubmit = async () => {\n    // Validate form\n    if (!newCustomer.name || !newCustomer.email || !newCustomer.phone) {\n      toast.error('Please fill all required fields');\n      return;\n    }\n    try {\n      // Create new customer\n      const response = await api.createOrUpdateCustomer({\n        name: newCustomer.name,\n        email: newCustomer.email,\n        phone: newCustomer.phone\n      });\n      const createdCustomer = response.data.customer;\n\n      // Add to customers list\n      setCustomers([...customers, createdCustomer]);\n\n      // Select the new customer\n      setSelectedCustomer(createdCustomer._id);\n      setSearchTerm(createdCustomer.name);\n\n      // Close modal\n      setShowNewCustomerModal(false);\n\n      // Reset form\n      setNewCustomer({\n        name: '',\n        email: '',\n        phone: ''\n      });\n      toast.success('Customer created successfully');\n    } catch (error) {\n      console.error('Error creating customer:', error);\n      toast.error('Failed to create customer');\n    }\n  };\n\n  // Handle new customer input changes\n  const handleNewCustomerChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCustomer({\n      ...newCustomer,\n      [name]: value\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleCustomerSearch = e => {\n    setSearchTerm(e.target.value);\n    setFormData({\n      ...formData,\n      customerName: e.target.value,\n      customerId: ''\n    });\n  };\n  const handleSelectCustomer = customer => {\n    setSelectedCustomer(customer._id);\n    setSearchTerm(customer.name);\n    setFormData({\n      ...formData,\n      customerId: customer._id,\n      customerName: customer.name\n    });\n    setShowDropdown(false);\n  };\n  const handleCreateNewCustomer = () => {\n    // Set the new customer's name to the search term\n    setNewCustomer({\n      ...newCustomer,\n      name: searchTerm\n    });\n    setShowNewCustomerModal(true);\n    setShowDropdown(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate if a customer is selected\n    if (!formData.customerId) {\n      toast.error('Please select a customer from the search results');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Format date and time for API\n      const startTime = new Date(`${formData.date}T${formData.time}`);\n      const endTime = new Date(startTime.getTime() + formData.duration * 60000);\n\n      // Find selected customer and service details for richer data storage\n      const selectedCustomer = customers.find(cust => cust._id === formData.customerId) || {};\n      const selectedService = services.find(svc => svc._id === formData.serviceId) || {};\n      const appointmentData = {\n        service: {\n          _id: formData.serviceId,\n          title: selectedService.title || 'Unknown Service'\n        },\n        client: {\n          _id: formData.customerId,\n          name: selectedCustomer.name || 'Unknown Customer',\n          email: selectedCustomer.email || ''\n        },\n        startTime: startTime.toISOString(),\n        endTime: endTime.toISOString(),\n        notes: {\n          client: formData.notes\n        },\n        status: 'pending',\n        location: 'In-store'\n      };\n\n      // Create or update appointment\n      if (isEditing) {\n        await api.updateBooking(appointmentId, appointmentData);\n        toast.success('Appointment updated successfully');\n      } else {\n        await api.createBooking(appointmentData);\n        toast.success('Appointment created successfully');\n      }\n\n      // Navigate back to appointments list\n      navigate('/appointments');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error saving appointment:', error);\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to save appointment');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Close dropdown when clicking outside\n  const handleClickOutside = event => {\n    if (searchContainerRef.current && !searchContainerRef.current.contains(event.target)) {\n      setShowDropdown(false);\n    }\n  };\n\n  // Add event listener for clicking outside\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: isEditing ? 'Edit Booking' : 'New Booking',\n      backLink: \"/bookings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        maxWidth: '600px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"location\",\n              children: \"Venue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"location\",\n              name: \"location\",\n              className: \"form-control\",\n              value: formData.location || '',\n              onChange: e => {\n                handleInputChange(e);\n                setSelectedVenue(e.target.value);\n              },\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a venue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this), venues.map(venue => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: venue.id,\n                children: venue.name\n              }, venue.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"customerSearch\",\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"customer-search-container\",\n              ref: searchContainerRef,\n              style: {\n                position: 'relative'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"customerSearch\",\n                name: \"customerSearch\",\n                className: \"form-control\",\n                placeholder: \"Search by name, email, or phone\",\n                value: searchTerm,\n                onChange: handleCustomerSearch,\n                onFocus: () => setShowDropdown(true),\n                autoComplete: \"off\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 17\n              }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"customer-search-results\",\n                style: {\n                  position: 'absolute',\n                  width: '100%',\n                  maxHeight: '200px',\n                  overflow: 'auto',\n                  backgroundColor: '#fff',\n                  border: '1px solid #ddd',\n                  borderTop: 'none',\n                  zIndex: 10,\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                },\n                children: filteredCustomers.length > 0 ? filteredCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"customer-search-item\",\n                  onClick: () => handleSelectCustomer(customer),\n                  style: {\n                    padding: '8px 15px',\n                    cursor: 'pointer',\n                    borderBottom: '1px solid #eee',\n                    borderLeft: `3px solid ${customer._id === selectedCustomer ? '#4a90e2' : 'transparent'}`,\n                    backgroundColor: customer._id === selectedCustomer ? '#f0f7ff' : 'transparent'\n                  },\n                  onMouseEnter: e => e.currentTarget.style.backgroundColor = '#f5f5f5',\n                  onMouseLeave: e => e.currentTarget.style.backgroundColor = customer._id === selectedCustomer ? '#f0f7ff' : 'transparent',\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontWeight: 'bold'\n                    },\n                    children: customer.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: '0.85em',\n                      color: '#666'\n                    },\n                    children: [customer.email, \" \\u2022 \", customer.phone]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 27\n                  }, this)]\n                }, customer._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 25\n                }, this)) : searchTerm.trim() !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-new-customer\",\n                  onClick: handleCreateNewCustomer,\n                  style: {\n                    padding: '12px 15px',\n                    cursor: 'pointer',\n                    borderBottom: '1px solid #eee',\n                    backgroundColor: '#f8f9fa',\n                    color: '#0d6efd',\n                    textAlign: 'center',\n                    fontWeight: 'bold'\n                  },\n                  onMouseEnter: e => e.currentTarget.style.backgroundColor = '#e9ecef',\n                  onMouseLeave: e => e.currentTarget.style.backgroundColor = '#f8f9fa',\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-plus-circle\",\n                    style: {\n                      marginRight: '8px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 27\n                  }, this), \"Create new customer: \\\"\", searchTerm, \"\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"customerId\",\n                value: formData.customerId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), selectedVenue && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Available Dates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"available-dates-container\",\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: '10px',\n                marginBottom: '15px'\n              },\n              children: availableDates.length > 0 ? availableDates.slice(0, 14).map(dateObj => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `date-option ${formData.date === dateObj.date ? 'selected' : ''}`,\n                onClick: () => setFormData({\n                  ...formData,\n                  date: dateObj.date\n                }),\n                style: {\n                  padding: '8px 12px',\n                  border: formData.date === dateObj.date ? '2px solid #4a90e2' : '1px solid #ddd',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  backgroundColor: formData.date === dateObj.date ? '#f0f7ff' : '#fff',\n                  minWidth: '90px',\n                  textAlign: 'center'\n                },\n                children: dateObj.formatted\n              }, dateObj.date, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-dates-available\",\n                style: {\n                  padding: '15px',\n                  backgroundColor: '#f8d7da',\n                  color: '#721c24',\n                  borderRadius: '4px',\n                  width: '100%',\n                  textAlign: 'center'\n                },\n                children: \"No available dates for this venue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this), availableDates.length > 14 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center',\n                marginTop: '-5px',\n                marginBottom: '15px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-link\",\n                style: {\n                  padding: '0',\n                  fontSize: '0.9rem'\n                },\n                onClick: () => {/* Show more dates logic */},\n                children: \"Show more dates...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this), formData.date && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              style: {\n                flex: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"time\",\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-picker-container\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"time\",\n                  name: \"time\",\n                  className: \"form-control\",\n                  value: formData.time,\n                  onChange: handleInputChange,\n                  required: true,\n                  style: {\n                    appearance: 'menulist',\n                    backgroundImage: 'none',\n                    paddingRight: '8px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Morning\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"08:00\",\n                      children: \"8:00 AM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 576,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"08:30\",\n                      children: \"8:30 AM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 577,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"09:00\",\n                      children: \"9:00 AM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 578,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"09:30\",\n                      children: \"9:30 AM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 579,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"10:00\",\n                      children: \"10:00 AM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 580,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"10:30\",\n                      children: \"10:30 AM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 581,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"11:00\",\n                      children: \"11:00 AM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 582,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"11:30\",\n                      children: \"11:30 AM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 583,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Afternoon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"12:00\",\n                      children: \"12:00 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 587,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"12:30\",\n                      children: \"12:30 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 588,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"13:00\",\n                      children: \"1:00 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 589,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"13:30\",\n                      children: \"1:30 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 590,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"14:00\",\n                      children: \"2:00 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 591,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"14:30\",\n                      children: \"2:30 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 592,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"15:00\",\n                      children: \"3:00 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 593,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"15:30\",\n                      children: \"3:30 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 594,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"16:00\",\n                      children: \"4:00 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 595,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"16:30\",\n                      children: \"4:30 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"17:00\",\n                      children: \"5:00 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 597,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"17:30\",\n                      children: \"5:30 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                    label: \"Evening\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"18:00\",\n                      children: \"6:00 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 602,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"18:30\",\n                      children: \"6:30 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 603,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"19:00\",\n                      children: \"7:00 PM\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"duration\",\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"duration\",\n              name: \"duration\",\n              className: \"form-control\",\n              value: formData.duration,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"60\",\n                children: \"1 hour\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"90\",\n                children: \"1.5 hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"120\",\n                children: \"2 hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"180\",\n                children: \"3 hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"240\",\n                children: \"4 hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"300\",\n                children: \"5 hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"360\",\n                children: \"6 hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"480\",\n                children: \"8 hours (Full day)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"720\",\n                children: \"12 hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1440\",\n                children: \"24 hours (Overnight)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"notes\",\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"notes\",\n              name: \"notes\",\n              className: \"form-control\",\n              value: formData.notes,\n              onChange: handleInputChange,\n              rows: \"3\",\n              placeholder: \"Add any special requirements, setup instructions, or equipment needs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: '10px',\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-outline-secondary\",\n              onClick: () => navigate('/bookings'),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: isEditing ? 'Update Booking' : 'Create Booking'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentForm, \"sHZg/niq+UHHg3j29wSuW6uBEt4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AppointmentForm;\nexport default AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","toast","PageHeader","LoadingSpinner","api","Modal","Button","Form","jsxDEV","_jsxDEV","AppointmentForm","_s","appointmentId","navigate","isEditing","loading","setLoading","services","setServices","customers","setCustomers","selectedCustomer","setSelectedCustomer","searchTerm","setSearchTerm","filteredCustomers","setFilteredCustomers","showDropdown","setShowDropdown","showNewCustomerModal","setShowNewCustomerModal","venues","setVenues","selectedVenue","setSelectedVenue","availableDates","setAvailableDates","newCustomer","setNewCustomer","name","email","phone","searchContainerRef","formData","setFormData","serviceId","customerId","customerName","date","time","duration","notes","fetchFormData","venuesResponse","getVenues","data","servicesResponse","getServices","customersData","_id","_appointment$client","_appointment$service","_appointment$client3","_appointment$notes","appointmentResponse","getBooking","appointment","booking","client","_appointment$client2","appointmentDate","Date","startTime","formattedDate","toISOString","split","formattedTime","toTimeString","slice","endTime","durationMinutes","Math","round","location","fetchVenueAvailability","service","error","console","trim","lowercasedFilter","toLowerCase","filtered","filter","customer","includes","find","c","prev","venueId","today","endDate","setMonth","getMonth","availabilityResponse","getVenueAvailability","startDate","bookingsResponse","getBookings","bookings","bookedDates","map","availableDatesList","daysToGenerate","i","setDate","getDate","dateStr","push","formatted","toLocaleDateString","weekday","month","day","handleNewCustomerSubmit","response","createOrUpdateCustomer","createdCustomer","success","handleNewCustomerChange","e","value","target","handleInputChange","handleCustomerSearch","handleSelectCustomer","handleCreateNewCustomer","handleSubmit","preventDefault","getTime","cust","selectedService","svc","appointmentData","title","status","updateBooking","createBooking","_error$response","_error$response$data","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","fileName","_jsxFileName","lineNumber","columnNumber","className","children","backLink","style","maxWidth","margin","onSubmit","htmlFor","id","onChange","required","venue","ref","position","type","placeholder","onFocus","autoComplete","width","maxHeight","overflow","backgroundColor","border","borderTop","zIndex","boxShadow","length","onClick","padding","cursor","borderBottom","borderLeft","onMouseEnter","currentTarget","onMouseLeave","fontWeight","fontSize","color","textAlign","marginRight","display","flexWrap","gap","marginBottom","dateObj","borderRadius","minWidth","marginTop","flex","appearance","backgroundImage","paddingRight","label","rows","justifyContent","_c","$RefreshReg$"],"sources":["/home/toebot/dog-services-saas/frontend/src/pages/AppointmentForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PageHeader from '../components/common/PageHeader';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport api from '../services/api';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nconst AppointmentForm = () => {\n  const { appointmentId } = useParams();\n  const navigate = useNavigate();\n  const isEditing = appointmentId && appointmentId !== 'new';\n  \n  const [loading, setLoading] = useState(isEditing);\n  const [services, setServices] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredCustomers, setFilteredCustomers] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [showNewCustomerModal, setShowNewCustomerModal] = useState(false);\n  const [venues, setVenues] = useState([]);\n  const [selectedVenue, setSelectedVenue] = useState('');\n  const [availableDates, setAvailableDates] = useState([]);\n  const [newCustomer, setNewCustomer] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const searchContainerRef = useRef(null);\n  \n  const [formData, setFormData] = useState({\n    serviceId: '',\n    customerId: '',\n    customerName: '',\n    date: '',\n    time: '09:00', // Default to 9:00 AM\n    duration: 60,\n    notes: '',\n  });\n\n  useEffect(() => {\n    // Fetch services, customers, and venues data\n    const fetchFormData = async () => {\n      try {\n        // Fetch venues\n        const venuesResponse = await api.getVenues();\n        setVenues(venuesResponse.data.venues || []);\n        \n        // Fetch services\n        const servicesResponse = await api.getServices();\n        setServices(servicesResponse.data.services || []);\n        \n        // Fetch customers (using mock data for now)\n        const customersData = [\n          { _id: 'cust1', name: 'John Smith', email: 'john@example.com', phone: '555-123-4567' },\n          { _id: 'cust2', name: 'Mary Johnson', email: 'mary@example.com', phone: '555-234-5678' },\n          { _id: 'cust3', name: 'David Williams', email: 'david@example.com', phone: '555-345-6789' },\n          { _id: 'cust4', name: 'Sarah Miller', email: 'sarah@example.com', phone: '555-456-7890' },\n          { _id: 'cust5', name: 'James Brown', email: 'james@example.com', phone: '555-567-8901' },\n          { _id: 'cust6', name: 'Jennifer Davis', email: 'jennifer@example.com', phone: '555-678-9012' },\n          { _id: 'cust7', name: 'Michael Wilson', email: 'michael@example.com', phone: '555-789-0123' },\n          { _id: 'cust8', name: 'Linda Martinez', email: 'linda@example.com', phone: '555-890-1234' },\n          { _id: 'cust9', name: 'Robert Taylor', email: 'robert@example.com', phone: '555-901-2345' },\n          { _id: 'cust10', name: 'Elizabeth Anderson', email: 'elizabeth@example.com', phone: '555-012-3456' },\n        ];\n        setCustomers(customersData);\n        setFilteredCustomers(customersData);\n        \n        // If editing, fetch appointment data\n        if (isEditing) {\n          const appointmentResponse = await api.getBooking(appointmentId);\n          const appointment = appointmentResponse.data.booking;\n          \n          // Set customer\n          if (appointment.client?._id) {\n            setSelectedCustomer(appointment.client._id);\n            setSearchTerm(appointment.client?.name || '');\n          }\n          \n          // Format the date and time\n          const appointmentDate = new Date(appointment.startTime);\n          const formattedDate = appointmentDate.toISOString().split('T')[0];\n          const formattedTime = appointmentDate.toTimeString().slice(0, 5);\n          \n          // Calculate duration in minutes\n          const endTime = new Date(appointment.endTime);\n          const durationMinutes = Math.round((endTime - appointmentDate) / 60000);\n          \n          // Set selected venue if it exists\n          if (appointment.location) {\n            setSelectedVenue(appointment.location);\n            // Fetch venue availability\n            await fetchVenueAvailability(appointment.location);\n          }\n          \n          setFormData({\n            serviceId: appointment.service?._id || '',\n            customerId: appointment.client?._id || '',\n            date: formattedDate,\n            time: formattedTime,\n            duration: durationMinutes,\n            notes: appointment.notes?.client || '',\n            location: appointment.location || '',\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n        toast.error('Failed to load appointment data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchFormData();\n  }, [appointmentId, isEditing]);\n  \n  // Filter customers based on search term\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredCustomers(customers);\n      return;\n    }\n    \n    const lowercasedFilter = searchTerm.toLowerCase();\n    const filtered = customers.filter(customer => {\n      return (\n        customer.name.toLowerCase().includes(lowercasedFilter) ||\n        customer.email.toLowerCase().includes(lowercasedFilter) ||\n        customer.phone.toLowerCase().includes(lowercasedFilter)\n      );\n    });\n    \n    setFilteredCustomers(filtered);\n    setShowDropdown(true);\n  }, [searchTerm, customers]);\n  \n  // Update customer selection\n  useEffect(() => {\n    if (selectedCustomer) {\n      const customer = customers.find(c => c._id === selectedCustomer);\n      setFormData(prev => ({\n        ...prev,\n        customerId: selectedCustomer,\n        customerName: customer ? customer.name : '',\n      }));\n    }\n  }, [selectedCustomer, customers]);\n  \n  // Fetch venue availability when a venue is selected\n  const fetchVenueAvailability = async (venueId) => {\n    try {\n      // Get current date\n      const today = new Date();\n      const endDate = new Date();\n      endDate.setMonth(today.getMonth() + 2); // Look ahead 2 months\n      \n      // Get venue availability\n      const availabilityResponse = await api.getVenueAvailability(venueId, {\n        startDate: today.toISOString(),\n        endDate: endDate.toISOString()\n      });\n      \n      // Get bookings for this venue\n      const bookingsResponse = await api.getBookings({\n        location: venueId,\n        startDate: today.toISOString(),\n        endDate: endDate.toISOString()\n      });\n      \n      // Extract booked dates\n      const bookings = bookingsResponse.data.bookings || [];\n      const bookedDates = bookings.map(booking => {\n        const date = new Date(booking.startTime);\n        return date.toISOString().split('T')[0];\n      });\n      \n      // Generate available dates (for demo purposes, we'll create a range of dates)\n      const availableDatesList = [];\n      const daysToGenerate = 60; // Generate 60 days\n      \n      for (let i = 0; i < daysToGenerate; i++) {\n        const date = new Date();\n        date.setDate(date.getDate() + i);\n        const dateStr = date.toISOString().split('T')[0];\n        \n        // Skip dates that are already booked\n        if (!bookedDates.includes(dateStr)) {\n          availableDatesList.push({\n            date: dateStr,\n            formatted: new Date(dateStr).toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'short',\n              day: 'numeric'\n            })\n          });\n        }\n      }\n      \n      setAvailableDates(availableDatesList);\n    } catch (error) {\n      console.error('Error fetching venue availability:', error);\n      toast.error('Failed to load venue availability');\n    }\n  };\n  \n  // Handle venue selection\n  useEffect(() => {\n    if (selectedVenue) {\n      fetchVenueAvailability(selectedVenue);\n      \n      // Update the form data with the selected venue\n      setFormData(prev => ({\n        ...prev,\n        location: selectedVenue\n      }));\n    }\n  }, [selectedVenue]);\n  \n  // Handle new customer submission\n  const handleNewCustomerSubmit = async () => {\n    // Validate form\n    if (!newCustomer.name || !newCustomer.email || !newCustomer.phone) {\n      toast.error('Please fill all required fields');\n      return;\n    }\n    \n    try {\n      // Create new customer\n      const response = await api.createOrUpdateCustomer({\n        name: newCustomer.name,\n        email: newCustomer.email,\n        phone: newCustomer.phone\n      });\n      \n      const createdCustomer = response.data.customer;\n      \n      // Add to customers list\n      setCustomers([...customers, createdCustomer]);\n      \n      // Select the new customer\n      setSelectedCustomer(createdCustomer._id);\n      setSearchTerm(createdCustomer.name);\n      \n      // Close modal\n      setShowNewCustomerModal(false);\n      \n      // Reset form\n      setNewCustomer({\n        name: '',\n        email: '',\n        phone: ''\n      });\n      \n      toast.success('Customer created successfully');\n    } catch (error) {\n      console.error('Error creating customer:', error);\n      toast.error('Failed to create customer');\n    }\n  };\n  \n  // Handle new customer input changes\n  const handleNewCustomerChange = (e) => {\n    const { name, value } = e.target;\n    setNewCustomer({\n      ...newCustomer,\n      [name]: value\n    });\n  };\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  \n  const handleCustomerSearch = (e) => {\n    setSearchTerm(e.target.value);\n    setFormData({\n      ...formData,\n      customerName: e.target.value,\n      customerId: '',\n    });\n  };\n  \n  const handleSelectCustomer = (customer) => {\n    setSelectedCustomer(customer._id);\n    setSearchTerm(customer.name);\n    setFormData({\n      ...formData,\n      customerId: customer._id,\n      customerName: customer.name,\n    });\n    setShowDropdown(false);\n  };\n  \n  const handleCreateNewCustomer = () => {\n    // Set the new customer's name to the search term\n    setNewCustomer({\n      ...newCustomer,\n      name: searchTerm\n    });\n    setShowNewCustomerModal(true);\n    setShowDropdown(false);\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate if a customer is selected\n    if (!formData.customerId) {\n      toast.error('Please select a customer from the search results');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      // Format date and time for API\n      const startTime = new Date(`${formData.date}T${formData.time}`);\n      const endTime = new Date(startTime.getTime() + formData.duration * 60000);\n      \n      // Find selected customer and service details for richer data storage\n      const selectedCustomer = customers.find(cust => cust._id === formData.customerId) || {};\n      const selectedService = services.find(svc => svc._id === formData.serviceId) || {};\n      \n      const appointmentData = {\n        service: {\n          _id: formData.serviceId,\n          title: selectedService.title || 'Unknown Service'\n        },\n        client: {\n          _id: formData.customerId,\n          name: selectedCustomer.name || 'Unknown Customer',\n          email: selectedCustomer.email || ''\n        },\n        startTime: startTime.toISOString(),\n        endTime: endTime.toISOString(),\n        notes: {\n          client: formData.notes,\n        },\n        status: 'pending',\n        location: 'In-store'\n      };\n      \n      // Create or update appointment\n      if (isEditing) {\n        await api.updateBooking(appointmentId, appointmentData);\n        toast.success('Appointment updated successfully');\n      } else {\n        await api.createBooking(appointmentData);\n        toast.success('Appointment created successfully');\n      }\n      \n      // Navigate back to appointments list\n      navigate('/appointments');\n    } catch (error) {\n      console.error('Error saving appointment:', error);\n      toast.error(error.response?.data?.error || 'Failed to save appointment');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Close dropdown when clicking outside\n  const handleClickOutside = (event) => {\n    if (searchContainerRef.current && !searchContainerRef.current.contains(event.target)) {\n      setShowDropdown(false);\n    }\n  };\n  \n  // Add event listener for clicking outside\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  \n  if (loading) {\n    return <LoadingSpinner />;\n  }\n  \n  return (\n    <div className=\"page-container\">\n      <PageHeader \n        title={isEditing ? 'Edit Booking' : 'New Booking'} \n        backLink=\"/bookings\"\n      />\n      \n      <div className=\"card\" style={{ maxWidth: '600px', margin: '0 auto' }}>\n        <div className=\"card-body\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"location\">Venue</label>\n              <select\n                id=\"location\" \n                name=\"location\" \n                className=\"form-control\"\n                value={formData.location || ''}\n                onChange={(e) => {\n                  handleInputChange(e);\n                  setSelectedVenue(e.target.value);\n                }}\n                required\n              >\n                <option value=\"\">Select a venue</option>\n                {venues.map(venue => (\n                  <option key={venue.id} value={venue.id}>\n                    {venue.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"customerSearch\">Customer</label>\n              <div className=\"customer-search-container\" ref={searchContainerRef} style={{ position: 'relative' }}>\n                <input\n                  type=\"text\"\n                  id=\"customerSearch\"\n                  name=\"customerSearch\"\n                  className=\"form-control\"\n                  placeholder=\"Search by name, email, or phone\"\n                  value={searchTerm}\n                  onChange={handleCustomerSearch}\n                  onFocus={() => setShowDropdown(true)}\n                  autoComplete=\"off\"\n                  required\n                />\n                {showDropdown && (\n                  <div className=\"customer-search-results\" style={{\n                    position: 'absolute',\n                    width: '100%',\n                    maxHeight: '200px',\n                    overflow: 'auto',\n                    backgroundColor: '#fff',\n                    border: '1px solid #ddd',\n                    borderTop: 'none',\n                    zIndex: 10,\n                    boxShadow: '0 2px 5px rgba(0,0,0,0.2)'\n                  }}>\n                    {filteredCustomers.length > 0 ? (\n                      filteredCustomers.map(customer => (\n                        <div\n                          key={customer._id}\n                          className=\"customer-search-item\"\n                          onClick={() => handleSelectCustomer(customer)}\n                          style={{\n                            padding: '8px 15px',\n                            cursor: 'pointer',\n                            borderBottom: '1px solid #eee',\n                            borderLeft: `3px solid ${customer._id === selectedCustomer ? '#4a90e2' : 'transparent'}`,\n                            backgroundColor: customer._id === selectedCustomer ? '#f0f7ff' : 'transparent'\n                          }}\n                          onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#f5f5f5'}\n                          onMouseLeave={(e) => e.currentTarget.style.backgroundColor = customer._id === selectedCustomer ? '#f0f7ff' : 'transparent'}\n                        >\n                          <div style={{ fontWeight: 'bold' }}>{customer.name}</div>\n                          <div style={{ fontSize: '0.85em', color: '#666' }}>\n                            {customer.email} • {customer.phone}\n                          </div>\n                        </div>\n                      ))\n                    ) : (\n                      searchTerm.trim() !== '' && (\n                        <div\n                          className=\"create-new-customer\"\n                          onClick={handleCreateNewCustomer}\n                          style={{\n                            padding: '12px 15px',\n                            cursor: 'pointer',\n                            borderBottom: '1px solid #eee',\n                            backgroundColor: '#f8f9fa',\n                            color: '#0d6efd',\n                            textAlign: 'center',\n                            fontWeight: 'bold'\n                          }}\n                          onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#e9ecef'}\n                          onMouseLeave={(e) => e.currentTarget.style.backgroundColor = '#f8f9fa'}\n                        >\n                          <i className=\"fas fa-plus-circle\" style={{ marginRight: '8px' }}></i>\n                          Create new customer: \"{searchTerm}\"\n                        </div>\n                      )\n                    )}\n                  </div>\n                )}\n                {/* Hidden input to store the customer ID for form submission */}\n                <input\n                  type=\"hidden\"\n                  name=\"customerId\"\n                  value={formData.customerId}\n                />\n              </div>\n            </div>\n            \n            {selectedVenue && (\n              <div className=\"form-group\">\n                <label>Available Dates</label>\n                <div className=\"available-dates-container\" style={{ \n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: '10px',\n                  marginBottom: '15px'\n                }}>\n                  {availableDates.length > 0 ? (\n                    availableDates.slice(0, 14).map(dateObj => (\n                      <div\n                        key={dateObj.date}\n                        className={`date-option ${formData.date === dateObj.date ? 'selected' : ''}`}\n                        onClick={() => setFormData({...formData, date: dateObj.date})}\n                        style={{\n                          padding: '8px 12px',\n                          border: formData.date === dateObj.date ? '2px solid #4a90e2' : '1px solid #ddd',\n                          borderRadius: '4px',\n                          cursor: 'pointer',\n                          backgroundColor: formData.date === dateObj.date ? '#f0f7ff' : '#fff',\n                          minWidth: '90px',\n                          textAlign: 'center'\n                        }}\n                      >\n                        {dateObj.formatted}\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"no-dates-available\" style={{\n                      padding: '15px',\n                      backgroundColor: '#f8d7da',\n                      color: '#721c24',\n                      borderRadius: '4px',\n                      width: '100%',\n                      textAlign: 'center'\n                    }}>\n                      No available dates for this venue\n                    </div>\n                  )}\n                </div>\n                {availableDates.length > 14 && (\n                  <div style={{ textAlign: 'center', marginTop: '-5px', marginBottom: '15px' }}>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      style={{ padding: '0', fontSize: '0.9rem' }}\n                      onClick={() => {/* Show more dates logic */}}\n                    >\n                      Show more dates...\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n            \n            {formData.date && (\n              <div className=\"form-row\">\n                <div className=\"form-group\" style={{ flex: 1 }}>\n                  <label htmlFor=\"time\">Time</label>\n                  <div className=\"time-picker-container\">\n                    <select\n                      id=\"time\"\n                      name=\"time\"\n                      className=\"form-control\"\n                      value={formData.time}\n                      onChange={handleInputChange}\n                      required\n                      style={{ \n                        appearance: 'menulist',\n                        backgroundImage: 'none',\n                        paddingRight: '8px'\n                      }}\n                    >\n                      {/* Morning slots */}\n                      <optgroup label=\"Morning\">\n                        <option value=\"08:00\">8:00 AM</option>\n                        <option value=\"08:30\">8:30 AM</option>\n                        <option value=\"09:00\">9:00 AM</option>\n                        <option value=\"09:30\">9:30 AM</option>\n                        <option value=\"10:00\">10:00 AM</option>\n                        <option value=\"10:30\">10:30 AM</option>\n                        <option value=\"11:00\">11:00 AM</option>\n                        <option value=\"11:30\">11:30 AM</option>\n                      </optgroup>\n                      {/* Afternoon slots */}\n                      <optgroup label=\"Afternoon\">\n                        <option value=\"12:00\">12:00 PM</option>\n                        <option value=\"12:30\">12:30 PM</option>\n                        <option value=\"13:00\">1:00 PM</option>\n                        <option value=\"13:30\">1:30 PM</option>\n                        <option value=\"14:00\">2:00 PM</option>\n                        <option value=\"14:30\">2:30 PM</option>\n                        <option value=\"15:00\">3:00 PM</option>\n                        <option value=\"15:30\">3:30 PM</option>\n                        <option value=\"16:00\">4:00 PM</option>\n                        <option value=\"16:30\">4:30 PM</option>\n                        <option value=\"17:00\">5:00 PM</option>\n                        <option value=\"17:30\">5:30 PM</option>\n                      </optgroup>\n                      {/* Evening slots */}\n                      <optgroup label=\"Evening\">\n                        <option value=\"18:00\">6:00 PM</option>\n                        <option value=\"18:30\">6:30 PM</option>\n                        <option value=\"19:00\">7:00 PM</option>\n                      </optgroup>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"duration\">Duration</label>\n              <select\n                id=\"duration\" \n                name=\"duration\" \n                className=\"form-control\"\n                value={formData.duration}\n                onChange={handleInputChange}\n                required\n              >\n                <option value=\"60\">1 hour</option>\n                <option value=\"90\">1.5 hours</option>\n                <option value=\"120\">2 hours</option>\n                <option value=\"180\">3 hours</option>\n                <option value=\"240\">4 hours</option>\n                <option value=\"300\">5 hours</option>\n                <option value=\"360\">6 hours</option>\n                <option value=\"480\">8 hours (Full day)</option>\n                <option value=\"720\">12 hours</option>\n                <option value=\"1440\">24 hours (Overnight)</option>\n              </select>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"notes\">Notes</label>\n              <textarea \n                id=\"notes\" \n                name=\"notes\" \n                className=\"form-control\"\n                value={formData.notes}\n                onChange={handleInputChange}\n                rows=\"3\"\n                placeholder=\"Add any special requirements, setup instructions, or equipment needs\"\n              ></textarea>\n            </div>\n            \n            <div className=\"form-actions\" style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px', marginTop: '20px' }}>\n              <button \n                type=\"button\" \n                className=\"btn btn-outline-secondary\"\n                onClick={() => navigate('/bookings')}\n              >\n                Cancel\n              </button>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                {isEditing ? 'Update Booking' : 'Create Booking'}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppointmentForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}