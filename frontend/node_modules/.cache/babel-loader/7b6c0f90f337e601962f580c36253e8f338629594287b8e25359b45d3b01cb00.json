{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{toast}from'react-toastify';import PageHeader from'../components/common/PageHeader';import LoadingSpinner from'../components/common/LoadingSpinner';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AppointmentsList=()=>{const[appointments,setAppointments]=useState([]);const[loading,setLoading]=useState(true);const[filter,setFilter]=useState('upcoming');useEffect(()=>{// Simulated data for now\n// In a real implementation, this would fetch from API\nconst mockAppointments=[{id:'apt1',customerName:'John Smith',petName:'Buddy',service:'Dog Walking',date:'2025-03-05T10:00:00',status:'confirmed'},{id:'apt2',customerName:'Sarah Johnson',petName:'Max',service:'Grooming',date:'2025-03-06T14:30:00',status:'pending'},{id:'apt3',customerName:'Michael Brown',petName:'Luna',service:'Training Session',date:'2025-03-04T09:00:00',status:'completed'}];setTimeout(()=>{setAppointments(mockAppointments);setLoading(false);},800);},[]);const filteredAppointments=appointments.filter(appointment=>{const appointmentDate=new Date(appointment.date);const today=new Date();if(filter==='upcoming'){return appointmentDate>=today&&appointment.status!=='completed';}else if(filter==='past'){return appointmentDate<today||appointment.status==='completed';}else if(filter==='pending'){return appointment.status==='pending';}return true;});const formatDate=dateString=>{const options={weekday:'short',year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'};return new Date(dateString).toLocaleDateString('en-US',options);};const getStatusBadgeClass=status=>{switch(status){case'confirmed':return'badge-success';case'pending':return'badge-warning';case'completed':return'badge-info';case'cancelled':return'badge-danger';default:return'badge-secondary';}};if(loading){return/*#__PURE__*/_jsx(LoadingSpinner,{});}return/*#__PURE__*/_jsxs(\"div\",{className:\"page-container\",children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Appointments\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`filter-tab ${filter==='upcoming'?'active':''}`,onClick:()=>setFilter('upcoming'),children:\"Upcoming\"}),/*#__PURE__*/_jsx(\"button\",{className:`filter-tab ${filter==='past'?'active':''}`,onClick:()=>setFilter('past'),children:\"Past\"}),/*#__PURE__*/_jsx(\"button\",{className:`filter-tab ${filter==='pending'?'active':''}`,onClick:()=>setFilter('pending'),children:\"Pending\"}),/*#__PURE__*/_jsx(\"button\",{className:`filter-tab ${filter==='all'?'active':''}`,onClick:()=>setFilter('all'),children:\"All\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",children:\"+ New Appointment\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:filteredAppointments.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-state-icon\",children:\"\\uD83D\\uDCC5\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"No appointments found\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"There are no \",filter,\" appointments to display.\"]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date & Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Customer\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Pet\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Service\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredAppointments.map(appointment=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:formatDate(appointment.date)}),/*#__PURE__*/_jsx(\"td\",{children:appointment.customerName}),/*#__PURE__*/_jsx(\"td\",{children:appointment.petName}),/*#__PURE__*/_jsx(\"td\",{children:appointment.service}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:`status-badge ${getStatusBadgeClass(appointment.status)}`,children:appointment.status})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:`/appointments/${appointment.id}`,className:\"btn btn-sm btn-outline-primary\",children:\"View Details\"})})]},appointment.id))})]})})})]})]});};export default AppointmentsList;","map":{"version":3,"names":["React","useState","useEffect","Link","toast","PageHeader","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","AppointmentsList","appointments","setAppointments","loading","setLoading","filter","setFilter","mockAppointments","id","customerName","petName","service","date","status","setTimeout","filteredAppointments","appointment","appointmentDate","Date","today","formatDate","dateString","options","weekday","year","month","day","hour","minute","toLocaleDateString","getStatusBadgeClass","className","children","title","onClick","length","map","to"],"sources":["/home/toebot/dog-services-saas/frontend/src/pages/AppointmentsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PageHeader from '../components/common/PageHeader';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\n\nconst AppointmentsList = () => {\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('upcoming');\n\n  useEffect(() => {\n    // Simulated data for now\n    // In a real implementation, this would fetch from API\n    const mockAppointments = [\n      {\n        id: 'apt1',\n        customerName: 'John Smith',\n        petName: 'Buddy',\n        service: 'Dog Walking',\n        date: '2025-03-05T10:00:00',\n        status: 'confirmed'\n      },\n      {\n        id: 'apt2',\n        customerName: 'Sarah Johnson',\n        petName: 'Max',\n        service: 'Grooming',\n        date: '2025-03-06T14:30:00',\n        status: 'pending'\n      },\n      {\n        id: 'apt3',\n        customerName: 'Michael Brown',\n        petName: 'Luna',\n        service: 'Training Session',\n        date: '2025-03-04T09:00:00',\n        status: 'completed'\n      }\n    ];\n    \n    setTimeout(() => {\n      setAppointments(mockAppointments);\n      setLoading(false);\n    }, 800);\n  }, []);\n\n  const filteredAppointments = appointments.filter(appointment => {\n    const appointmentDate = new Date(appointment.date);\n    const today = new Date();\n    \n    if (filter === 'upcoming') {\n      return appointmentDate >= today && appointment.status !== 'completed';\n    } else if (filter === 'past') {\n      return appointmentDate < today || appointment.status === 'completed';\n    } else if (filter === 'pending') {\n      return appointment.status === 'pending';\n    }\n    return true;\n  });\n\n  const formatDate = (dateString) => {\n    const options = { \n      weekday: 'short', \n      year: 'numeric', \n      month: 'short', \n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString('en-US', options);\n  };\n\n  const getStatusBadgeClass = (status) => {\n    switch (status) {\n      case 'confirmed': return 'badge-success';\n      case 'pending': return 'badge-warning';\n      case 'completed': return 'badge-info';\n      case 'cancelled': return 'badge-danger';\n      default: return 'badge-secondary';\n    }\n  };\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <div className=\"page-container\">\n      <PageHeader title=\"Appointments\" />\n\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <div className=\"filter-tabs\">\n            <button \n              className={`filter-tab ${filter === 'upcoming' ? 'active' : ''}`}\n              onClick={() => setFilter('upcoming')}\n            >\n              Upcoming\n            </button>\n            <button \n              className={`filter-tab ${filter === 'past' ? 'active' : ''}`}\n              onClick={() => setFilter('past')}\n            >\n              Past\n            </button>\n            <button \n              className={`filter-tab ${filter === 'pending' ? 'active' : ''}`}\n              onClick={() => setFilter('pending')}\n            >\n              Pending\n            </button>\n            <button \n              className={`filter-tab ${filter === 'all' ? 'active' : ''}`}\n              onClick={() => setFilter('all')}\n            >\n              All\n            </button>\n          </div>\n          <div className=\"card-actions\">\n            <button className=\"btn btn-primary\">\n              + New Appointment\n            </button>\n          </div>\n        </div>\n\n        <div className=\"card-body\">\n          {filteredAppointments.length === 0 ? (\n            <div className=\"empty-state\">\n              <div className=\"empty-state-icon\">ðŸ“…</div>\n              <h3>No appointments found</h3>\n              <p>There are no {filter} appointments to display.</p>\n            </div>\n          ) : (\n            <div className=\"table-responsive\">\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th>Date & Time</th>\n                    <th>Customer</th>\n                    <th>Pet</th>\n                    <th>Service</th>\n                    <th>Status</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredAppointments.map(appointment => (\n                    <tr key={appointment.id}>\n                      <td>{formatDate(appointment.date)}</td>\n                      <td>{appointment.customerName}</td>\n                      <td>{appointment.petName}</td>\n                      <td>{appointment.service}</td>\n                      <td>\n                        <span className={`status-badge ${getStatusBadgeClass(appointment.status)}`}>\n                          {appointment.status}\n                        </span>\n                      </td>\n                      <td>\n                        <Link to={`/appointments/${appointment.id}`} className=\"btn btn-sm btn-outline-primary\">\n                          View Details\n                        </Link>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppointmentsList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}