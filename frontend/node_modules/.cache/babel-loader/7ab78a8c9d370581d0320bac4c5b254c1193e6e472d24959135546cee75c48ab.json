{"ast":null,"code":"import axios from'axios';// Create axios instance\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:5000/api',headers:{'Content-Type':'application/json'}});// Set token in request headers\nconst setAuthToken=token=>{if(token){api.defaults.headers.common['Authorization']=`Bearer ${token}`;}};// Remove token from request headers\nconst removeAuthToken=()=>{delete api.defaults.headers.common['Authorization'];};// Interceptor to handle errors\napi.interceptors.response.use(response=>response,error=>{// Handle specific error codes\nif(error.response){const{status,data}=error.response;// Handle 401 Unauthorized\nif(status===401){// If token is expired or invalid, remove it from local storage\nif(localStorage.getItem('token')){localStorage.removeItem('token');window.location.href='/login';}}// Log detailed error information\nconsole.error('API Error:',{status,message:data.error||'An error occurred',url:error.config.url,method:error.config.method});}else if(error.request){// The request was made but no response was received\nconsole.error('Network Error:',error.request);}else{// Something happened in setting up the request\nconsole.error('Request Error:',error.message);}return Promise.reject(error);});// API service with methods for common operations\nexport default{// Set auth token\nsetAuthToken,removeAuthToken,// Auth endpoints\nregister:userData=>api.post('/auth/register',userData),login:credentials=>api.post('/auth/login',credentials),verifyEmail:token=>api.post('/auth/verify-email',{token}),forgotPassword:email=>api.post('/auth/forgot-password',{email}),resetPassword:(token,newPassword)=>api.post('/auth/reset-password',{token,newPassword}),// User endpoints\ngetUser:()=>api.get('/users/me'),updateProfile:userData=>api.put('/users/profile',userData),// Pet endpoints\ngetPets:()=>api.get('/pets'),getPet:id=>api.get(`/pets/${id}`),createPet:petData=>api.post('/pets',petData),updatePet:(id,petData)=>api.put(`/pets/${id}`,petData),deletePet:id=>api.delete(`/pets/${id}`),// Service endpoints\ngetServices:params=>api.get('/services',{params}),getService:id=>api.get(`/services/${id}`),createService:serviceData=>api.post('/services',serviceData),updateService:(id,serviceData)=>api.put(`/services/${id}`,serviceData),deleteService:id=>api.delete(`/services/${id}`),// Booking endpoints\ngetBookings:params=>api.get('/bookings',{params}),getBooking:id=>api.get(`/bookings/${id}`),createBooking:bookingData=>api.post('/bookings',bookingData),updateBooking:(id,bookingData)=>api.put(`/bookings/${id}`,bookingData),cancelBooking:(id,reason)=>api.put(`/bookings/${id}/cancel`,{reason}),completeBooking:id=>api.put(`/bookings/${id}/complete`),// Payment endpoints\ncreatePaymentIntent:bookingId=>api.post('/payments/create-intent',{bookingId}),// Reviews\ncreateReview:(bookingId,reviewData)=>api.post(`/bookings/${bookingId}/review`,reviewData),// Direct axios methods for custom requests\nget:(url,config)=>api.get(url,config),post:(url,data,config)=>api.post(url,data,config),put:(url,data,config)=>api.put(url,data,config),delete:(url,config)=>api.delete(url,config)};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","setAuthToken","token","defaults","common","removeAuthToken","interceptors","response","use","error","status","data","localStorage","getItem","removeItem","window","location","href","console","message","url","config","method","request","Promise","reject","register","userData","post","login","credentials","verifyEmail","forgotPassword","email","resetPassword","newPassword","getUser","get","updateProfile","put","getPets","getPet","id","createPet","petData","updatePet","deletePet","delete","getServices","params","getService","createService","serviceData","updateService","deleteService","getBookings","getBooking","createBooking","bookingData","updateBooking","cancelBooking","reason","completeBooking","createPaymentIntent","bookingId","createReview","reviewData"],"sources":["/home/toebot/dog-services-saas/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Set token in request headers\nconst setAuthToken = (token) => {\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n};\n\n// Remove token from request headers\nconst removeAuthToken = () => {\n  delete api.defaults.headers.common['Authorization'];\n};\n\n// Interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Handle specific error codes\n    if (error.response) {\n      const { status, data } = error.response;\n      \n      // Handle 401 Unauthorized\n      if (status === 401) {\n        // If token is expired or invalid, remove it from local storage\n        if (localStorage.getItem('token')) {\n          localStorage.removeItem('token');\n          window.location.href = '/login';\n        }\n      }\n      \n      // Log detailed error information\n      console.error('API Error:', {\n        status,\n        message: data.error || 'An error occurred',\n        url: error.config.url,\n        method: error.config.method,\n      });\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('Network Error:', error.request);\n    } else {\n      // Something happened in setting up the request\n      console.error('Request Error:', error.message);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API service with methods for common operations\nexport default {\n  // Set auth token\n  setAuthToken,\n  removeAuthToken,\n  \n  // Auth endpoints\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  verifyEmail: (token) => api.post('/auth/verify-email', { token }),\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\n  resetPassword: (token, newPassword) => \n    api.post('/auth/reset-password', { token, newPassword }),\n  \n  // User endpoints\n  getUser: () => api.get('/users/me'),\n  updateProfile: (userData) => api.put('/users/profile', userData),\n  \n  // Pet endpoints\n  getPets: () => api.get('/pets'),\n  getPet: (id) => api.get(`/pets/${id}`),\n  createPet: (petData) => api.post('/pets', petData),\n  updatePet: (id, petData) => api.put(`/pets/${id}`, petData),\n  deletePet: (id) => api.delete(`/pets/${id}`),\n  \n  // Service endpoints\n  getServices: (params) => api.get('/services', { params }),\n  getService: (id) => api.get(`/services/${id}`),\n  createService: (serviceData) => api.post('/services', serviceData),\n  updateService: (id, serviceData) => api.put(`/services/${id}`, serviceData),\n  deleteService: (id) => api.delete(`/services/${id}`),\n  \n  // Booking endpoints\n  getBookings: (params) => api.get('/bookings', { params }),\n  getBooking: (id) => api.get(`/bookings/${id}`),\n  createBooking: (bookingData) => api.post('/bookings', bookingData),\n  updateBooking: (id, bookingData) => api.put(`/bookings/${id}`, bookingData),\n  cancelBooking: (id, reason) => \n    api.put(`/bookings/${id}/cancel`, { reason }),\n  completeBooking: (id) => api.put(`/bookings/${id}/complete`),\n  \n  // Payment endpoints\n  createPaymentIntent: (bookingId) => \n    api.post('/payments/create-intent', { bookingId }),\n  \n  // Reviews\n  createReview: (bookingId, reviewData) => \n    api.post(`/bookings/${bookingId}/review`, reviewData),\n  \n  // Direct axios methods for custom requests\n  get: (url, config) => api.get(url, config),\n  post: (url, data, config) => api.post(url, data, config),\n  put: (url, data, config) => api.put(url, data, config),\n  delete: (url, config) => api.delete(url, config),\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}