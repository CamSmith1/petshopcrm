{"ast":null,"code":"var _jsxFileName = \"/home/toebot/dog-services-saas/frontend/src/pages/ServiceDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport AuthContext from '../context/AuthContext';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServiceDetail = () => {\n  _s();\n  const {\n    serviceId\n  } = useParams();\n  const {\n    user,\n    isAuthenticated\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [service, setService] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState('');\n  const [selectedPet, setSelectedPet] = useState('');\n  const [userPets, setUserPets] = useState([]);\n  useEffect(() => {\n    fetchServiceDetails();\n    if (isAuthenticated && (user === null || user === void 0 ? void 0 : user.role) === 'pet_owner') {\n      fetchUserPets();\n    }\n  }, [serviceId, isAuthenticated, user]);\n  const fetchServiceDetails = async () => {\n    try {\n      setLoading(true);\n      // In a real app, we would fetch from API\n      // const response = await api.getService(serviceId);\n      // setService(response.data.service);\n\n      // Mock service details\n      setService({\n        id: serviceId,\n        title: 'Professional Dog Grooming',\n        category: 'grooming',\n        description: 'Our professional dog grooming service includes a bath with premium shampoo, haircut, nail trimming, ear cleaning, and teeth brushing. We cater to all breeds and sizes of dogs, ensuring your furry friend looks and feels their best.',\n        price: {\n          amount: 50,\n          currency: 'USD',\n          unit: 'per_session'\n        },\n        duration: 60,\n        // in minutes\n        provider: {\n          id: '123',\n          name: 'Happy Paws Grooming',\n          rating: 4.8,\n          reviewCount: 125,\n          description: 'Professional dog grooming service with over 10 years of experience. We specialize in all breeds and sizes.',\n          address: '123 Pet Street, New York, NY'\n        },\n        availability: {\n          monday: [{\n            start: '09:00',\n            end: '17:00'\n          }],\n          tuesday: [{\n            start: '09:00',\n            end: '17:00'\n          }],\n          wednesday: [{\n            start: '09:00',\n            end: '17:00'\n          }],\n          thursday: [{\n            start: '09:00',\n            end: '17:00'\n          }],\n          friday: [{\n            start: '09:00',\n            end: '17:00'\n          }],\n          saturday: [{\n            start: '10:00',\n            end: '15:00'\n          }],\n          sunday: []\n        },\n        reviews: [{\n          id: '1',\n          user: 'Sarah M.',\n          rating: 5,\n          comment: 'My dog looks amazing after her grooming session! Will definitely come back.',\n          date: '2023-12-15T10:00:00Z'\n        }, {\n          id: '2',\n          user: 'Michael R.',\n          rating: 4,\n          comment: 'Good service overall. My dog was a bit anxious but they handled him well.',\n          date: '2023-11-28T14:30:00Z'\n        }]\n      });\n      setLoading(false);\n    } catch (err) {\n      setError('Error fetching service details. Please try again.');\n      setLoading(false);\n    }\n  };\n  const fetchUserPets = async () => {\n    try {\n      // In a real app, we would fetch from API\n      // const response = await api.getPets();\n      // setUserPets(response.data.pets);\n\n      // Mock pets\n      setUserPets([{\n        id: '1',\n        name: 'Buddy',\n        breed: 'Golden Retriever'\n      }, {\n        id: '2',\n        name: 'Max',\n        breed: 'German Shepherd'\n      }]);\n    } catch (err) {\n      console.error('Error fetching pets:', err);\n    }\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    setSelectedTime(''); // Reset time when date changes\n  };\n  const handleTimeChange = e => {\n    setSelectedTime(e.target.value);\n  };\n  const handlePetChange = e => {\n    setSelectedPet(e.target.value);\n  };\n  const handleBooking = () => {\n    if (!isAuthenticated) {\n      // Redirect to login if not authenticated\n      navigate('/login', {\n        state: {\n          from: `/services/${serviceId}`\n        }\n      });\n      return;\n    }\n    if (!selectedTime || !selectedPet) {\n      alert('Please select a time and pet for your booking.');\n      return;\n    }\n\n    // Create booking object\n    const bookingData = {\n      serviceId,\n      petId: selectedPet,\n      startTime: new Date(`${format(selectedDate, 'yyyy-MM-dd')}T${selectedTime}`).toISOString()\n      // Add more booking details as needed\n    };\n\n    // In a real app, we would call the API to create a booking\n    console.log('Booking data:', bookingData);\n\n    // Redirect to a booking confirmation page\n    navigate('/bookings');\n  };\n\n  // Generate available time slots based on service availability\n  const getAvailableTimeSlots = () => {\n    if (!service) return [];\n    const dayOfWeek = format(selectedDate, 'EEEE').toLowerCase();\n    const availabilityForDay = service.availability[dayOfWeek] || [];\n    if (availabilityForDay.length === 0) {\n      return [];\n    }\n    const timeSlots = [];\n    availabilityForDay.forEach(slot => {\n      const startHour = parseInt(slot.start.split(':')[0]);\n      const startMinute = parseInt(slot.start.split(':')[1]);\n      const endHour = parseInt(slot.end.split(':')[0]);\n      const endMinute = parseInt(slot.end.split(':')[1]);\n      let currentHour = startHour;\n      let currentMinute = startMinute;\n      while (currentHour < endHour || currentHour === endHour && currentMinute < endMinute) {\n        const formattedHour = currentHour.toString().padStart(2, '0');\n        const formattedMinute = currentMinute.toString().padStart(2, '0');\n        timeSlots.push(`${formattedHour}:${formattedMinute}`);\n\n        // Increment by service duration (default to 30 minutes if not specified)\n        const incrementMinutes = service.duration || 30;\n        currentMinute += incrementMinutes;\n        if (currentMinute >= 60) {\n          currentHour += Math.floor(currentMinute / 60);\n          currentMinute %= 60;\n        }\n      }\n    });\n    return timeSlots;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading service details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 12\n    }, this);\n  }\n  if (!service) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"not-found\",\n      children: \"Service not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 12\n    }, this);\n  }\n  const availableTimeSlots = getAvailableTimeSlots();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"service-detail-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"service-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: service.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"service-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"service-category\",\n            children: service.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"service-rating\",\n            children: [\"\\u2B50 \", service.provider.rating, \" (\", service.provider.reviewCount, \" reviews)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"service-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"service-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-description\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: service.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"provider-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"About the Provider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: service.provider.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: service.provider.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD83D\\uDCCD \", service.provider.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pricing-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Pricing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [\"$\", service.price.amount, service.price.unit === 'per_hour' ? ' per hour' : service.price.unit === 'per_session' ? ' per session' : service.price.unit === 'per_night' ? ' per night' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Duration: \", service.duration, \" minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reviews-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Reviews\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), service.reviews.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No reviews yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reviews-list\",\n              children: service.reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"review-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"review-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"review-author\",\n                    children: review.user\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"review-rating\",\n                    children: '⭐'.repeat(review.rating)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"review-date\",\n                    children: new Date(review.date).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"review-comment\",\n                  children: review.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this)]\n              }, review.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"booking-sidebar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booking-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Book This Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"booking-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: format(selectedDate, 'yyyy-MM-dd'),\n                  min: format(new Date(), 'yyyy-MM-dd'),\n                  onChange: e => handleDateChange(new Date(e.target.value))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedTime,\n                  onChange: handleTimeChange,\n                  disabled: availableTimeSlots.length === 0,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select a time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 21\n                  }, this), availableTimeSlots.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: time,\n                    children: time\n                  }, time, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this), availableTimeSlots.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-text\",\n                  children: \"No available time slots for this date.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this), isAuthenticated && (user === null || user === void 0 ? void 0 : user.role) === 'pet_owner' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Select Pet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedPet,\n                  onChange: handlePetChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select a pet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 23\n                  }, this), userPets.map(pet => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: pet.id,\n                    children: [pet.name, \" (\", pet.breed, \")\"]\n                  }, pet.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"price-summary\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Price: $\", service.price.amount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary btn-block\",\n                onClick: handleBooking,\n                disabled: !selectedTime || !selectedPet && isAuthenticated && (user === null || user === void 0 ? void 0 : user.role) === 'pet_owner',\n                children: isAuthenticated ? 'Book Now' : 'Login to Book'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(ServiceDetail, \"n3fCMJe3rVlGJ4QspS/4MKkxm00=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ServiceDetail;\nexport default ServiceDetail;\nvar _c;\n$RefreshReg$(_c, \"ServiceDetail\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","format","AuthContext","api","jsxDEV","_jsxDEV","ServiceDetail","_s","serviceId","user","isAuthenticated","navigate","service","setService","loading","setLoading","error","setError","selectedDate","setSelectedDate","Date","selectedTime","setSelectedTime","selectedPet","setSelectedPet","userPets","setUserPets","fetchServiceDetails","role","fetchUserPets","id","title","category","description","price","amount","currency","unit","duration","provider","name","rating","reviewCount","address","availability","monday","start","end","tuesday","wednesday","thursday","friday","saturday","sunday","reviews","comment","date","err","breed","console","handleDateChange","handleTimeChange","e","target","value","handlePetChange","handleBooking","state","from","alert","bookingData","petId","startTime","toISOString","log","getAvailableTimeSlots","dayOfWeek","toLowerCase","availabilityForDay","length","timeSlots","forEach","slot","startHour","parseInt","split","startMinute","endHour","endMinute","currentHour","currentMinute","formattedHour","toString","padStart","formattedMinute","push","incrementMinutes","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","availableTimeSlots","map","review","repeat","toLocaleDateString","type","min","onChange","disabled","time","pet","onClick","_c","$RefreshReg$"],"sources":["/home/toebot/dog-services-saas/frontend/src/pages/ServiceDetail.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport AuthContext from '../context/AuthContext';\nimport api from '../services/api';\n\nconst ServiceDetail = () => {\n  const { serviceId } = useParams();\n  const { user, isAuthenticated } = useContext(AuthContext);\n  const navigate = useNavigate();\n  \n  const [service, setService] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState('');\n  const [selectedPet, setSelectedPet] = useState('');\n  const [userPets, setUserPets] = useState([]);\n  \n  useEffect(() => {\n    fetchServiceDetails();\n    if (isAuthenticated && user?.role === 'pet_owner') {\n      fetchUserPets();\n    }\n  }, [serviceId, isAuthenticated, user]);\n  \n  const fetchServiceDetails = async () => {\n    try {\n      setLoading(true);\n      // In a real app, we would fetch from API\n      // const response = await api.getService(serviceId);\n      // setService(response.data.service);\n      \n      // Mock service details\n      setService({\n        id: serviceId,\n        title: 'Professional Dog Grooming',\n        category: 'grooming',\n        description: 'Our professional dog grooming service includes a bath with premium shampoo, haircut, nail trimming, ear cleaning, and teeth brushing. We cater to all breeds and sizes of dogs, ensuring your furry friend looks and feels their best.',\n        price: {\n          amount: 50,\n          currency: 'USD',\n          unit: 'per_session'\n        },\n        duration: 60, // in minutes\n        provider: {\n          id: '123',\n          name: 'Happy Paws Grooming',\n          rating: 4.8,\n          reviewCount: 125,\n          description: 'Professional dog grooming service with over 10 years of experience. We specialize in all breeds and sizes.',\n          address: '123 Pet Street, New York, NY'\n        },\n        availability: {\n          monday: [{start: '09:00', end: '17:00'}],\n          tuesday: [{start: '09:00', end: '17:00'}],\n          wednesday: [{start: '09:00', end: '17:00'}],\n          thursday: [{start: '09:00', end: '17:00'}],\n          friday: [{start: '09:00', end: '17:00'}],\n          saturday: [{start: '10:00', end: '15:00'}],\n          sunday: []\n        },\n        reviews: [\n          {\n            id: '1',\n            user: 'Sarah M.',\n            rating: 5,\n            comment: 'My dog looks amazing after her grooming session! Will definitely come back.',\n            date: '2023-12-15T10:00:00Z'\n          },\n          {\n            id: '2',\n            user: 'Michael R.',\n            rating: 4,\n            comment: 'Good service overall. My dog was a bit anxious but they handled him well.',\n            date: '2023-11-28T14:30:00Z'\n          }\n        ]\n      });\n      \n      setLoading(false);\n    } catch (err) {\n      setError('Error fetching service details. Please try again.');\n      setLoading(false);\n    }\n  };\n  \n  const fetchUserPets = async () => {\n    try {\n      // In a real app, we would fetch from API\n      // const response = await api.getPets();\n      // setUserPets(response.data.pets);\n      \n      // Mock pets\n      setUserPets([\n        { id: '1', name: 'Buddy', breed: 'Golden Retriever' },\n        { id: '2', name: 'Max', breed: 'German Shepherd' }\n      ]);\n    } catch (err) {\n      console.error('Error fetching pets:', err);\n    }\n  };\n  \n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    setSelectedTime(''); // Reset time when date changes\n  };\n  \n  const handleTimeChange = (e) => {\n    setSelectedTime(e.target.value);\n  };\n  \n  const handlePetChange = (e) => {\n    setSelectedPet(e.target.value);\n  };\n  \n  const handleBooking = () => {\n    if (!isAuthenticated) {\n      // Redirect to login if not authenticated\n      navigate('/login', { state: { from: `/services/${serviceId}` } });\n      return;\n    }\n    \n    if (!selectedTime || !selectedPet) {\n      alert('Please select a time and pet for your booking.');\n      return;\n    }\n    \n    // Create booking object\n    const bookingData = {\n      serviceId,\n      petId: selectedPet,\n      startTime: new Date(`${format(selectedDate, 'yyyy-MM-dd')}T${selectedTime}`).toISOString(),\n      // Add more booking details as needed\n    };\n    \n    // In a real app, we would call the API to create a booking\n    console.log('Booking data:', bookingData);\n    \n    // Redirect to a booking confirmation page\n    navigate('/bookings');\n  };\n  \n  // Generate available time slots based on service availability\n  const getAvailableTimeSlots = () => {\n    if (!service) return [];\n    \n    const dayOfWeek = format(selectedDate, 'EEEE').toLowerCase();\n    const availabilityForDay = service.availability[dayOfWeek] || [];\n    \n    if (availabilityForDay.length === 0) {\n      return [];\n    }\n    \n    const timeSlots = [];\n    availabilityForDay.forEach(slot => {\n      const startHour = parseInt(slot.start.split(':')[0]);\n      const startMinute = parseInt(slot.start.split(':')[1]);\n      const endHour = parseInt(slot.end.split(':')[0]);\n      const endMinute = parseInt(slot.end.split(':')[1]);\n      \n      let currentHour = startHour;\n      let currentMinute = startMinute;\n      \n      while (currentHour < endHour || (currentHour === endHour && currentMinute < endMinute)) {\n        const formattedHour = currentHour.toString().padStart(2, '0');\n        const formattedMinute = currentMinute.toString().padStart(2, '0');\n        timeSlots.push(`${formattedHour}:${formattedMinute}`);\n        \n        // Increment by service duration (default to 30 minutes if not specified)\n        const incrementMinutes = service.duration || 30;\n        currentMinute += incrementMinutes;\n        if (currentMinute >= 60) {\n          currentHour += Math.floor(currentMinute / 60);\n          currentMinute %= 60;\n        }\n      }\n    });\n    \n    return timeSlots;\n  };\n  \n  if (loading) {\n    return <div className=\"loading\">Loading service details...</div>;\n  }\n  \n  if (error) {\n    return <div className=\"error-message\">{error}</div>;\n  }\n  \n  if (!service) {\n    return <div className=\"not-found\">Service not found</div>;\n  }\n  \n  const availableTimeSlots = getAvailableTimeSlots();\n  \n  return (\n    <div className=\"service-detail-page\">\n      <div className=\"container\">\n        <div className=\"service-header\">\n          <h1>{service.title}</h1>\n          <div className=\"service-meta\">\n            <span className=\"service-category\">{service.category}</span>\n            <span className=\"service-rating\">⭐ {service.provider.rating} ({service.provider.reviewCount} reviews)</span>\n          </div>\n        </div>\n        \n        <div className=\"service-content\">\n          <div className=\"service-info\">\n            <div className=\"service-description\">\n              <h2>Description</h2>\n              <p>{service.description}</p>\n            </div>\n            \n            <div className=\"provider-info\">\n              <h2>About the Provider</h2>\n              <h3>{service.provider.name}</h3>\n              <p>{service.provider.description}</p>\n              <p>📍 {service.provider.address}</p>\n            </div>\n            \n            <div className=\"pricing-info\">\n              <h2>Pricing</h2>\n              <p className=\"price\">\n                ${service.price.amount} \n                {service.price.unit === 'per_hour' ? ' per hour' : \n                  service.price.unit === 'per_session' ? ' per session' : \n                  service.price.unit === 'per_night' ? ' per night' : ''}\n              </p>\n              <p>Duration: {service.duration} minutes</p>\n            </div>\n            \n            <div className=\"reviews-section\">\n              <h2>Reviews</h2>\n              {service.reviews.length === 0 ? (\n                <p>No reviews yet.</p>\n              ) : (\n                <div className=\"reviews-list\">\n                  {service.reviews.map(review => (\n                    <div key={review.id} className=\"review-card\">\n                      <div className=\"review-header\">\n                        <span className=\"review-author\">{review.user}</span>\n                        <span className=\"review-rating\">\n                          {'⭐'.repeat(review.rating)}\n                        </span>\n                        <span className=\"review-date\">\n                          {new Date(review.date).toLocaleDateString()}\n                        </span>\n                      </div>\n                      <p className=\"review-comment\">{review.comment}</p>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"booking-sidebar\">\n            <div className=\"booking-card\">\n              <h2>Book This Service</h2>\n              \n              <div className=\"booking-form\">\n                <div className=\"form-group\">\n                  <label>Date</label>\n                  <input \n                    type=\"date\" \n                    value={format(selectedDate, 'yyyy-MM-dd')}\n                    min={format(new Date(), 'yyyy-MM-dd')}\n                    onChange={(e) => handleDateChange(new Date(e.target.value))}\n                  />\n                </div>\n                \n                <div className=\"form-group\">\n                  <label>Time</label>\n                  <select \n                    value={selectedTime}\n                    onChange={handleTimeChange}\n                    disabled={availableTimeSlots.length === 0}\n                  >\n                    <option value=\"\">Select a time</option>\n                    {availableTimeSlots.map(time => (\n                      <option key={time} value={time}>\n                        {time}\n                      </option>\n                    ))}\n                  </select>\n                  {availableTimeSlots.length === 0 && (\n                    <p className=\"error-text\">No available time slots for this date.</p>\n                  )}\n                </div>\n                \n                {isAuthenticated && user?.role === 'pet_owner' && (\n                  <div className=\"form-group\">\n                    <label>Select Pet</label>\n                    <select \n                      value={selectedPet}\n                      onChange={handlePetChange}\n                    >\n                      <option value=\"\">Select a pet</option>\n                      {userPets.map(pet => (\n                        <option key={pet.id} value={pet.id}>\n                          {pet.name} ({pet.breed})\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                )}\n                \n                <div className=\"price-summary\">\n                  <p>Price: ${service.price.amount}</p>\n                </div>\n                \n                <button \n                  className=\"btn btn-primary btn-block\"\n                  onClick={handleBooking}\n                  disabled={!selectedTime || (!selectedPet && isAuthenticated && user?.role === 'pet_owner')}\n                >\n                  {isAuthenticated ? 'Book Now' : 'Login to Book'}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ServiceDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}