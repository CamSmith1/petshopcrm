{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from'react';import{useNavigate}from'react-router-dom';import supabase from'../services/supabaseClient';import supabaseService from'../services/supabaseService';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>useContext(AuthContext);export const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[session,setSession]=useState(null);const[authLoading,setAuthLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();// Check for existing session on mount\nuseEffect(()=>{const checkSession=async()=>{// Get current session from Supabase\nconst{data:{session:currentSession}}=await supabase.auth.getSession();if(currentSession){setSession(currentSession);try{// Get user profile data\nconst{data:{user}}=await supabase.auth.getUser();if(user){// Get additional user data from profiles table\nconst{data:userData,error:profileError}=await supabase.from('users').select('*').eq('id',user.id).single();if(profileError){var _user$user_metadata,_user$user_metadata2;console.error('Error fetching user profile:',profileError);// Create a fallback user object with minimal data\nsetCurrentUser({id:user.id,email:user.email,name:((_user$user_metadata=user.user_metadata)===null||_user$user_metadata===void 0?void 0:_user$user_metadata.name)||'User',role:((_user$user_metadata2=user.user_metadata)===null||_user$user_metadata2===void 0?void 0:_user$user_metadata2.role)||'client'});}else{var _user$user_metadata3,_user$user_metadata4;// Create a complete user object\nsetCurrentUser({id:user.id,email:user.email,name:userData.name||((_user$user_metadata3=user.user_metadata)===null||_user$user_metadata3===void 0?void 0:_user$user_metadata3.name),role:userData.role||((_user$user_metadata4=user.user_metadata)===null||_user$user_metadata4===void 0?void 0:_user$user_metadata4.role)||'client',phone:userData.phone,avatar:userData.avatar_url,address:{street:userData.street,city:userData.city,state:userData.state,zipCode:userData.zip_code,country:userData.country},businessName:userData.business_name,businessCategory:userData.business_category,isVerified:user.email_confirmed_at?true:false});}}}catch(err){console.error('Error getting user details:',err);}}setAuthLoading(false);};// Listen for auth state changes\nconst{data:{subscription}}=supabase.auth.onAuthStateChange(async(event,newSession)=>{setSession(newSession);if(event==='SIGNED_IN'&&newSession){try{// Get user profile data\nconst{data:{user}}=await supabase.auth.getUser(newSession.access_token);if(user){// Get additional user data from profiles table\nconst{data:userData,error:profileError}=await supabase.from('users').select('*').eq('id',user.id).single();if(profileError){var _user$user_metadata5,_user$user_metadata6;console.error('Error fetching user profile on sign in:',profileError);setCurrentUser({id:user.id,email:user.email,name:((_user$user_metadata5=user.user_metadata)===null||_user$user_metadata5===void 0?void 0:_user$user_metadata5.name)||'User',role:((_user$user_metadata6=user.user_metadata)===null||_user$user_metadata6===void 0?void 0:_user$user_metadata6.role)||'client'});}else{var _user$user_metadata7,_user$user_metadata8;setCurrentUser({id:user.id,email:user.email,name:userData.name||((_user$user_metadata7=user.user_metadata)===null||_user$user_metadata7===void 0?void 0:_user$user_metadata7.name),role:userData.role||((_user$user_metadata8=user.user_metadata)===null||_user$user_metadata8===void 0?void 0:_user$user_metadata8.role)||'client',phone:userData.phone,avatar:userData.avatar_url,address:{street:userData.street,city:userData.city,state:userData.state,zipCode:userData.zip_code,country:userData.country},businessName:userData.business_name,businessCategory:userData.business_category,isVerified:user.email_confirmed_at?true:false});}}}catch(err){console.error('Error getting user details on auth change:',err);}}else if(event==='SIGNED_OUT'||event==='USER_DELETED'){setCurrentUser(null);setSession(null);}});checkSession();// Cleanup subscription on unmount\nreturn()=>{subscription.unsubscribe();};},[]);// Register user\nconst register=async userData=>{try{setError(null);setAuthLoading(true);const result=await supabaseService.auth.register(userData);setSession(result.session);setCurrentUser(result.user);setAuthLoading(false);return result;}catch(err){setAuthLoading(false);setError(err.message||'An error occurred during registration. Please try again.');throw err;}};// Login user\nconst login=async credentials=>{try{setError(null);setAuthLoading(true);const result=await supabaseService.auth.login(credentials);setSession(result.session);setCurrentUser(result.user);setAuthLoading(false);return result;}catch(err){setAuthLoading(false);setError(err.message||'Invalid credentials. Please try again.');throw err;}};// Logout user\nconst logout=async()=>{try{await supabaseService.auth.logout();setSession(null);setCurrentUser(null);navigate('/login');}catch(err){console.error('Error during logout:',err);}};// Update user profile\nconst updateProfile=async profileData=>{try{setError(null);setAuthLoading(true);const result=await supabaseService.users.updateProfile(profileData);setCurrentUser({...currentUser,...result.user});setAuthLoading(false);return result;}catch(err){setAuthLoading(false);setError(err.message||'An error occurred while updating profile. Please try again.');throw err;}};// For demo purposes - bypass authentication\nconst setBypassAuth=userData=>{console.warn('Demo mode is not supported with Supabase authentication');// Instead of using a fake token, we can redirect to login\nnavigate('/login');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{currentUser,session,authLoading,error,register,login,logout,updateProfile,setBypassAuth,isAuthenticated:!!session},children:children});};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useNavigate","supabase","supabaseService","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","currentUser","setCurrentUser","session","setSession","authLoading","setAuthLoading","error","setError","navigate","checkSession","data","currentSession","auth","getSession","user","getUser","userData","profileError","from","select","eq","id","single","_user$user_metadata","_user$user_metadata2","console","email","name","user_metadata","role","_user$user_metadata3","_user$user_metadata4","phone","avatar","avatar_url","address","street","city","state","zipCode","zip_code","country","businessName","business_name","businessCategory","business_category","isVerified","email_confirmed_at","err","subscription","onAuthStateChange","event","newSession","access_token","_user$user_metadata5","_user$user_metadata6","_user$user_metadata7","_user$user_metadata8","unsubscribe","register","result","message","login","credentials","logout","updateProfile","profileData","users","setBypassAuth","warn","Provider","value","isAuthenticated"],"sources":["/home/toebot/dog-services-saas/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport supabase from '../services/supabaseClient';\nimport supabaseService from '../services/supabaseService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [session, setSession] = useState(null);\n  const [authLoading, setAuthLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Check for existing session on mount\n  useEffect(() => {\n    const checkSession = async () => {\n      // Get current session from Supabase\n      const { data: { session: currentSession } } = await supabase.auth.getSession();\n      \n      if (currentSession) {\n        setSession(currentSession);\n        \n        try {\n          // Get user profile data\n          const { data: { user } } = await supabase.auth.getUser();\n          \n          if (user) {\n            // Get additional user data from profiles table\n            const { data: userData, error: profileError } = await supabase\n              .from('users')\n              .select('*')\n              .eq('id', user.id)\n              .single();\n              \n            if (profileError) {\n              console.error('Error fetching user profile:', profileError);\n              // Create a fallback user object with minimal data\n              setCurrentUser({\n                id: user.id,\n                email: user.email,\n                name: user.user_metadata?.name || 'User',\n                role: user.user_metadata?.role || 'client',\n              });\n            } else {\n              // Create a complete user object\n              setCurrentUser({\n                id: user.id,\n                email: user.email,\n                name: userData.name || user.user_metadata?.name,\n                role: userData.role || user.user_metadata?.role || 'client',\n                phone: userData.phone,\n                avatar: userData.avatar_url,\n                address: {\n                  street: userData.street,\n                  city: userData.city,\n                  state: userData.state,\n                  zipCode: userData.zip_code,\n                  country: userData.country\n                },\n                businessName: userData.business_name,\n                businessCategory: userData.business_category,\n                isVerified: user.email_confirmed_at ? true : false,\n              });\n            }\n          }\n        } catch (err) {\n          console.error('Error getting user details:', err);\n        }\n      }\n      \n      setAuthLoading(false);\n    };\n    \n    // Listen for auth state changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (event, newSession) => {\n        setSession(newSession);\n        \n        if (event === 'SIGNED_IN' && newSession) {\n          try {\n            // Get user profile data\n            const { data: { user } } = await supabase.auth.getUser(newSession.access_token);\n            \n            if (user) {\n              // Get additional user data from profiles table\n              const { data: userData, error: profileError } = await supabase\n                .from('users')\n                .select('*')\n                .eq('id', user.id)\n                .single();\n                \n              if (profileError) {\n                console.error('Error fetching user profile on sign in:', profileError);\n                setCurrentUser({\n                  id: user.id,\n                  email: user.email,\n                  name: user.user_metadata?.name || 'User',\n                  role: user.user_metadata?.role || 'client',\n                });\n              } else {\n                setCurrentUser({\n                  id: user.id,\n                  email: user.email,\n                  name: userData.name || user.user_metadata?.name,\n                  role: userData.role || user.user_metadata?.role || 'client',\n                  phone: userData.phone,\n                  avatar: userData.avatar_url,\n                  address: {\n                    street: userData.street,\n                    city: userData.city,\n                    state: userData.state,\n                    zipCode: userData.zip_code,\n                    country: userData.country\n                  },\n                  businessName: userData.business_name,\n                  businessCategory: userData.business_category,\n                  isVerified: user.email_confirmed_at ? true : false,\n                });\n              }\n            }\n          } catch (err) {\n            console.error('Error getting user details on auth change:', err);\n          }\n        } else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n          setCurrentUser(null);\n          setSession(null);\n        }\n      }\n    );\n    \n    checkSession();\n    \n    // Cleanup subscription on unmount\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  // Register user\n  const register = async (userData) => {\n    try {\n      setError(null);\n      setAuthLoading(true);\n      \n      const result = await supabaseService.auth.register(userData);\n      \n      setSession(result.session);\n      setCurrentUser(result.user);\n      \n      setAuthLoading(false);\n      return result;\n    } catch (err) {\n      setAuthLoading(false);\n      setError(err.message || 'An error occurred during registration. Please try again.');\n      throw err;\n    }\n  };\n\n  // Login user\n  const login = async (credentials) => {\n    try {\n      setError(null);\n      setAuthLoading(true);\n      \n      const result = await supabaseService.auth.login(credentials);\n      \n      setSession(result.session);\n      setCurrentUser(result.user);\n      \n      setAuthLoading(false);\n      return result;\n    } catch (err) {\n      setAuthLoading(false);\n      setError(err.message || 'Invalid credentials. Please try again.');\n      throw err;\n    }\n  };\n\n  // Logout user\n  const logout = async () => {\n    try {\n      await supabaseService.auth.logout();\n      setSession(null);\n      setCurrentUser(null);\n      navigate('/login');\n    } catch (err) {\n      console.error('Error during logout:', err);\n    }\n  };\n\n  // Update user profile\n  const updateProfile = async (profileData) => {\n    try {\n      setError(null);\n      setAuthLoading(true);\n      \n      const result = await supabaseService.users.updateProfile(profileData);\n      \n      setCurrentUser({\n        ...currentUser,\n        ...result.user\n      });\n      \n      setAuthLoading(false);\n      return result;\n    } catch (err) {\n      setAuthLoading(false);\n      setError(err.message || 'An error occurred while updating profile. Please try again.');\n      throw err;\n    }\n  };\n\n  // For demo purposes - bypass authentication\n  const setBypassAuth = (userData) => {\n    console.warn('Demo mode is not supported with Supabase authentication');\n    \n    // Instead of using a fake token, we can redirect to login\n    navigate('/login');\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        session,\n        authLoading,\n        error,\n        register,\n        login,\n        logout,\n        updateProfile,\n        setBypassAuth,\n        isAuthenticated: !!session,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}