{"ast":null,"code":"import axios from'axios';// Create axios instance\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:5000/api',headers:{'Content-Type':'application/json'}});// Set token in request headers\nconst setAuthToken=token=>{if(token){api.defaults.headers.common['Authorization']=`Bearer ${token}`;}};// Remove token from request headers\nconst removeAuthToken=()=>{delete api.defaults.headers.common['Authorization'];};// Interceptor to handle errors\napi.interceptors.response.use(response=>response,error=>{// Handle specific error codes\nif(error.response){const{status,data}=error.response;// Handle 401 Unauthorized\nif(status===401){// If token is expired or invalid, and not a demo token, remove it\nconst token=localStorage.getItem('token');if(token&&!token.startsWith('mock-bypass-token-')){localStorage.removeItem('token');window.location.href='/login';}}// Log detailed error information\nconsole.error('API Error:',{status,message:data.error||'An error occurred',url:error.config.url,method:error.config.method});}else if(error.request){// The request was made but no response was received\nconsole.error('Network Error:',error.request);}else{// Something happened in setting up the request\nconsole.error('Request Error:',error.message);}return Promise.reject(error);});// API service with methods for common operations\nexport default{// Set auth token\nsetAuthToken,removeAuthToken,// Auth endpoints\nregister:userData=>api.post('/auth/register',userData),login:credentials=>api.post('/auth/login',credentials),verifyEmail:token=>api.post('/auth/verify-email',{token}),forgotPassword:email=>api.post('/auth/forgot-password',{email}),resetPassword:(token,newPassword)=>api.post('/auth/reset-password',{token,newPassword}),// User endpoints\ngetUser:()=>api.get('/users/me'),updateProfile:userData=>api.put('/users/profile',userData),// Venue endpoints\ngetVenues:params=>{// In development mode, return mock venues if requested\nif(process.env.NODE_ENV==='development'){return Promise.resolve({data:{venues:[{id:'1',name:'Community Hall',category:'hall',description:'Large community hall ideal for events, conferences, and gatherings up to 200 people.',address:{street:'123 Main St',city:'Townsville',state:'TS',zipCode:'12345',country:'USA'},maxCapacity:200,amenities:['WiFi','AV Equipment','Kitchen','Parking','Accessible Entrance'],accessibilityFeatures:['Wheelchair Access','Hearing Loop','Accessible Restrooms'],layouts:[{id:'101',name:'Theater',capacity:200},{id:'102',name:'Banquet',capacity:150},{id:'103',name:'Classroom',capacity:100}],pricing:{standard:{amount:150,unit:'hour'},commercial:{amount:200,unit:'hour'},community:{amount:100,unit:'hour'}},isPaused:false,images:[{url:'https://example.com/venue1_1.jpg',isPrimary:true},{url:'https://example.com/venue1_2.jpg'}],ratings:{average:4.8,count:25},bookings:{total:42,upcoming:3}},{id:'2',name:'Conference Room A',category:'meeting',description:'Modern conference room with high-speed internet and video conferencing capabilities.',address:{street:'456 Business Ave',city:'Metropolis',state:'MP',zipCode:'67890',country:'USA'},maxCapacity:30,amenities:['WiFi','Video Conferencing','Whiteboard','Coffee Service'],accessibilityFeatures:['Wheelchair Access','Accessible Restrooms'],layouts:[{id:'201',name:'Boardroom',capacity:20},{id:'202',name:'U-Shape',capacity:16}],pricing:{standard:{amount:75,unit:'hour'},commercial:{amount:100,unit:'hour'},community:{amount:50,unit:'hour'}},isPaused:false,images:[{url:'https://example.com/venue2_1.jpg',isPrimary:true}],ratings:{average:4.6,count:18},bookings:{total:35,upcoming:2}},{id:'3',name:'Banquet Hall',category:'banquet',description:'Elegant banquet hall perfect for weddings, parties, and formal events.',address:{street:'789 Celebration Blvd',city:'Festivity',state:'FT',zipCode:'45678',country:'USA'},maxCapacity:150,amenities:['Dance Floor','Sound System','Kitchen','Bar Area','Coat Check'],accessibilityFeatures:['Wheelchair Access','Accessible Parking','Accessible Restrooms'],layouts:[{id:'301',name:'Banquet',capacity:150},{id:'302',name:'Reception',capacity:200}],pricing:{standard:{amount:2000,unit:'day'},commercial:{amount:2500,unit:'day'},community:{amount:1500,unit:'day'}},isPaused:true,images:[{url:'https://example.com/venue3_1.jpg',isPrimary:true},{url:'https://example.com/venue3_2.jpg'}],ratings:{average:4.7,count:15},bookings:{total:120,upcoming:0}}]}});}// Otherwise, make the actual API call\nreturn api.get('/venues',{params});},getVenue:id=>api.get(`/venues/${id}`),createVenue:venueData=>api.post('/venues',venueData),updateVenue:(id,venueData)=>api.put(`/venues/${id}`,venueData),deleteVenue:id=>api.delete(`/venues/${id}`),// Venue layouts\ngetVenueLayouts:venueId=>api.get(`/venues/${venueId}/layouts`),getVenueLayout:(venueId,layoutId)=>api.get(`/venues/${venueId}/layouts/${layoutId}`),createVenueLayout:(venueId,layoutData)=>api.post(`/venues/${venueId}/layouts`,layoutData),updateVenueLayout:(venueId,layoutId,layoutData)=>api.put(`/venues/${venueId}/layouts/${layoutId}`,layoutData),deleteVenueLayout:(venueId,layoutId)=>api.delete(`/venues/${venueId}/layouts/${layoutId}`),// Venue equipment\ngetVenueEquipment:venueId=>api.get(`/venues/${venueId}/equipment`),getVenueEquipmentItem:(venueId,equipmentId)=>api.get(`/venues/${venueId}/equipment/${equipmentId}`),createVenueEquipment:(venueId,equipmentData)=>api.post(`/venues/${venueId}/equipment`,equipmentData),updateVenueEquipment:(venueId,equipmentId,equipmentData)=>api.put(`/venues/${venueId}/equipment/${equipmentId}`,equipmentData),deleteVenueEquipment:(venueId,equipmentId)=>api.delete(`/venues/${venueId}/equipment/${equipmentId}`),// Venue bonds\ngetVenueBonds:venueId=>api.get(`/venues/${venueId}/bonds`),getVenueBond:(venueId,bondId)=>api.get(`/venues/${venueId}/bonds/${bondId}`),createVenueBond:(venueId,bondData)=>api.post(`/venues/${venueId}/bonds`,bondData),updateVenueBond:(venueId,bondId,bondData)=>api.put(`/venues/${venueId}/bonds/${bondId}`,bondData),deleteVenueBond:(venueId,bondId)=>api.delete(`/venues/${venueId}/bonds/${bondId}`),// Venue availability\ngetVenueAvailability:(venueId,params)=>api.get(`/venues/${venueId}/availability`,{params}),createVenueAvailability:(venueId,availabilityData)=>api.post(`/venues/${venueId}/availability`,availabilityData),updateVenueAvailability:(venueId,availabilityId,availabilityData)=>api.put(`/venues/${venueId}/availability/${availabilityId}`,availabilityData),deleteVenueAvailability:(venueId,availabilityId)=>api.delete(`/venues/${venueId}/availability/${availabilityId}`),// Venue images\ngetVenueImages:venueId=>api.get(`/venues/${venueId}/images`),uploadVenueImage:(venueId,imageData)=>{const formData=new FormData();formData.append('image',imageData.file);if(imageData.description)formData.append('description',imageData.description);if(imageData.isPrimary!==undefined)formData.append('is_primary',imageData.isPrimary);return api.post(`/venues/${venueId}/images`,formData,{headers:{'Content-Type':'multipart/form-data'}});},updateVenueImage:(venueId,imageId,imageData)=>api.put(`/venues/${venueId}/images/${imageId}`,imageData),deleteVenueImage:(venueId,imageId)=>api.delete(`/venues/${venueId}/images/${imageId}`),setPrimaryVenueImage:(venueId,imageId)=>api.put(`/venues/${venueId}/images/${imageId}/set-primary`),// Booking endpoints\ngetBookings:params=>{// In development mode, return mock bookings from localStorage\nif(process.env.NODE_ENV==='development'){const storedBookings=localStorage.getItem('mockBookings');let bookings=storedBookings?JSON.parse(storedBookings):[];// Filter bookings based on params if they exist\nif(params){if(params.status){const statusArray=Array.isArray(params.status)?params.status:[params.status];bookings=bookings.filter(booking=>statusArray.includes(booking.status));}if(params.startDate){const startDate=new Date(params.startDate);bookings=bookings.filter(booking=>new Date(booking.startTime)>=startDate);}if(params.endDate){const endDate=new Date(params.endDate);bookings=bookings.filter(booking=>new Date(booking.startTime)<=endDate);}}return Promise.resolve({data:{bookings:bookings}});}// Otherwise, make the actual API call\nreturn api.get('/bookings',{params});},getBooking:id=>{// In development mode, return mock booking from localStorage\nif(process.env.NODE_ENV==='development'){const storedBookings=localStorage.getItem('mockBookings');let bookings=storedBookings?JSON.parse(storedBookings):[];const booking=bookings.find(b=>b._id===id);if(booking){return Promise.resolve({data:{booking:booking}});}// If booking not found in localStorage and it's the mock data, return that\nif(id==='service1'||id==='service2'){// This is a fallback for mock services\nreturn Promise.resolve({data:{booking:{_id:id,title:id==='service1'?'Basic Dog Grooming':'Deluxe Dog Grooming',status:'confirmed',startTime:new Date().toISOString(),endTime:new Date(new Date().getTime()+60*60*1000).toISOString()}}});}// Return a 404 error\nreturn Promise.reject({response:{status:404,data:{error:'Booking not found'}}});}// Otherwise, make the actual API call\nreturn api.get(`/bookings/${id}`);},createBooking:bookingData=>{// In development mode, update mock data and modify local state\nif(process.env.NODE_ENV==='development'){const mockBookingId='booking-'+Math.random().toString(36).substring(2,9);// Create a mock booking that will be visible in the UI\nconst mockBooking={_id:mockBookingId,...bookingData,status:'confirmed',createdAt:new Date().toISOString()};// If localStorage has bookings, update it\nconst storedBookings=localStorage.getItem('mockBookings');let bookings=storedBookings?JSON.parse(storedBookings):[];bookings.push(mockBooking);localStorage.setItem('mockBookings',JSON.stringify(bookings));return Promise.resolve({data:{booking:mockBooking}});}// Otherwise, make the actual API call\nreturn api.post('/bookings',bookingData);},updateBooking:(id,bookingData)=>api.put(`/bookings/${id}`,bookingData),cancelBooking:(id,reason)=>api.put(`/bookings/${id}/cancel`,{reason}),completeBooking:id=>api.put(`/bookings/${id}/complete`),// Payment endpoints\ncreatePaymentIntent:bookingId=>api.post('/payments/create-intent',{bookingId}),// Reviews\ncreateReview:(bookingId,reviewData)=>api.post(`/bookings/${bookingId}/review`,reviewData),// Customer endpoints\ncreateOrUpdateCustomer:customerData=>{// In development mode, return mock customer data\nif(process.env.NODE_ENV==='development'){return Promise.resolve({data:{customer:{_id:'mock-customer-id',name:customerData.name,email:customerData.email,phone:customerData.phone}}});}// Otherwise, make the actual API call\nreturn api.post('/customers',customerData);},// Direct axios methods for custom requests\nget:(url,config)=>api.get(url,config),post:(url,data,config)=>api.post(url,data,config),put:(url,data,config)=>api.put(url,data,config),delete:(url,config)=>api.delete(url,config)};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","setAuthToken","token","defaults","common","removeAuthToken","interceptors","response","use","error","status","data","localStorage","getItem","startsWith","removeItem","window","location","href","console","message","url","config","method","request","Promise","reject","register","userData","post","login","credentials","verifyEmail","forgotPassword","email","resetPassword","newPassword","getUser","get","updateProfile","put","getVenues","params","NODE_ENV","resolve","venues","id","name","category","description","address","street","city","state","zipCode","country","maxCapacity","amenities","accessibilityFeatures","layouts","capacity","pricing","standard","amount","unit","commercial","community","isPaused","images","isPrimary","ratings","average","count","bookings","total","upcoming","getVenue","createVenue","venueData","updateVenue","deleteVenue","delete","getVenueLayouts","venueId","getVenueLayout","layoutId","createVenueLayout","layoutData","updateVenueLayout","deleteVenueLayout","getVenueEquipment","getVenueEquipmentItem","equipmentId","createVenueEquipment","equipmentData","updateVenueEquipment","deleteVenueEquipment","getVenueBonds","getVenueBond","bondId","createVenueBond","bondData","updateVenueBond","deleteVenueBond","getVenueAvailability","createVenueAvailability","availabilityData","updateVenueAvailability","availabilityId","deleteVenueAvailability","getVenueImages","uploadVenueImage","imageData","formData","FormData","append","file","undefined","updateVenueImage","imageId","deleteVenueImage","setPrimaryVenueImage","getBookings","storedBookings","JSON","parse","statusArray","Array","isArray","filter","booking","includes","startDate","Date","startTime","endDate","getBooking","find","b","_id","title","toISOString","endTime","getTime","createBooking","bookingData","mockBookingId","Math","random","toString","substring","mockBooking","createdAt","push","setItem","stringify","updateBooking","cancelBooking","reason","completeBooking","createPaymentIntent","bookingId","createReview","reviewData","createOrUpdateCustomer","customerData","customer","phone"],"sources":["/home/toebot/dog-services-saas/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Set token in request headers\nconst setAuthToken = (token) => {\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  }\n};\n\n// Remove token from request headers\nconst removeAuthToken = () => {\n  delete api.defaults.headers.common['Authorization'];\n};\n\n// Interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Handle specific error codes\n    if (error.response) {\n      const { status, data } = error.response;\n      \n      // Handle 401 Unauthorized\n      if (status === 401) {\n        // If token is expired or invalid, and not a demo token, remove it\n        const token = localStorage.getItem('token');\n        if (token && !token.startsWith('mock-bypass-token-')) {\n          localStorage.removeItem('token');\n          window.location.href = '/login';\n        }\n      }\n      \n      // Log detailed error information\n      console.error('API Error:', {\n        status,\n        message: data.error || 'An error occurred',\n        url: error.config.url,\n        method: error.config.method,\n      });\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('Network Error:', error.request);\n    } else {\n      // Something happened in setting up the request\n      console.error('Request Error:', error.message);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API service with methods for common operations\nexport default {\n  // Set auth token\n  setAuthToken,\n  removeAuthToken,\n  \n  // Auth endpoints\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  verifyEmail: (token) => api.post('/auth/verify-email', { token }),\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\n  resetPassword: (token, newPassword) => \n    api.post('/auth/reset-password', { token, newPassword }),\n  \n  // User endpoints\n  getUser: () => api.get('/users/me'),\n  updateProfile: (userData) => api.put('/users/profile', userData),\n  \n  // Venue endpoints\n  getVenues: (params) => {\n    // In development mode, return mock venues if requested\n    if (process.env.NODE_ENV === 'development') {\n      return Promise.resolve({\n        data: {\n          venues: [\n            {\n              id: '1',\n              name: 'Community Hall',\n              category: 'hall',\n              description: 'Large community hall ideal for events, conferences, and gatherings up to 200 people.',\n              address: {\n                street: '123 Main St',\n                city: 'Townsville',\n                state: 'TS',\n                zipCode: '12345',\n                country: 'USA'\n              },\n              maxCapacity: 200,\n              amenities: ['WiFi', 'AV Equipment', 'Kitchen', 'Parking', 'Accessible Entrance'],\n              accessibilityFeatures: ['Wheelchair Access', 'Hearing Loop', 'Accessible Restrooms'],\n              layouts: [\n                { id: '101', name: 'Theater', capacity: 200 },\n                { id: '102', name: 'Banquet', capacity: 150 },\n                { id: '103', name: 'Classroom', capacity: 100 }\n              ],\n              pricing: {\n                standard: { amount: 150, unit: 'hour' },\n                commercial: { amount: 200, unit: 'hour' },\n                community: { amount: 100, unit: 'hour' }\n              },\n              isPaused: false,\n              images: [\n                { url: 'https://example.com/venue1_1.jpg', isPrimary: true },\n                { url: 'https://example.com/venue1_2.jpg' }\n              ],\n              ratings: {\n                average: 4.8,\n                count: 25\n              },\n              bookings: {\n                total: 42,\n                upcoming: 3\n              }\n            },\n            {\n              id: '2',\n              name: 'Conference Room A',\n              category: 'meeting',\n              description: 'Modern conference room with high-speed internet and video conferencing capabilities.',\n              address: {\n                street: '456 Business Ave',\n                city: 'Metropolis',\n                state: 'MP',\n                zipCode: '67890',\n                country: 'USA'\n              },\n              maxCapacity: 30,\n              amenities: ['WiFi', 'Video Conferencing', 'Whiteboard', 'Coffee Service'],\n              accessibilityFeatures: ['Wheelchair Access', 'Accessible Restrooms'],\n              layouts: [\n                { id: '201', name: 'Boardroom', capacity: 20 },\n                { id: '202', name: 'U-Shape', capacity: 16 }\n              ],\n              pricing: {\n                standard: { amount: 75, unit: 'hour' },\n                commercial: { amount: 100, unit: 'hour' },\n                community: { amount: 50, unit: 'hour' }\n              },\n              isPaused: false,\n              images: [\n                { url: 'https://example.com/venue2_1.jpg', isPrimary: true }\n              ],\n              ratings: {\n                average: 4.6,\n                count: 18\n              },\n              bookings: {\n                total: 35,\n                upcoming: 2\n              }\n            },\n            {\n              id: '3',\n              name: 'Banquet Hall',\n              category: 'banquet',\n              description: 'Elegant banquet hall perfect for weddings, parties, and formal events.',\n              address: {\n                street: '789 Celebration Blvd',\n                city: 'Festivity',\n                state: 'FT',\n                zipCode: '45678',\n                country: 'USA'\n              },\n              maxCapacity: 150,\n              amenities: ['Dance Floor', 'Sound System', 'Kitchen', 'Bar Area', 'Coat Check'],\n              accessibilityFeatures: ['Wheelchair Access', 'Accessible Parking', 'Accessible Restrooms'],\n              layouts: [\n                { id: '301', name: 'Banquet', capacity: 150 },\n                { id: '302', name: 'Reception', capacity: 200 }\n              ],\n              pricing: {\n                standard: { amount: 2000, unit: 'day' },\n                commercial: { amount: 2500, unit: 'day' },\n                community: { amount: 1500, unit: 'day' }\n              },\n              isPaused: true,\n              images: [\n                { url: 'https://example.com/venue3_1.jpg', isPrimary: true },\n                { url: 'https://example.com/venue3_2.jpg' }\n              ],\n              ratings: {\n                average: 4.7,\n                count: 15\n              },\n              bookings: {\n                total: 120,\n                upcoming: 0\n              }\n            }\n          ]\n        }\n      });\n    }\n    \n    // Otherwise, make the actual API call\n    return api.get('/venues', { params });\n  },\n  getVenue: (id) => api.get(`/venues/${id}`),\n  createVenue: (venueData) => api.post('/venues', venueData),\n  updateVenue: (id, venueData) => api.put(`/venues/${id}`, venueData),\n  deleteVenue: (id) => api.delete(`/venues/${id}`),\n  \n  // Venue layouts\n  getVenueLayouts: (venueId) => api.get(`/venues/${venueId}/layouts`),\n  getVenueLayout: (venueId, layoutId) => api.get(`/venues/${venueId}/layouts/${layoutId}`),\n  createVenueLayout: (venueId, layoutData) => api.post(`/venues/${venueId}/layouts`, layoutData),\n  updateVenueLayout: (venueId, layoutId, layoutData) => api.put(`/venues/${venueId}/layouts/${layoutId}`, layoutData),\n  deleteVenueLayout: (venueId, layoutId) => api.delete(`/venues/${venueId}/layouts/${layoutId}`),\n  \n  // Venue equipment\n  getVenueEquipment: (venueId) => api.get(`/venues/${venueId}/equipment`),\n  getVenueEquipmentItem: (venueId, equipmentId) => api.get(`/venues/${venueId}/equipment/${equipmentId}`),\n  createVenueEquipment: (venueId, equipmentData) => api.post(`/venues/${venueId}/equipment`, equipmentData),\n  updateVenueEquipment: (venueId, equipmentId, equipmentData) => api.put(`/venues/${venueId}/equipment/${equipmentId}`, equipmentData),\n  deleteVenueEquipment: (venueId, equipmentId) => api.delete(`/venues/${venueId}/equipment/${equipmentId}`),\n  \n  // Venue bonds\n  getVenueBonds: (venueId) => api.get(`/venues/${venueId}/bonds`),\n  getVenueBond: (venueId, bondId) => api.get(`/venues/${venueId}/bonds/${bondId}`),\n  createVenueBond: (venueId, bondData) => api.post(`/venues/${venueId}/bonds`, bondData),\n  updateVenueBond: (venueId, bondId, bondData) => api.put(`/venues/${venueId}/bonds/${bondId}`, bondData),\n  deleteVenueBond: (venueId, bondId) => api.delete(`/venues/${venueId}/bonds/${bondId}`),\n  \n  // Venue availability\n  getVenueAvailability: (venueId, params) => api.get(`/venues/${venueId}/availability`, { params }),\n  createVenueAvailability: (venueId, availabilityData) => api.post(`/venues/${venueId}/availability`, availabilityData),\n  updateVenueAvailability: (venueId, availabilityId, availabilityData) => api.put(`/venues/${venueId}/availability/${availabilityId}`, availabilityData),\n  deleteVenueAvailability: (venueId, availabilityId) => api.delete(`/venues/${venueId}/availability/${availabilityId}`),\n  \n  // Venue images\n  getVenueImages: (venueId) => api.get(`/venues/${venueId}/images`),\n  uploadVenueImage: (venueId, imageData) => {\n    const formData = new FormData();\n    formData.append('image', imageData.file);\n    if (imageData.description) formData.append('description', imageData.description);\n    if (imageData.isPrimary !== undefined) formData.append('is_primary', imageData.isPrimary);\n    \n    return api.post(`/venues/${venueId}/images`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  updateVenueImage: (venueId, imageId, imageData) => api.put(`/venues/${venueId}/images/${imageId}`, imageData),\n  deleteVenueImage: (venueId, imageId) => api.delete(`/venues/${venueId}/images/${imageId}`),\n  setPrimaryVenueImage: (venueId, imageId) => api.put(`/venues/${venueId}/images/${imageId}/set-primary`),\n  \n  // Booking endpoints\n  getBookings: (params) => {\n    // In development mode, return mock bookings from localStorage\n    if (process.env.NODE_ENV === 'development') {\n      const storedBookings = localStorage.getItem('mockBookings');\n      let bookings = storedBookings ? JSON.parse(storedBookings) : [];\n      \n      // Filter bookings based on params if they exist\n      if (params) {\n        if (params.status) {\n          const statusArray = Array.isArray(params.status) ? params.status : [params.status];\n          bookings = bookings.filter(booking => statusArray.includes(booking.status));\n        }\n        \n        if (params.startDate) {\n          const startDate = new Date(params.startDate);\n          bookings = bookings.filter(booking => new Date(booking.startTime) >= startDate);\n        }\n        \n        if (params.endDate) {\n          const endDate = new Date(params.endDate);\n          bookings = bookings.filter(booking => new Date(booking.startTime) <= endDate);\n        }\n      }\n      \n      return Promise.resolve({\n        data: {\n          bookings: bookings\n        }\n      });\n    }\n    \n    // Otherwise, make the actual API call\n    return api.get('/bookings', { params });\n  },\n  getBooking: (id) => {\n    // In development mode, return mock booking from localStorage\n    if (process.env.NODE_ENV === 'development') {\n      const storedBookings = localStorage.getItem('mockBookings');\n      let bookings = storedBookings ? JSON.parse(storedBookings) : [];\n      const booking = bookings.find(b => b._id === id);\n      \n      if (booking) {\n        return Promise.resolve({\n          data: {\n            booking: booking\n          }\n        });\n      }\n      \n      // If booking not found in localStorage and it's the mock data, return that\n      if (id === 'service1' || id === 'service2') {\n        // This is a fallback for mock services\n        return Promise.resolve({\n          data: {\n            booking: {\n              _id: id,\n              title: id === 'service1' ? 'Basic Dog Grooming' : 'Deluxe Dog Grooming',\n              status: 'confirmed',\n              startTime: new Date().toISOString(),\n              endTime: new Date(new Date().getTime() + 60 * 60 * 1000).toISOString()\n            }\n          }\n        });\n      }\n      \n      // Return a 404 error\n      return Promise.reject({\n        response: {\n          status: 404,\n          data: { error: 'Booking not found' }\n        }\n      });\n    }\n    \n    // Otherwise, make the actual API call\n    return api.get(`/bookings/${id}`);\n  },\n  createBooking: (bookingData) => {\n    // In development mode, update mock data and modify local state\n    if (process.env.NODE_ENV === 'development') {\n      const mockBookingId = 'booking-' + Math.random().toString(36).substring(2, 9);\n      \n      // Create a mock booking that will be visible in the UI\n      const mockBooking = {\n        _id: mockBookingId,\n        ...bookingData,\n        status: 'confirmed',\n        createdAt: new Date().toISOString()\n      };\n      \n      // If localStorage has bookings, update it\n      const storedBookings = localStorage.getItem('mockBookings');\n      let bookings = storedBookings ? JSON.parse(storedBookings) : [];\n      bookings.push(mockBooking);\n      localStorage.setItem('mockBookings', JSON.stringify(bookings));\n      \n      return Promise.resolve({\n        data: {\n          booking: mockBooking\n        }\n      });\n    }\n    \n    // Otherwise, make the actual API call\n    return api.post('/bookings', bookingData);\n  },\n  updateBooking: (id, bookingData) => api.put(`/bookings/${id}`, bookingData),\n  cancelBooking: (id, reason) => \n    api.put(`/bookings/${id}/cancel`, { reason }),\n  completeBooking: (id) => api.put(`/bookings/${id}/complete`),\n  \n  // Payment endpoints\n  createPaymentIntent: (bookingId) => \n    api.post('/payments/create-intent', { bookingId }),\n  \n  // Reviews\n  createReview: (bookingId, reviewData) => \n    api.post(`/bookings/${bookingId}/review`, reviewData),\n    \n  // Customer endpoints\n  createOrUpdateCustomer: (customerData) => {\n    // In development mode, return mock customer data\n    if (process.env.NODE_ENV === 'development') {\n      return Promise.resolve({\n        data: {\n          customer: {\n            _id: 'mock-customer-id',\n            name: customerData.name,\n            email: customerData.email,\n            phone: customerData.phone\n          }\n        }\n      });\n    }\n    \n    // Otherwise, make the actual API call\n    return api.post('/customers', customerData);\n  },\n  \n  // Direct axios methods for custom requests\n  get: (url, config) => api.get(url, config),\n  post: (url, data, config) => api.post(url, data, config),\n  put: (url, data, config) => api.put(url, data, config),\n  delete: (url, config) => api.delete(url, config),\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}