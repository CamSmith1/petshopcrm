{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import api from'../services/api';import{useAuth}from'./AuthContext';// Create context for business management\nimport{jsx as _jsx}from\"react/jsx-runtime\";const BusinessContext=/*#__PURE__*/createContext();// Custom hook to use the business context\nexport const useBusiness=()=>useContext(BusinessContext);// Provider component\nexport const BusinessProvider=_ref=>{let{children}=_ref;const{isAuthenticated,currentUser}=useAuth();// Business state\nconst[businessProfile,setBusinessProfile]=useState(null);const[services,setServices]=useState([]);const[serviceCategories,setServiceCategories]=useState([]);const[locations,setLocations]=useState([]);const[staff,setStaff]=useState([]);const[customers,setCustomers]=useState([]);const[appointments,setAppointments]=useState([]);const[businessLoading,setBusinessLoading]=useState(false);const[businessError,setBusinessError]=useState(null);// Fetch business profile on authentication\nuseEffect(()=>{const fetchBusinessProfile=async()=>{if(!isAuthenticated||!currentUser)return;try{setBusinessLoading(true);setBusinessError(null);const response=await api.get('/business/profile');if(response.data&&response.data.business){setBusinessProfile(response.data.business);}}catch(error){console.error('Error fetching business profile:',error);setBusinessError('Failed to load business profile');}finally{setBusinessLoading(false);}};fetchBusinessProfile();},[isAuthenticated,currentUser]);// Service management\nconst fetchServices=async function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setBusinessLoading(true);setBusinessError(null);// Build query parameters\nconst queryParams=new URLSearchParams();if(options.category)queryParams.append('category',options.category);if(options.active!==undefined)queryParams.append('active',options.active);if(options.sortBy)queryParams.append('sortBy',options.sortBy);if(options.limit)queryParams.append('limit',options.limit);const query=queryParams.toString()?`?${queryParams.toString()}`:'';const response=await api.get(`/services${query}`);if(response.data&&response.data.services){setServices(response.data.services);return response.data.services;}return[];}catch(error){console.error('Error fetching services:',error);setBusinessError('Failed to load services');return[];}finally{setBusinessLoading(false);}};const createService=async serviceData=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.post('/services',serviceData);if(response.data&&response.data.service){// Update services list\nsetServices(prevServices=>[...prevServices,response.data.service]);return{success:true,service:response.data.service};}return{success:false,error:'Failed to create service'};}catch(error){var _error$response,_error$response$data,_error$response2,_error$response2$data;console.error('Error creating service:',error);setBusinessError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to create service');return{success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to create service'};}finally{setBusinessLoading(false);}};const updateService=async(serviceId,serviceData)=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.put(`/services/${serviceId}`,serviceData);if(response.data&&response.data.service){// Update services list\nsetServices(prevServices=>prevServices.map(service=>service._id===serviceId?response.data.service:service));return{success:true,service:response.data.service};}return{success:false,error:'Failed to update service'};}catch(error){var _error$response3,_error$response3$data,_error$response4,_error$response4$data;console.error('Error updating service:',error);setBusinessError(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Failed to update service');return{success:false,error:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to update service'};}finally{setBusinessLoading(false);}};const deleteService=async serviceId=>{try{setBusinessLoading(true);setBusinessError(null);await api.delete(`/services/${serviceId}`);// Update services list\nsetServices(prevServices=>prevServices.filter(service=>service._id!==serviceId));return{success:true};}catch(error){var _error$response5,_error$response5$data,_error$response6,_error$response6$data;console.error('Error deleting service:',error);setBusinessError(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to delete service');return{success:false,error:((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to delete service'};}finally{setBusinessLoading(false);}};// Service category management\nconst fetchServiceCategories=async()=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.get('/service-categories');if(response.data&&response.data.categories){setServiceCategories(response.data.categories);return response.data.categories;}return[];}catch(error){console.error('Error fetching service categories:',error);setBusinessError('Failed to load service categories');return[];}finally{setBusinessLoading(false);}};const createServiceCategory=async categoryData=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.post('/service-categories',categoryData);if(response.data&&response.data.category){// Update categories list\nsetServiceCategories(prevCategories=>[...prevCategories,response.data.category]);return{success:true,category:response.data.category};}return{success:false,error:'Failed to create service category'};}catch(error){var _error$response7,_error$response7$data,_error$response8,_error$response8$data;console.error('Error creating service category:',error);setBusinessError(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Failed to create service category');return{success:false,error:((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.message)||'Failed to create service category'};}finally{setBusinessLoading(false);}};// Staff management\nconst fetchStaff=async()=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.get('/staff');if(response.data&&response.data.staff){setStaff(response.data.staff);return response.data.staff;}return[];}catch(error){console.error('Error fetching staff:',error);setBusinessError('Failed to load staff');return[];}finally{setBusinessLoading(false);}};// Customer management\nconst fetchCustomers=async function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setBusinessLoading(true);setBusinessError(null);// Build query parameters\nconst queryParams=new URLSearchParams();if(options.search)queryParams.append('search',options.search);if(options.sortBy)queryParams.append('sortBy',options.sortBy);if(options.limit)queryParams.append('limit',options.limit);if(options.page)queryParams.append('page',options.page);const query=queryParams.toString()?`?${queryParams.toString()}`:'';const response=await api.get(`/customers${query}`);if(response.data&&response.data.customers){setCustomers(response.data.customers);return{customers:response.data.customers,total:response.data.total,pages:response.data.pages};}return{customers:[],total:0,pages:0};}catch(error){console.error('Error fetching customers:',error);setBusinessError('Failed to load customers');return{customers:[],total:0,pages:0};}finally{setBusinessLoading(false);}};// Appointment management\nconst fetchAppointments=async function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setBusinessLoading(true);setBusinessError(null);// Build query parameters\nconst queryParams=new URLSearchParams();if(options.startDate)queryParams.append('startDate',options.startDate);if(options.endDate)queryParams.append('endDate',options.endDate);if(options.status)queryParams.append('status',options.status);if(options.serviceId)queryParams.append('serviceId',options.serviceId);if(options.staffId)queryParams.append('staffId',options.staffId);if(options.customerId)queryParams.append('customerId',options.customerId);if(options.sortBy)queryParams.append('sortBy',options.sortBy);if(options.limit)queryParams.append('limit',options.limit);if(options.page)queryParams.append('page',options.page);const query=queryParams.toString()?`?${queryParams.toString()}`:'';const response=await api.get(`/appointments${query}`);if(response.data&&response.data.appointments){setAppointments(response.data.appointments);return{appointments:response.data.appointments,total:response.data.total,pages:response.data.pages};}return{appointments:[],total:0,pages:0};}catch(error){console.error('Error fetching appointments:',error);setBusinessError('Failed to load appointments');return{appointments:[],total:0,pages:0};}finally{setBusinessLoading(false);}};// Business profile management\nconst updateBusinessProfile=async profileData=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.put('/business/profile',profileData);if(response.data&&response.data.business){setBusinessProfile(response.data.business);return{success:true,business:response.data.business};}return{success:false,error:'Failed to update business profile'};}catch(error){var _error$response9,_error$response9$data,_error$response10,_error$response10$dat;console.error('Error updating business profile:',error);setBusinessError(((_error$response9=error.response)===null||_error$response9===void 0?void 0:(_error$response9$data=_error$response9.data)===null||_error$response9$data===void 0?void 0:_error$response9$data.message)||'Failed to update business profile');return{success:false,error:((_error$response10=error.response)===null||_error$response10===void 0?void 0:(_error$response10$dat=_error$response10.data)===null||_error$response10$dat===void 0?void 0:_error$response10$dat.message)||'Failed to update business profile'};}finally{setBusinessLoading(false);}};// Widget integration\nconst getWidgetSettings=async()=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.get('/widget/settings');if(response.data&&response.data.settings){return{success:true,settings:response.data.settings};}return{success:false,error:'Failed to get widget settings'};}catch(error){var _error$response11,_error$response11$dat,_error$response12,_error$response12$dat;console.error('Error getting widget settings:',error);setBusinessError(((_error$response11=error.response)===null||_error$response11===void 0?void 0:(_error$response11$dat=_error$response11.data)===null||_error$response11$dat===void 0?void 0:_error$response11$dat.message)||'Failed to get widget settings');return{success:false,error:((_error$response12=error.response)===null||_error$response12===void 0?void 0:(_error$response12$dat=_error$response12.data)===null||_error$response12$dat===void 0?void 0:_error$response12$dat.message)||'Failed to get widget settings'};}finally{setBusinessLoading(false);}};const updateWidgetSettings=async settingsData=>{try{setBusinessLoading(true);setBusinessError(null);const response=await api.put('/widget/settings',settingsData);if(response.data&&response.data.settings){return{success:true,settings:response.data.settings};}return{success:false,error:'Failed to update widget settings'};}catch(error){var _error$response13,_error$response13$dat,_error$response14,_error$response14$dat;console.error('Error updating widget settings:',error);setBusinessError(((_error$response13=error.response)===null||_error$response13===void 0?void 0:(_error$response13$dat=_error$response13.data)===null||_error$response13$dat===void 0?void 0:_error$response13$dat.message)||'Failed to update widget settings');return{success:false,error:((_error$response14=error.response)===null||_error$response14===void 0?void 0:(_error$response14$dat=_error$response14.data)===null||_error$response14$dat===void 0?void 0:_error$response14$dat.message)||'Failed to update widget settings'};}finally{setBusinessLoading(false);}};return/*#__PURE__*/_jsx(BusinessContext.Provider,{value:{// Business profile\nbusinessProfile,updateBusinessProfile,// Service management\nservices,fetchServices,createService,updateService,deleteService,// Service categories\nserviceCategories,fetchServiceCategories,createServiceCategory,// Staff management\nstaff,fetchStaff,// Customer management\ncustomers,fetchCustomers,// Appointment management\nappointments,fetchAppointments,// Widget integration\ngetWidgetSettings,updateWidgetSettings,// Loading and error states\nbusinessLoading,businessError},children:children});};export default BusinessContext;","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","useAuth","jsx","_jsx","BusinessContext","useBusiness","BusinessProvider","_ref","children","isAuthenticated","currentUser","businessProfile","setBusinessProfile","services","setServices","serviceCategories","setServiceCategories","locations","setLocations","staff","setStaff","customers","setCustomers","appointments","setAppointments","businessLoading","setBusinessLoading","businessError","setBusinessError","fetchBusinessProfile","response","get","data","business","error","console","fetchServices","options","arguments","length","undefined","queryParams","URLSearchParams","category","append","active","sortBy","limit","query","toString","createService","serviceData","post","service","prevServices","success","_error$response","_error$response$data","_error$response2","_error$response2$data","message","updateService","serviceId","put","map","_id","_error$response3","_error$response3$data","_error$response4","_error$response4$data","deleteService","delete","filter","_error$response5","_error$response5$data","_error$response6","_error$response6$data","fetchServiceCategories","categories","createServiceCategory","categoryData","prevCategories","_error$response7","_error$response7$data","_error$response8","_error$response8$data","fetchStaff","fetchCustomers","search","page","total","pages","fetchAppointments","startDate","endDate","status","staffId","customerId","updateBusinessProfile","profileData","_error$response9","_error$response9$data","_error$response10","_error$response10$dat","getWidgetSettings","settings","_error$response11","_error$response11$dat","_error$response12","_error$response12$dat","updateWidgetSettings","settingsData","_error$response13","_error$response13$dat","_error$response14","_error$response14$dat","Provider","value"],"sources":["/home/toebot/dog-services-saas/frontend/src/context/BusinessContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport { useAuth } from './AuthContext';\n\n// Create context for business management\nconst BusinessContext = createContext();\n\n// Custom hook to use the business context\nexport const useBusiness = () => useContext(BusinessContext);\n\n// Provider component\nexport const BusinessProvider = ({ children }) => {\n  const { isAuthenticated, currentUser } = useAuth();\n  \n  // Business state\n  const [businessProfile, setBusinessProfile] = useState(null);\n  const [services, setServices] = useState([]);\n  const [serviceCategories, setServiceCategories] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [staff, setStaff] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [businessLoading, setBusinessLoading] = useState(false);\n  const [businessError, setBusinessError] = useState(null);\n  \n  // Fetch business profile on authentication\n  useEffect(() => {\n    const fetchBusinessProfile = async () => {\n      if (!isAuthenticated || !currentUser) return;\n      \n      try {\n        setBusinessLoading(true);\n        setBusinessError(null);\n        \n        const response = await api.get('/business/profile');\n        \n        if (response.data && response.data.business) {\n          setBusinessProfile(response.data.business);\n        }\n      } catch (error) {\n        console.error('Error fetching business profile:', error);\n        setBusinessError('Failed to load business profile');\n      } finally {\n        setBusinessLoading(false);\n      }\n    };\n    \n    fetchBusinessProfile();\n  }, [isAuthenticated, currentUser]);\n  \n  // Service management\n  const fetchServices = async (options = {}) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      // Build query parameters\n      const queryParams = new URLSearchParams();\n      if (options.category) queryParams.append('category', options.category);\n      if (options.active !== undefined) queryParams.append('active', options.active);\n      if (options.sortBy) queryParams.append('sortBy', options.sortBy);\n      if (options.limit) queryParams.append('limit', options.limit);\n      \n      const query = queryParams.toString() ? `?${queryParams.toString()}` : '';\n      \n      const response = await api.get(`/services${query}`);\n      \n      if (response.data && response.data.services) {\n        setServices(response.data.services);\n        return response.data.services;\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error fetching services:', error);\n      setBusinessError('Failed to load services');\n      return [];\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  const createService = async (serviceData) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.post('/services', serviceData);\n      \n      if (response.data && response.data.service) {\n        // Update services list\n        setServices(prevServices => [...prevServices, response.data.service]);\n        return { success: true, service: response.data.service };\n      }\n      \n      return { success: false, error: 'Failed to create service' };\n    } catch (error) {\n      console.error('Error creating service:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to create service');\n      return { success: false, error: error.response?.data?.message || 'Failed to create service' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  const updateService = async (serviceId, serviceData) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.put(`/services/${serviceId}`, serviceData);\n      \n      if (response.data && response.data.service) {\n        // Update services list\n        setServices(prevServices => \n          prevServices.map(service => \n            service._id === serviceId ? response.data.service : service\n          )\n        );\n        return { success: true, service: response.data.service };\n      }\n      \n      return { success: false, error: 'Failed to update service' };\n    } catch (error) {\n      console.error('Error updating service:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to update service');\n      return { success: false, error: error.response?.data?.message || 'Failed to update service' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  const deleteService = async (serviceId) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      await api.delete(`/services/${serviceId}`);\n      \n      // Update services list\n      setServices(prevServices => \n        prevServices.filter(service => service._id !== serviceId)\n      );\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Error deleting service:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to delete service');\n      return { success: false, error: error.response?.data?.message || 'Failed to delete service' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  // Service category management\n  const fetchServiceCategories = async () => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.get('/service-categories');\n      \n      if (response.data && response.data.categories) {\n        setServiceCategories(response.data.categories);\n        return response.data.categories;\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error fetching service categories:', error);\n      setBusinessError('Failed to load service categories');\n      return [];\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  const createServiceCategory = async (categoryData) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.post('/service-categories', categoryData);\n      \n      if (response.data && response.data.category) {\n        // Update categories list\n        setServiceCategories(prevCategories => [...prevCategories, response.data.category]);\n        return { success: true, category: response.data.category };\n      }\n      \n      return { success: false, error: 'Failed to create service category' };\n    } catch (error) {\n      console.error('Error creating service category:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to create service category');\n      return { success: false, error: error.response?.data?.message || 'Failed to create service category' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  // Staff management\n  const fetchStaff = async () => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.get('/staff');\n      \n      if (response.data && response.data.staff) {\n        setStaff(response.data.staff);\n        return response.data.staff;\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error fetching staff:', error);\n      setBusinessError('Failed to load staff');\n      return [];\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  // Customer management\n  const fetchCustomers = async (options = {}) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      // Build query parameters\n      const queryParams = new URLSearchParams();\n      if (options.search) queryParams.append('search', options.search);\n      if (options.sortBy) queryParams.append('sortBy', options.sortBy);\n      if (options.limit) queryParams.append('limit', options.limit);\n      if (options.page) queryParams.append('page', options.page);\n      \n      const query = queryParams.toString() ? `?${queryParams.toString()}` : '';\n      \n      const response = await api.get(`/customers${query}`);\n      \n      if (response.data && response.data.customers) {\n        setCustomers(response.data.customers);\n        return {\n          customers: response.data.customers,\n          total: response.data.total,\n          pages: response.data.pages\n        };\n      }\n      \n      return { customers: [], total: 0, pages: 0 };\n    } catch (error) {\n      console.error('Error fetching customers:', error);\n      setBusinessError('Failed to load customers');\n      return { customers: [], total: 0, pages: 0 };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  // Appointment management\n  const fetchAppointments = async (options = {}) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      // Build query parameters\n      const queryParams = new URLSearchParams();\n      if (options.startDate) queryParams.append('startDate', options.startDate);\n      if (options.endDate) queryParams.append('endDate', options.endDate);\n      if (options.status) queryParams.append('status', options.status);\n      if (options.serviceId) queryParams.append('serviceId', options.serviceId);\n      if (options.staffId) queryParams.append('staffId', options.staffId);\n      if (options.customerId) queryParams.append('customerId', options.customerId);\n      if (options.sortBy) queryParams.append('sortBy', options.sortBy);\n      if (options.limit) queryParams.append('limit', options.limit);\n      if (options.page) queryParams.append('page', options.page);\n      \n      const query = queryParams.toString() ? `?${queryParams.toString()}` : '';\n      \n      const response = await api.get(`/appointments${query}`);\n      \n      if (response.data && response.data.appointments) {\n        setAppointments(response.data.appointments);\n        return {\n          appointments: response.data.appointments,\n          total: response.data.total,\n          pages: response.data.pages\n        };\n      }\n      \n      return { appointments: [], total: 0, pages: 0 };\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n      setBusinessError('Failed to load appointments');\n      return { appointments: [], total: 0, pages: 0 };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  // Business profile management\n  const updateBusinessProfile = async (profileData) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.put('/business/profile', profileData);\n      \n      if (response.data && response.data.business) {\n        setBusinessProfile(response.data.business);\n        return { success: true, business: response.data.business };\n      }\n      \n      return { success: false, error: 'Failed to update business profile' };\n    } catch (error) {\n      console.error('Error updating business profile:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to update business profile');\n      return { success: false, error: error.response?.data?.message || 'Failed to update business profile' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  // Widget integration\n  const getWidgetSettings = async () => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.get('/widget/settings');\n      \n      if (response.data && response.data.settings) {\n        return { success: true, settings: response.data.settings };\n      }\n      \n      return { success: false, error: 'Failed to get widget settings' };\n    } catch (error) {\n      console.error('Error getting widget settings:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to get widget settings');\n      return { success: false, error: error.response?.data?.message || 'Failed to get widget settings' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  const updateWidgetSettings = async (settingsData) => {\n    try {\n      setBusinessLoading(true);\n      setBusinessError(null);\n      \n      const response = await api.put('/widget/settings', settingsData);\n      \n      if (response.data && response.data.settings) {\n        return { success: true, settings: response.data.settings };\n      }\n      \n      return { success: false, error: 'Failed to update widget settings' };\n    } catch (error) {\n      console.error('Error updating widget settings:', error);\n      setBusinessError(error.response?.data?.message || 'Failed to update widget settings');\n      return { success: false, error: error.response?.data?.message || 'Failed to update widget settings' };\n    } finally {\n      setBusinessLoading(false);\n    }\n  };\n  \n  return (\n    <BusinessContext.Provider\n      value={{\n        // Business profile\n        businessProfile,\n        updateBusinessProfile,\n        \n        // Service management\n        services,\n        fetchServices,\n        createService,\n        updateService,\n        deleteService,\n        \n        // Service categories\n        serviceCategories,\n        fetchServiceCategories,\n        createServiceCategory,\n        \n        // Staff management\n        staff,\n        fetchStaff,\n        \n        // Customer management\n        customers,\n        fetchCustomers,\n        \n        // Appointment management\n        appointments,\n        fetchAppointments,\n        \n        // Widget integration\n        getWidgetSettings,\n        updateWidgetSettings,\n        \n        // Loading and error states\n        businessLoading,\n        businessError\n      }}\n    >\n      {children}\n    </BusinessContext.Provider>\n  );\n};\n\nexport default BusinessContext;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAC7E,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,OAASC,OAAO,KAAQ,eAAe,CAEvC;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,eAAe,cAAGR,aAAa,CAAC,CAAC,CAEvC;AACA,MAAO,MAAM,CAAAS,WAAW,CAAGA,CAAA,GAAMP,UAAU,CAACM,eAAe,CAAC,CAE5D;AACA,MAAO,MAAM,CAAAE,gBAAgB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3C,KAAM,CAAEE,eAAe,CAAEC,WAAY,CAAC,CAAGT,OAAO,CAAC,CAAC,CAElD;AACA,KAAM,CAACU,eAAe,CAAEC,kBAAkB,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACkB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACoB,SAAS,CAAEC,YAAY,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACsB,KAAK,CAAEC,QAAQ,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACwB,SAAS,CAAEC,YAAY,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAC0B,YAAY,CAAEC,eAAe,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAAC4B,eAAe,CAAEC,kBAAkB,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAAC8B,aAAa,CAAEC,gBAAgB,CAAC,CAAG/B,QAAQ,CAAC,IAAI,CAAC,CAExD;AACAE,SAAS,CAAC,IAAM,CACd,KAAM,CAAA8B,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CAACpB,eAAe,EAAI,CAACC,WAAW,CAAE,OAEtC,GAAI,CACFgB,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA9B,GAAG,CAAC+B,GAAG,CAAC,mBAAmB,CAAC,CAEnD,GAAID,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAAE,CAC3CrB,kBAAkB,CAACkB,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAAC,CAC5C,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CACxDN,gBAAgB,CAAC,iCAAiC,CAAC,CACrD,CAAC,OAAS,CACRF,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAEDG,oBAAoB,CAAC,CAAC,CACxB,CAAC,CAAE,CAACpB,eAAe,CAAEC,WAAW,CAAC,CAAC,CAElC;AACA,KAAM,CAAA0B,aAAa,CAAG,cAAAA,CAAA,CAAwB,IAAjB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACvC,GAAI,CACFZ,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB;AACA,KAAM,CAAAa,WAAW,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACzC,GAAIL,OAAO,CAACM,QAAQ,CAAEF,WAAW,CAACG,MAAM,CAAC,UAAU,CAAEP,OAAO,CAACM,QAAQ,CAAC,CACtE,GAAIN,OAAO,CAACQ,MAAM,GAAKL,SAAS,CAAEC,WAAW,CAACG,MAAM,CAAC,QAAQ,CAAEP,OAAO,CAACQ,MAAM,CAAC,CAC9E,GAAIR,OAAO,CAACS,MAAM,CAAEL,WAAW,CAACG,MAAM,CAAC,QAAQ,CAAEP,OAAO,CAACS,MAAM,CAAC,CAChE,GAAIT,OAAO,CAACU,KAAK,CAAEN,WAAW,CAACG,MAAM,CAAC,OAAO,CAAEP,OAAO,CAACU,KAAK,CAAC,CAE7D,KAAM,CAAAC,KAAK,CAAGP,WAAW,CAACQ,QAAQ,CAAC,CAAC,CAAG,IAAIR,WAAW,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAG,EAAE,CAExE,KAAM,CAAAnB,QAAQ,CAAG,KAAM,CAAA9B,GAAG,CAAC+B,GAAG,CAAC,YAAYiB,KAAK,EAAE,CAAC,CAEnD,GAAIlB,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAACnB,QAAQ,CAAE,CAC3CC,WAAW,CAACgB,QAAQ,CAACE,IAAI,CAACnB,QAAQ,CAAC,CACnC,MAAO,CAAAiB,QAAQ,CAACE,IAAI,CAACnB,QAAQ,CAC/B,CAEA,MAAO,EAAE,CACX,CAAE,MAAOqB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDN,gBAAgB,CAAC,yBAAyB,CAAC,CAC3C,MAAO,EAAE,CACX,CAAC,OAAS,CACRF,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED,KAAM,CAAAwB,aAAa,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC3C,GAAI,CACFzB,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA9B,GAAG,CAACoD,IAAI,CAAC,WAAW,CAAED,WAAW,CAAC,CAEzD,GAAIrB,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAACqB,OAAO,CAAE,CAC1C;AACAvC,WAAW,CAACwC,YAAY,EAAI,CAAC,GAAGA,YAAY,CAAExB,QAAQ,CAACE,IAAI,CAACqB,OAAO,CAAC,CAAC,CACrE,MAAO,CAAEE,OAAO,CAAE,IAAI,CAAEF,OAAO,CAAEvB,QAAQ,CAACE,IAAI,CAACqB,OAAQ,CAAC,CAC1D,CAEA,MAAO,CAAEE,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,0BAA2B,CAAC,CAC9D,CAAE,MAAOA,KAAK,CAAE,KAAAsB,eAAA,CAAAC,oBAAA,CAAAC,gBAAA,CAAAC,qBAAA,CACdxB,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/CN,gBAAgB,CAAC,EAAA4B,eAAA,CAAAtB,KAAK,CAACJ,QAAQ,UAAA0B,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBxB,IAAI,UAAAyB,oBAAA,iBAApBA,oBAAA,CAAsBG,OAAO,GAAI,0BAA0B,CAAC,CAC7E,MAAO,CAAEL,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,EAAAwB,gBAAA,CAAAxB,KAAK,CAACJ,QAAQ,UAAA4B,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgB1B,IAAI,UAAA2B,qBAAA,iBAApBA,qBAAA,CAAsBC,OAAO,GAAI,0BAA2B,CAAC,CAC/F,CAAC,OAAS,CACRlC,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED,KAAM,CAAAmC,aAAa,CAAG,KAAAA,CAAOC,SAAS,CAAEX,WAAW,GAAK,CACtD,GAAI,CACFzB,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA9B,GAAG,CAAC+D,GAAG,CAAC,aAAaD,SAAS,EAAE,CAAEX,WAAW,CAAC,CAErE,GAAIrB,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAACqB,OAAO,CAAE,CAC1C;AACAvC,WAAW,CAACwC,YAAY,EACtBA,YAAY,CAACU,GAAG,CAACX,OAAO,EACtBA,OAAO,CAACY,GAAG,GAAKH,SAAS,CAAGhC,QAAQ,CAACE,IAAI,CAACqB,OAAO,CAAGA,OACtD,CACF,CAAC,CACD,MAAO,CAAEE,OAAO,CAAE,IAAI,CAAEF,OAAO,CAAEvB,QAAQ,CAACE,IAAI,CAACqB,OAAQ,CAAC,CAC1D,CAEA,MAAO,CAAEE,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,0BAA2B,CAAC,CAC9D,CAAE,MAAOA,KAAK,CAAE,KAAAgC,gBAAA,CAAAC,qBAAA,CAAAC,gBAAA,CAAAC,qBAAA,CACdlC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/CN,gBAAgB,CAAC,EAAAsC,gBAAA,CAAAhC,KAAK,CAACJ,QAAQ,UAAAoC,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBlC,IAAI,UAAAmC,qBAAA,iBAApBA,qBAAA,CAAsBP,OAAO,GAAI,0BAA0B,CAAC,CAC7E,MAAO,CAAEL,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,EAAAkC,gBAAA,CAAAlC,KAAK,CAACJ,QAAQ,UAAAsC,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBpC,IAAI,UAAAqC,qBAAA,iBAApBA,qBAAA,CAAsBT,OAAO,GAAI,0BAA2B,CAAC,CAC/F,CAAC,OAAS,CACRlC,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED,KAAM,CAAA4C,aAAa,CAAG,KAAO,CAAAR,SAAS,EAAK,CACzC,GAAI,CACFpC,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB,KAAM,CAAA5B,GAAG,CAACuE,MAAM,CAAC,aAAaT,SAAS,EAAE,CAAC,CAE1C;AACAhD,WAAW,CAACwC,YAAY,EACtBA,YAAY,CAACkB,MAAM,CAACnB,OAAO,EAAIA,OAAO,CAACY,GAAG,GAAKH,SAAS,CAC1D,CAAC,CAED,MAAO,CAAEP,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOrB,KAAK,CAAE,KAAAuC,gBAAA,CAAAC,qBAAA,CAAAC,gBAAA,CAAAC,qBAAA,CACdzC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/CN,gBAAgB,CAAC,EAAA6C,gBAAA,CAAAvC,KAAK,CAACJ,QAAQ,UAAA2C,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBzC,IAAI,UAAA0C,qBAAA,iBAApBA,qBAAA,CAAsBd,OAAO,GAAI,0BAA0B,CAAC,CAC7E,MAAO,CAAEL,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,EAAAyC,gBAAA,CAAAzC,KAAK,CAACJ,QAAQ,UAAA6C,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgB3C,IAAI,UAAA4C,qBAAA,iBAApBA,qBAAA,CAAsBhB,OAAO,GAAI,0BAA2B,CAAC,CAC/F,CAAC,OAAS,CACRlC,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED;AACA,KAAM,CAAAmD,sBAAsB,CAAG,KAAAA,CAAA,GAAY,CACzC,GAAI,CACFnD,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA9B,GAAG,CAAC+B,GAAG,CAAC,qBAAqB,CAAC,CAErD,GAAID,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAAC8C,UAAU,CAAE,CAC7C9D,oBAAoB,CAACc,QAAQ,CAACE,IAAI,CAAC8C,UAAU,CAAC,CAC9C,MAAO,CAAAhD,QAAQ,CAACE,IAAI,CAAC8C,UAAU,CACjC,CAEA,MAAO,EAAE,CACX,CAAE,MAAO5C,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1DN,gBAAgB,CAAC,mCAAmC,CAAC,CACrD,MAAO,EAAE,CACX,CAAC,OAAS,CACRF,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED,KAAM,CAAAqD,qBAAqB,CAAG,KAAO,CAAAC,YAAY,EAAK,CACpD,GAAI,CACFtD,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA9B,GAAG,CAACoD,IAAI,CAAC,qBAAqB,CAAE4B,YAAY,CAAC,CAEpE,GAAIlD,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAACW,QAAQ,CAAE,CAC3C;AACA3B,oBAAoB,CAACiE,cAAc,EAAI,CAAC,GAAGA,cAAc,CAAEnD,QAAQ,CAACE,IAAI,CAACW,QAAQ,CAAC,CAAC,CACnF,MAAO,CAAEY,OAAO,CAAE,IAAI,CAAEZ,QAAQ,CAAEb,QAAQ,CAACE,IAAI,CAACW,QAAS,CAAC,CAC5D,CAEA,MAAO,CAAEY,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,mCAAoC,CAAC,CACvE,CAAE,MAAOA,KAAK,CAAE,KAAAgD,gBAAA,CAAAC,qBAAA,CAAAC,gBAAA,CAAAC,qBAAA,CACdlD,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CACxDN,gBAAgB,CAAC,EAAAsD,gBAAA,CAAAhD,KAAK,CAACJ,QAAQ,UAAAoD,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBlD,IAAI,UAAAmD,qBAAA,iBAApBA,qBAAA,CAAsBvB,OAAO,GAAI,mCAAmC,CAAC,CACtF,MAAO,CAAEL,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,EAAAkD,gBAAA,CAAAlD,KAAK,CAACJ,QAAQ,UAAAsD,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBpD,IAAI,UAAAqD,qBAAA,iBAApBA,qBAAA,CAAsBzB,OAAO,GAAI,mCAAoC,CAAC,CACxG,CAAC,OAAS,CACRlC,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED;AACA,KAAM,CAAA4D,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF5D,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA9B,GAAG,CAAC+B,GAAG,CAAC,QAAQ,CAAC,CAExC,GAAID,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAACb,KAAK,CAAE,CACxCC,QAAQ,CAACU,QAAQ,CAACE,IAAI,CAACb,KAAK,CAAC,CAC7B,MAAO,CAAAW,QAAQ,CAACE,IAAI,CAACb,KAAK,CAC5B,CAEA,MAAO,EAAE,CACX,CAAE,MAAOe,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7CN,gBAAgB,CAAC,sBAAsB,CAAC,CACxC,MAAO,EAAE,CACX,CAAC,OAAS,CACRF,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED;AACA,KAAM,CAAA6D,cAAc,CAAG,cAAAA,CAAA,CAAwB,IAAjB,CAAAlD,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACxC,GAAI,CACFZ,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB;AACA,KAAM,CAAAa,WAAW,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACzC,GAAIL,OAAO,CAACmD,MAAM,CAAE/C,WAAW,CAACG,MAAM,CAAC,QAAQ,CAAEP,OAAO,CAACmD,MAAM,CAAC,CAChE,GAAInD,OAAO,CAACS,MAAM,CAAEL,WAAW,CAACG,MAAM,CAAC,QAAQ,CAAEP,OAAO,CAACS,MAAM,CAAC,CAChE,GAAIT,OAAO,CAACU,KAAK,CAAEN,WAAW,CAACG,MAAM,CAAC,OAAO,CAAEP,OAAO,CAACU,KAAK,CAAC,CAC7D,GAAIV,OAAO,CAACoD,IAAI,CAAEhD,WAAW,CAACG,MAAM,CAAC,MAAM,CAAEP,OAAO,CAACoD,IAAI,CAAC,CAE1D,KAAM,CAAAzC,KAAK,CAAGP,WAAW,CAACQ,QAAQ,CAAC,CAAC,CAAG,IAAIR,WAAW,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAG,EAAE,CAExE,KAAM,CAAAnB,QAAQ,CAAG,KAAM,CAAA9B,GAAG,CAAC+B,GAAG,CAAC,aAAaiB,KAAK,EAAE,CAAC,CAEpD,GAAIlB,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAACX,SAAS,CAAE,CAC5CC,YAAY,CAACQ,QAAQ,CAACE,IAAI,CAACX,SAAS,CAAC,CACrC,MAAO,CACLA,SAAS,CAAES,QAAQ,CAACE,IAAI,CAACX,SAAS,CAClCqE,KAAK,CAAE5D,QAAQ,CAACE,IAAI,CAAC0D,KAAK,CAC1BC,KAAK,CAAE7D,QAAQ,CAACE,IAAI,CAAC2D,KACvB,CAAC,CACH,CAEA,MAAO,CAAEtE,SAAS,CAAE,EAAE,CAAEqE,KAAK,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC9C,CAAE,MAAOzD,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjDN,gBAAgB,CAAC,0BAA0B,CAAC,CAC5C,MAAO,CAAEP,SAAS,CAAE,EAAE,CAAEqE,KAAK,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC9C,CAAC,OAAS,CACRjE,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED;AACA,KAAM,CAAAkE,iBAAiB,CAAG,cAAAA,CAAA,CAAwB,IAAjB,CAAAvD,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC3C,GAAI,CACFZ,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB;AACA,KAAM,CAAAa,WAAW,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACzC,GAAIL,OAAO,CAACwD,SAAS,CAAEpD,WAAW,CAACG,MAAM,CAAC,WAAW,CAAEP,OAAO,CAACwD,SAAS,CAAC,CACzE,GAAIxD,OAAO,CAACyD,OAAO,CAAErD,WAAW,CAACG,MAAM,CAAC,SAAS,CAAEP,OAAO,CAACyD,OAAO,CAAC,CACnE,GAAIzD,OAAO,CAAC0D,MAAM,CAAEtD,WAAW,CAACG,MAAM,CAAC,QAAQ,CAAEP,OAAO,CAAC0D,MAAM,CAAC,CAChE,GAAI1D,OAAO,CAACyB,SAAS,CAAErB,WAAW,CAACG,MAAM,CAAC,WAAW,CAAEP,OAAO,CAACyB,SAAS,CAAC,CACzE,GAAIzB,OAAO,CAAC2D,OAAO,CAAEvD,WAAW,CAACG,MAAM,CAAC,SAAS,CAAEP,OAAO,CAAC2D,OAAO,CAAC,CACnE,GAAI3D,OAAO,CAAC4D,UAAU,CAAExD,WAAW,CAACG,MAAM,CAAC,YAAY,CAAEP,OAAO,CAAC4D,UAAU,CAAC,CAC5E,GAAI5D,OAAO,CAACS,MAAM,CAAEL,WAAW,CAACG,MAAM,CAAC,QAAQ,CAAEP,OAAO,CAACS,MAAM,CAAC,CAChE,GAAIT,OAAO,CAACU,KAAK,CAAEN,WAAW,CAACG,MAAM,CAAC,OAAO,CAAEP,OAAO,CAACU,KAAK,CAAC,CAC7D,GAAIV,OAAO,CAACoD,IAAI,CAAEhD,WAAW,CAACG,MAAM,CAAC,MAAM,CAAEP,OAAO,CAACoD,IAAI,CAAC,CAE1D,KAAM,CAAAzC,KAAK,CAAGP,WAAW,CAACQ,QAAQ,CAAC,CAAC,CAAG,IAAIR,WAAW,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAG,EAAE,CAExE,KAAM,CAAAnB,QAAQ,CAAG,KAAM,CAAA9B,GAAG,CAAC+B,GAAG,CAAC,gBAAgBiB,KAAK,EAAE,CAAC,CAEvD,GAAIlB,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAACT,YAAY,CAAE,CAC/CC,eAAe,CAACM,QAAQ,CAACE,IAAI,CAACT,YAAY,CAAC,CAC3C,MAAO,CACLA,YAAY,CAAEO,QAAQ,CAACE,IAAI,CAACT,YAAY,CACxCmE,KAAK,CAAE5D,QAAQ,CAACE,IAAI,CAAC0D,KAAK,CAC1BC,KAAK,CAAE7D,QAAQ,CAACE,IAAI,CAAC2D,KACvB,CAAC,CACH,CAEA,MAAO,CAAEpE,YAAY,CAAE,EAAE,CAAEmE,KAAK,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAE,CAAC,CACjD,CAAE,MAAOzD,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpDN,gBAAgB,CAAC,6BAA6B,CAAC,CAC/C,MAAO,CAAEL,YAAY,CAAE,EAAE,CAAEmE,KAAK,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAE,CAAC,CACjD,CAAC,OAAS,CACRjE,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED;AACA,KAAM,CAAAwE,qBAAqB,CAAG,KAAO,CAAAC,WAAW,EAAK,CACnD,GAAI,CACFzE,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA9B,GAAG,CAAC+D,GAAG,CAAC,mBAAmB,CAAEoC,WAAW,CAAC,CAEhE,GAAIrE,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAAE,CAC3CrB,kBAAkB,CAACkB,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAAC,CAC1C,MAAO,CAAEsB,OAAO,CAAE,IAAI,CAAEtB,QAAQ,CAAEH,QAAQ,CAACE,IAAI,CAACC,QAAS,CAAC,CAC5D,CAEA,MAAO,CAAEsB,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,mCAAoC,CAAC,CACvE,CAAE,MAAOA,KAAK,CAAE,KAAAkE,gBAAA,CAAAC,qBAAA,CAAAC,iBAAA,CAAAC,qBAAA,CACdpE,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CACxDN,gBAAgB,CAAC,EAAAwE,gBAAA,CAAAlE,KAAK,CAACJ,QAAQ,UAAAsE,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBpE,IAAI,UAAAqE,qBAAA,iBAApBA,qBAAA,CAAsBzC,OAAO,GAAI,mCAAmC,CAAC,CACtF,MAAO,CAAEL,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,EAAAoE,iBAAA,CAAApE,KAAK,CAACJ,QAAQ,UAAAwE,iBAAA,kBAAAC,qBAAA,CAAdD,iBAAA,CAAgBtE,IAAI,UAAAuE,qBAAA,iBAApBA,qBAAA,CAAsB3C,OAAO,GAAI,mCAAoC,CAAC,CACxG,CAAC,OAAS,CACRlC,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED;AACA,KAAM,CAAA8E,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACF9E,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA9B,GAAG,CAAC+B,GAAG,CAAC,kBAAkB,CAAC,CAElD,GAAID,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAACyE,QAAQ,CAAE,CAC3C,MAAO,CAAElD,OAAO,CAAE,IAAI,CAAEkD,QAAQ,CAAE3E,QAAQ,CAACE,IAAI,CAACyE,QAAS,CAAC,CAC5D,CAEA,MAAO,CAAElD,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,+BAAgC,CAAC,CACnE,CAAE,MAAOA,KAAK,CAAE,KAAAwE,iBAAA,CAAAC,qBAAA,CAAAC,iBAAA,CAAAC,qBAAA,CACd1E,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtDN,gBAAgB,CAAC,EAAA8E,iBAAA,CAAAxE,KAAK,CAACJ,QAAQ,UAAA4E,iBAAA,kBAAAC,qBAAA,CAAdD,iBAAA,CAAgB1E,IAAI,UAAA2E,qBAAA,iBAApBA,qBAAA,CAAsB/C,OAAO,GAAI,+BAA+B,CAAC,CAClF,MAAO,CAAEL,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,EAAA0E,iBAAA,CAAA1E,KAAK,CAACJ,QAAQ,UAAA8E,iBAAA,kBAAAC,qBAAA,CAAdD,iBAAA,CAAgB5E,IAAI,UAAA6E,qBAAA,iBAApBA,qBAAA,CAAsBjD,OAAO,GAAI,+BAAgC,CAAC,CACpG,CAAC,OAAS,CACRlC,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED,KAAM,CAAAoF,oBAAoB,CAAG,KAAO,CAAAC,YAAY,EAAK,CACnD,GAAI,CACFrF,kBAAkB,CAAC,IAAI,CAAC,CACxBE,gBAAgB,CAAC,IAAI,CAAC,CAEtB,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA9B,GAAG,CAAC+D,GAAG,CAAC,kBAAkB,CAAEgD,YAAY,CAAC,CAEhE,GAAIjF,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAACyE,QAAQ,CAAE,CAC3C,MAAO,CAAElD,OAAO,CAAE,IAAI,CAAEkD,QAAQ,CAAE3E,QAAQ,CAACE,IAAI,CAACyE,QAAS,CAAC,CAC5D,CAEA,MAAO,CAAElD,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,kCAAmC,CAAC,CACtE,CAAE,MAAOA,KAAK,CAAE,KAAA8E,iBAAA,CAAAC,qBAAA,CAAAC,iBAAA,CAAAC,qBAAA,CACdhF,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvDN,gBAAgB,CAAC,EAAAoF,iBAAA,CAAA9E,KAAK,CAACJ,QAAQ,UAAAkF,iBAAA,kBAAAC,qBAAA,CAAdD,iBAAA,CAAgBhF,IAAI,UAAAiF,qBAAA,iBAApBA,qBAAA,CAAsBrD,OAAO,GAAI,kCAAkC,CAAC,CACrF,MAAO,CAAEL,OAAO,CAAE,KAAK,CAAErB,KAAK,CAAE,EAAAgF,iBAAA,CAAAhF,KAAK,CAACJ,QAAQ,UAAAoF,iBAAA,kBAAAC,qBAAA,CAAdD,iBAAA,CAAgBlF,IAAI,UAAAmF,qBAAA,iBAApBA,qBAAA,CAAsBvD,OAAO,GAAI,kCAAmC,CAAC,CACvG,CAAC,OAAS,CACRlC,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAED,mBACEvB,IAAA,CAACC,eAAe,CAACgH,QAAQ,EACvBC,KAAK,CAAE,CACL;AACA1G,eAAe,CACfuF,qBAAqB,CAErB;AACArF,QAAQ,CACRuB,aAAa,CACbc,aAAa,CACbW,aAAa,CACbS,aAAa,CAEb;AACAvD,iBAAiB,CACjB8D,sBAAsB,CACtBE,qBAAqB,CAErB;AACA5D,KAAK,CACLmE,UAAU,CAEV;AACAjE,SAAS,CACTkE,cAAc,CAEd;AACAhE,YAAY,CACZqE,iBAAiB,CAEjB;AACAY,iBAAiB,CACjBM,oBAAoB,CAEpB;AACArF,eAAe,CACfE,aACF,CAAE,CAAAnB,QAAA,CAEDA,QAAQ,CACe,CAAC,CAE/B,CAAC,CAED,cAAe,CAAAJ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}